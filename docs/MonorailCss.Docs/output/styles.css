

@layer theme, base, components, utilities;

@layer theme {
  :root, :host {
    --color-accent-300: oklch(0.827 0.091 135.000);
    --color-accent-400: oklch(0.742 0.140 135.000);
    --color-accent-500: oklch(0.648 0.147 135.000);
    --color-accent-700: oklch(0.469 0.107 135.000);
    --color-accent-800: oklch(0.394 0.090 135.000);
    --color-amber-100: oklch(96.2% 0.059 95.617);
    --color-amber-200: oklch(92.4% 0.12 95.746);
    --color-amber-300: oklch(87.9% 0.169 91.605);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-amber-700: oklch(55.5% 0.163 48.998);
    --color-amber-800: oklch(47.3% 0.137 46.201);
    --color-amber-900: oklch(41.4% 0.112 45.904);
    --color-base-100: var(--color-zinc-100);
    --color-base-200: var(--color-zinc-200);
    --color-base-300: var(--color-zinc-300);
    --color-base-400: var(--color-zinc-400);
    --color-base-50: var(--color-zinc-50);
    --color-base-500: var(--color-zinc-500);
    --color-base-600: var(--color-zinc-600);
    --color-base-700: var(--color-zinc-700);
    --color-base-800: var(--color-zinc-800);
    --color-base-900: var(--color-zinc-900);
    --color-base-950: var(--color-zinc-950);
    --color-black: #000;
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-emerald-100: oklch(95% 0.052 163.051);
    --color-emerald-200: oklch(90.5% 0.093 164.15);
    --color-emerald-500: oklch(69.6% 0.17 162.48);
    --color-emerald-600: oklch(59.6% 0.145 163.225);
    --color-emerald-700: oklch(50.8% 0.118 165.612);
    --color-emerald-800: oklch(43.2% 0.095 166.913);
    --color-emerald-900: oklch(37.8% 0.077 168.94);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-primary-100: oklch(0.936 0.032 45.000);
    --color-primary-200: oklch(0.881 0.061 45.000);
    --color-primary-300: oklch(0.827 0.091 45.000);
    --color-primary-400: oklch(0.742 0.140 45.000);
    --color-primary-50: oklch(0.978 0.011 45.000);
    --color-primary-500: oklch(0.648 0.147 45.000);
    --color-primary-600: oklch(0.573 0.130 45.000);
    --color-primary-700: oklch(0.469 0.107 45.000);
    --color-primary-800: oklch(0.394 0.090 45.000);
    --color-primary-900: oklch(0.320 0.073 45.000);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-rose-100: oklch(94.1% 0.03 12.58);
    --color-rose-200: oklch(89.2% 0.058 10.001);
    --color-rose-500: oklch(64.5% 0.246 16.439);
    --color-rose-700: oklch(51.4% 0.222 16.935);
    --color-rose-800: oklch(45.5% 0.188 13.697);
    --color-rose-900: oklch(41% 0.159 10.272);
    --color-sky-100: oklch(95.1% 0.026 236.824);
    --color-sky-200: oklch(90.1% 0.058 230.902);
    --color-sky-500: oklch(68.5% 0.169 237.323);
    --color-sky-700: oklch(50% 0.134 242.749);
    --color-sky-800: oklch(44.3% 0.11 240.79);
    --color-sky-900: oklch(39.1% 0.09 240.876);
    --color-tertiary-one-300: oklch(0.827 0.091 90.000);
    --color-tertiary-one-400: oklch(0.742 0.140 90.000);
    --color-tertiary-one-600: oklch(0.573 0.130 90.000);
    --color-tertiary-one-800: oklch(0.394 0.090 90.000);
    --color-tertiary-two-300: oklch(0.827 0.091 0.000);
    --color-tertiary-two-700: oklch(0.469 0.107 0.000);
    --color-tertiary-two-800: oklch(0.394 0.090 0.000);
    --color-white: #fff;
    --color-zinc-100: oklch(96.7% 0.001 286.375);
    --color-zinc-200: oklch(92% 0.004 286.32);
    --color-zinc-300: oklch(87.1% 0.006 286.286);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-50: oklch(98.5% 0 0);
    --color-zinc-500: oklch(55.2% 0.016 285.938);
    --color-zinc-600: oklch(44.2% 0.017 285.786);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-zinc-950: oklch(14.1% 0.005 285.823);
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-7xl: 80rem;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
    --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --radius-2xl: 1rem;
    --radius-lg: 0.5rem;
    --radius-md: 0.375rem;
    --radius-xl: 0.75rem;
    --spacing: 0.25rem;
    --text-2xl: 1.5rem;
    --text-3xl: 1.875rem;
    --text-4xl: 2.25rem;
    --text-5xl: 3rem;
    --text-6xl: 3.75rem;
    --text-base: 1rem;
    --text-sm: 0.875rem;
    --text-xl: 1.25rem;
    --text-xs: 0.75rem;
  }
}

@layer base {
  /*
    1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
    2. Remove default margins and padding
    3. Reset all borders.
  */

  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    box-sizing: border-box; /* 1 */
    margin: 0; /* 2 */
    padding: 0; /* 2 */
    border: 0 solid; /* 3 */
  }

  /*
    1. Use a consistent sensible line-height in all browsers.
    2. Prevent adjustments of font size after orientation changes in iOS.
    3. Use a more readable tab size.
    4. Use the user's configured `sans` font-family by default.
    5. Use the user's configured `sans` font-feature-settings by default.
    6. Use the user's configured `sans` font-variation-settings by default.
    7. Disable tap highlights on iOS.
  */

  html,
  :host {
    line-height: 1.5; /* 1 */
    -webkit-text-size-adjust: 100%; /* 2 */
    tab-size: 4; /* 3 */
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'); /* 4 */
    font-feature-settings: var(--default-font-feature-settings, normal); /* 5 */
    font-variation-settings: var(--default-font-variation-settings, normal); /* 6 */
    -webkit-tap-highlight-color: transparent; /* 7 */
  }

  /*
    1. Add the correct height in Firefox.
    2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
    3. Reset the default border style to a 1px solid border.
  */

  hr {
    height: 0; /* 1 */
    color: inherit; /* 2 */
    border-top-width: 1px; /* 3 */
  }

  /*
    Add the correct text decoration in Chrome, Edge, and Safari.
  */

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  /*
    Remove the default font size and weight for headings.
  */

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  /*
    Reset links to optimize for opt-in styling instead of opt-out.
  */

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  /*
    Add the correct font weight in Edge and Safari.
  */

  b,
  strong {
    font-weight: bolder;
  }

  /*
    1. Use the user's configured `mono` font-family by default.
    2. Use the user's configured `mono` font-feature-settings by default.
    3. Use the user's configured `mono` font-variation-settings by default.
    4. Correct the odd `em` font sizing in all browsers.
  */

  code,
  kbd,
  samp,
  pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace); /* 1 */
    font-feature-settings: var(--default-mono-font-feature-settings, normal); /* 2 */
    font-variation-settings: var(--default-mono-font-variation-settings, normal); /* 3 */
    font-size: 1em; /* 4 */
  }

  /*
    Add the correct font size in all browsers.
  */

  small {
    font-size: 80%;
  }

  /*
    Prevent `sub` and `sup` elements from affecting the line height in all browsers.
  */

  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }

  sub {
    bottom: -0.25em;
  }

  sup {
    top: -0.5em;
  }

  /*
    1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
    2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
    3. Remove gaps between table borders by default.
  */

  table {
    text-indent: 0; /* 1 */
    border-color: inherit; /* 2 */
    border-collapse: collapse; /* 3 */
  }

  /*
    Use the modern Firefox focus style for all focusable elements.
  */

  :-moz-focusring {
    outline: auto;
  }

  /*
    Add the correct vertical alignment in Chrome and Firefox.
  */

  progress {
    vertical-align: baseline;
  }

  /*
    Add the correct display in Chrome and Safari.
  */

  summary {
    display: list-item;
  }

  /*
    Make lists unstyled by default.
  */

  ol,
  ul,
  menu {
    list-style: none;
  }

  /*
    1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
    2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
        This can trigger a poorly considered lint error in some tools but is included by design.
  */

  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    display: block; /* 1 */
    vertical-align: middle; /* 2 */
  }

  /*
    Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
  */

  img,
  video {
    max-width: 100%;
    height: auto;
  }

  /*
    1. Inherit font styles in all browsers.
    2. Remove border radius in all browsers.
    3. Remove background color in all browsers.
    4. Ensure consistent opacity for disabled states in all browsers.
  */

  button,
  input,
  select,
  optgroup,
  textarea,
  ::file-selector-button {
    font: inherit; /* 1 */
    font-feature-settings: inherit; /* 1 */
    font-variation-settings: inherit; /* 1 */
    letter-spacing: inherit; /* 1 */
    color: inherit; /* 1 */
    border-radius: 0; /* 2 */
    background-color: transparent; /* 3 */
    opacity: 1; /* 4 */
  }

  /*
    Restore default font weight.
  */

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  /*
    Restore indentation.
  */

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  /*
    Restore space after button.
  */

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  /*
    Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
  */

  ::placeholder {
    opacity: 1;
  }

  /*
    Set the default placeholder color to a semi-transparent version of the current text color in browsers that do not
    crash when using `color-mix(…)` with `currentcolor`. (https://github.com/tailwindlabs/tailwindcss/issues/17194)
  */

  @supports (not (-webkit-appearance: -apple-pay-button)) /* Not Safari */ or
    (contain-intrinsic-size: 1px) /* Safari 17+ */ {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }

  /*
    Prevent resizing textareas horizontally by default.
  */

  textarea {
    resize: vertical;
  }

  /*
    Remove the inner padding in Chrome and Safari on macOS.
  */

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  /*
    1. Ensure date/time inputs have the same height when empty in iOS Safari.
    2. Ensure text alignment can be changed on date/time inputs in iOS Safari.
  */

  ::-webkit-date-and-time-value {
    min-height: 1lh; /* 1 */
    text-align: inherit; /* 2 */
  }

  /*
    Prevent height from changing on date/time inputs in macOS Safari when the input is set to `display: block`.
  */

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  /*
    Remove excess padding from pseudo-elements in date/time inputs to ensure consistent height across browsers.
  */

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit,
  ::-webkit-datetime-edit-year-field,
  ::-webkit-datetime-edit-month-field,
  ::-webkit-datetime-edit-day-field,
  ::-webkit-datetime-edit-hour-field,
  ::-webkit-datetime-edit-minute-field,
  ::-webkit-datetime-edit-second-field,
  ::-webkit-datetime-edit-millisecond-field,
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  /*
    Center dropdown marker shown on inputs with paired `<datalist>`s in Chrome. (https://github.com/tailwindlabs/tailwindcss/issues/18499)
  */

  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }

  /*
    Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
  */

  :-moz-ui-invalid {
    box-shadow: none;
  }

  /*
    Correct the inability to style the border radius in iOS Safari.
  */

  button,
  input:where([type='button'], [type='reset'], [type='submit']),
  ::file-selector-button {
    appearance: button;
  }

  /*
    Correct the cursor style of increment and decrement buttons in Safari.
  */

  ::-webkit-inner-spin-button,
  ::-webkit-outer-spin-button {
    height: auto;
  }

  /*
    Make elements with the HTML hidden attribute stay hidden by default.
  */

  [hidden]:where(:not([hidden='until-found'])) {
    display: none!important;
  }
}

@layer components {
  .hljs-punctuation {
    color: var(--color-base-800);
  }
  .hljs-punctuation:where(.dark, .dark *) {
    color: var(--color-base-300);
  }
  .search-highlight {
    color: var(--color-base-500);
    background-color: inherit;
  }
  .search-highlight:where(.dark, .dark *) {
    color: var(--color-base-50);
  }
  .code-highlight-wrapper .word-highlight {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-primary-600);
    border-radius: 0.25rem;
    padding-inline: calc(var(--spacing) * 0.5);
    padding-block: calc(var(--spacing) * 0);
    background-color: color-mix(in oklab, var(--color-primary-100) 25%, transparent);
  }
  .code-highlight-wrapper .word-highlight:where(.dark, .dark *) {
    border-color: color-mix(in oklab, var(--color-primary-300) 25%, transparent);
    background-color: color-mix(in oklab, var(--color-primary-500) 10%, transparent);
  }
  .hljs-built_in {
    color: var(--color-accent-700);
  }
  .hljs-built_in:where(.dark, .dark *) {
    color: var(--color-accent-300);
  }
  .code-highlight-wrapper .standalone-code-container {
    background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in oklab, var(--color-base-300) 75%, transparent);
    border-radius: var(--radius-xl);
    overflow-x: auto;
  }
  .code-highlight-wrapper .standalone-code-container:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    border-color: color-mix(in oklab, var(--color-base-700) 50%, transparent);
  }
  .code-highlight-wrapper .word-highlight-message {
    font-family: var(--font-sans);
    position: absolute;
    top: 100%;
    left: calc(var(--spacing) * 0);
    margin-top: calc(var(--spacing) * 3);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-base-800);
    background-color: color-mix(in oklab, var(--color-base-200) 25%, transparent);
    border-radius: 0.25rem;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in oklab, var(--color-base-500) 50%, transparent);
    white-space: nowrap;
    z-index: 10;
    -webkit-user-select: none;
    user-select: none;
    pointer-events: none;
  }
  .code-highlight-wrapper .word-highlight-message:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-base-700) 10%, transparent);
    color: var(--color-base-400);
  }
  .hljs-regexp {
    color: var(--color-tertiary-one-800);
  }
  .hljs-regexp:where(.dark, .dark *) {
    color: var(--color-tertiary-one-300);
  }
  .hljs-keyword {
    color: var(--color-primary-800);
  }
  .hljs-keyword:where(.dark, .dark *) {
    color: var(--color-primary-300);
  }
  .code-highlight-wrapper .standalone-code-highlight pre {
    color: color-mix(in oklab, var(--color-base-900) 90%, transparent);
  }
  .code-highlight-wrapper .standalone-code-highlight pre:where(.dark, .dark *) {
    color: color-mix(in oklab, var(--color-base-100) 90%, transparent);
  }
  .hljs-tag {
    color: var(--color-primary-800);
  }
  .hljs-tag:where(.dark, .dark *) {
    color: var(--color-primary-300);
  }
  .hljs-attr {
    color: var(--color-tertiary-two-800);
  }
  .hljs-attr:where(.dark, .dark *) {
    color: var(--color-tertiary-two-300);
  }
  .code-highlight-wrapper pre.has-focused  .line.focused {
    --tw-blur: blur(0);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    opacity: 100%;
  }
  .hljs-class {
    color: var(--color-primary-800);
  }
  .hljs-class:where(.dark, .dark *) {
    color: var(--color-primary-300);
  }
  .hljs-link {
    color: var(--color-blue-800);
  }
  .hljs-link:where(.dark, .dark *) {
    color: var(--color-blue-300);
  }
  .hljs-addition {
    color: var(--color-green-800);
  }
  .hljs-addition:where(.dark, .dark *) {
    color: var(--color-green-300);
  }
  .code-highlight-wrapper pre.has-focused:hover .line {
    --tw-blur: blur(0);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    opacity: 100%;
  }
  .search-modal-loading {
    text-align: center;
    color: var(--color-base-600);
    padding-block: calc(var(--spacing) * 4);
  }
  .search-modal-loading:where(.dark, .dark *) {
    color: var(--color-base-400);
  }
  .search-result-header {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    margin-bottom: calc(var(--spacing) * 1);
  }
  .markdown-alert-title span {
    display: none;
  }
  .markdown-alert {
    margin-block: calc(var(--spacing) * 6);
    padding: calc(var(--spacing) * 4);
    display: flex;
    flex-direction: row;
    gap: calc(var(--spacing) * 2.5);
    border-radius: var(--radius-2xl);
    border-style: var(--tw-border-style);
    border-width: 1px;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .search-modal-no-results {
    text-align: center;
    color: var(--color-base-600);
    padding-block: calc(var(--spacing) * 4);
  }
  .search-modal-no-results:where(.dark, .dark *) {
    color: var(--color-base-400);
  }
  .search-result-item {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-base-200);
    padding-block: calc(var(--spacing) * 4);
  }
  .search-result-item:where(.dark, .dark *) {
    border-color: var(--color-base-800);
  }
  .search-result-item:last-child {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0px;
  }
  .hljs-meta {
    color: var(--color-base-800);
  }
  .hljs-meta:where(.dark, .dark *) {
    color: var(--color-base-300);
  }
  .code-highlight-wrapper .line.error {
    background-color: color-mix(in oklab, var(--color-red-300) 50%, transparent);
  }
  .code-highlight-wrapper .line.error:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
  }
  .hljs-deletion {
    color: var(--color-red-800);
  }
  .hljs-deletion:where(.dark, .dark *) {
    color: var(--color-red-300);
  }
  .hljs-symbol {
    color: var(--color-tertiary-two-800);
  }
  .hljs-symbol:where(.dark, .dark *) {
    color: var(--color-tertiary-two-300);
  }
  .search-modal-backdrop {
    position: fixed;
    inset: calc(var(--spacing) * 0);
    background-color: color-mix(in oklab, var(--color-base-950) 50%, transparent);
    --tw-backdrop-blur: blur(8px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    z-index: 50;
    padding: calc(var(--spacing) * 4);
  }
  @media (min-width: 768px) {
    .search-modal-backdrop {
      padding: calc(var(--spacing) * 16);
    }
  }
  .hljs-number {
    color: var(--color-tertiary-one-800);
  }
  .hljs-number:where(.dark, .dark *) {
    color: var(--color-tertiary-one-300);
  }
  .hljs-string {
    color: var(--color-tertiary-one-800);
  }
  .hljs-string:where(.dark, .dark *) {
    color: var(--color-tertiary-one-300);
  }
  .search-result-title .search-highlight {
    color: var(--color-primary-500);
    background-color: inherit;
  }
  .search-result-title .search-highlight:where(.dark, .dark *) {
    color: var(--color-primary-100);
  }
  .hljs-type {
    color: var(--color-base-700);
  }
  .hljs-type:where(.dark, .dark *) {
    color: var(--color-base-300);
  }
  .code-highlight-wrapper .word-highlight-wrapper {
    position: relative;
    display: inline-block;
  }
  .search-result-url {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-base-500);
    margin-top: calc(var(--spacing) * 2);
  }
  .search-result-url:where(.dark, .dark *) {
    color: var(--color-base-500);
  }
  .markdown-alert svg {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    margin-top: calc(var(--spacing) * 0.5);
  }
  .hljs {
    color: var(--color-base-900);
  }
  .hljs:where(.dark, .dark *) {
    color: var(--color-base-200);
  }
  .hljs-operator {
    color: var(--color-base-800);
  }
  .hljs-operator:where(.dark, .dark *) {
    color: var(--color-base-300);
  }
  .code-highlight-wrapper .line:has(.word-highlight-wrapper) {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .markdown-alert-important {
    fill: var(--color-sky-700);
    background-color: color-mix(in oklab, var(--color-sky-100) 75%, transparent);
    border-color: color-mix(in oklab, var(--color-sky-500) 20%, transparent);
    color: var(--color-sky-800);
  }
  .markdown-alert-important:where(.dark, .dark *) {
    fill: var(--color-sky-500);
    border-color: color-mix(in oklab, var(--color-sky-500) 30%, transparent);
    background-color: color-mix(in oklab, var(--color-sky-900) 25%, transparent);
    color: var(--color-sky-200);
  }
  .word-highlight-arrow-outer {
    width: calc(var(--spacing) * 0);
    height: calc(var(--spacing) * 0);
    border-left-color: transparent;
    border-right-color: transparent;
    border-bottom-color: color-mix(in oklab, var(--color-base-500) 50%, transparent);
  }
  .hljs-function {
    color: var(--color-accent-800);
  }
  .hljs-function:where(.dark, .dark *) {
    color: var(--color-accent-300);
  }
  .search-modal-icon {
    position: absolute;
    left: calc(var(--spacing) * 3);
    top: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    color: var(--color-base-400);
  }
  .search-modal-icon:where(.dark, .dark *) {
    color: var(--color-base-500);
  }
  .markdown-alert-tip {
    fill: var(--color-blue-700);
    background-color: color-mix(in oklab, var(--color-blue-100) 75%, transparent);
    border-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    color: var(--color-blue-800);
  }
  .markdown-alert-tip:where(.dark, .dark *) {
    fill: var(--color-blue-500);
    border-color: color-mix(in oklab, var(--color-blue-500) 30%, transparent);
    background-color: color-mix(in oklab, var(--color-blue-900) 25%, transparent);
    color: var(--color-blue-200);
  }
  .search-result-description {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-base-600);
    margin-bottom: calc(var(--spacing) * 2);
  }
  .search-result-description:where(.dark, .dark *) {
    color: var(--color-base-400);
  }
  .hljs-params {
    color: var(--color-accent-800);
  }
  .hljs-params:where(.dark, .dark *) {
    color: var(--color-accent-300);
  }
  .search-result-link {
    display: block;
    border-radius: var(--radius-md);
    padding: calc(var(--spacing) * 2);
    margin: calc(var(--spacing) * -2);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
  .search-result-link:hover {
    background-color: var(--color-base-50);
  }
  .search-result-link:where(.dark, .dark *):hover {
    background-color: var(--color-base-800);
  }
  .search-result-score {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-base-500);
    margin-left: calc(var(--spacing) * 2);
  }
  .search-result-score:where(.dark, .dark *) {
    color: var(--color-base-500);
  }
  .search-result-snippet {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-base-700);
  }
  .search-result-snippet:where(.dark, .dark *) {
    color: var(--color-base-500);
  }
  .search-modal-header {
    padding: calc(var(--spacing) * 4);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-base-200);
  }
  .search-modal-header:where(.dark, .dark *) {
    border-color: var(--color-base-700);
  }
  .code-highlight-wrapper .line {
    display: inline-block;
    transition-property: all;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: 300ms;
    --tw-duration: 300ms;
    padding-inline: calc(var(--spacing) * 4);
    margin-inline: calc(var(--spacing) * -4);
    width: calc(100% + 2rem);
    position: relative;
  }
  .hljs-selector-tag {
    color: var(--color-primary-700);
  }
  .hljs-selector-tag:where(.dark, .dark *) {
    color: var(--color-primary-300);
  }
  .hljs-quote {
    color: color-mix(in oklab, var(--color-base-800) 50%, transparent);
    font-style: italic;
  }
  .hljs-quote:where(.dark, .dark *) {
    color: var(--color-base-300);
  }
  .hljs-attribute {
    color: var(--color-tertiary-two-800);
  }
  .hljs-attribute:where(.dark, .dark *) {
    color: var(--color-tertiary-two-300);
  }
  .code-highlight-wrapper .line.diff-add {
    background-color: color-mix(in oklab, var(--color-emerald-600) 20%, transparent);
  }
  .code-highlight-wrapper .line.diff-add:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-emerald-900) 20%, transparent);
  }
  .code-highlight-wrapper .line.diff-add::before {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    --tw-content: '+';
    content: var(--tw-content);
    display: none;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    position: absolute;
    left: calc(var(--spacing) * 1);
    color: var(--color-green-700);
  }
  @media (min-width: 768px) {
    .code-highlight-wrapper .line.diff-add::before {
      display: block;
    }
  }
  .code-highlight-wrapper .line.diff-add::before {
    color: var(--color-green-500);
  }
  .tab-panel {
    display: none;
    padding-block: calc(var(--spacing) * 3);
  }
  .tab-panel[data-selected="true"] {
    display: block;
  }
  .markdown-alert-note {
    fill: var(--color-emerald-700);
    background-color: color-mix(in oklab, var(--color-emerald-100) 75%, transparent);
    border-color: color-mix(in oklab, var(--color-emerald-500) 20%, transparent);
    color: var(--color-emerald-800);
  }
  .markdown-alert-note:where(.dark, .dark *) {
    fill: var(--color-emerald-500);
    border-color: color-mix(in oklab, var(--color-emerald-500) 30%, transparent);
    background-color: color-mix(in oklab, var(--color-emerald-900) 25%, transparent);
    color: var(--color-emerald-200);
  }
  .hljs-variable {
    color: var(--color-tertiary-two-800);
  }
  .hljs-variable:where(.dark, .dark *) {
    color: var(--color-tertiary-two-300);
  }
  .code-highlight-wrapper .line.highlight {
    background-color: color-mix(in oklab, var(--color-primary-700) 20%, transparent);
  }
  .code-highlight-wrapper .line.highlight:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-primary-500) 20%, transparent);
  }
  .tab-container {
    display: flex;
    flex-direction: column;
    background-color: var(--color-base-100);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in oklab, var(--color-base-300) 75%, transparent);
    border-radius: var(--radius-xl);
    overflow-x: auto;
  }
  .tab-container:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-base-950) 25%, transparent);
    border-color: color-mix(in oklab, var(--color-base-700) 50%, transparent);
  }
  .code-highlight-wrapper pre  {
    padding-block: calc(var(--spacing) * 2);
    padding-inline: calc(var(--spacing) * 4);
    overflow-x: auto;
    font-family: var(--font-mono);
    font-size: var(--text-xs);
    line-height: 1.625;
    --tw-leading: 1.625;
    width: 100%;
  }
  @media (min-width: 768px) {
    .code-highlight-wrapper pre  {
      padding-inline: calc(var(--spacing) * 4);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .code-highlight-wrapper pre :where(.dark, .dark *) {
    color-scheme: dark;
  }
  .tab-list {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    padding-inline: calc(var(--spacing) * 4);
    padding-top: calc(var(--spacing) * 1);
    background-color: color-mix(in oklab, var(--color-base-200) 90%, transparent);
    column-gap: calc(var(--spacing) * 2);
  }
  @media (min-width: 1024px) {
    .tab-list {
      column-gap: calc(var(--spacing) * 4);
    }
  }
  .tab-list:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-base-800) 50%, transparent);
  }
  .hljs-title {
    color: var(--color-accent-800);
  }
  .hljs-title:where(.dark, .dark *) {
    color: var(--color-accent-300);
  }
  .search-modal-content {
    top: calc(var(--spacing) * 16);
    margin-inline: auto;
    width: 100%;
    margin-top: calc(var(--spacing) * 8);
    max-width: var(--container-2xl);
    background-color: var(--color-base-100);
    border-radius: var(--radius-lg);
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-200);
  }
  .search-modal-content:where(.dark, .dark *) {
    background-color: var(--color-base-900);
    border-color: var(--color-base-700);
  }
  .word-highlight-arrow-container {
    position: absolute;
    top: calc(var(--spacing) * -1.5);
    left: calc(var(--spacing) * 10);
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .search-modal-error {
    text-align: center;
    color: var(--color-red-600);
    padding-block: calc(var(--spacing) * 4);
  }
  .search-modal-error:where(.dark, .dark *) {
    color: var(--color-red-400);
  }
  .code-highlight-wrapper pre.has-focused .line {
    --tw-blur: blur(0.05rem);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    opacity: 75%;
  }
  .search-modal-placeholder {
    text-align: center;
    color: var(--color-base-600);
    padding-block: calc(var(--spacing) * 4);
  }
  .search-modal-placeholder:where(.dark, .dark *) {
    color: var(--color-base-400);
  }
  .hljs-name {
    color: var(--color-tertiary-two-800);
  }
  .hljs-name:where(.dark, .dark *) {
    color: var(--color-tertiary-two-300);
  }
  .search-modal-input {
    width: 100%;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    padding-left: calc(var(--spacing) * 10);
    background-color: var(--color-base-50);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    border-radius: var(--radius-md);
    color: var(--color-base-900);
  }
  .search-modal-input:where(.dark, .dark *) {
    background-color: var(--color-base-800);
    border-color: var(--color-base-600);
    color: var(--color-base-100);
  }
  .search-modal-input:focus {
    --tw-outline-style: none;
    outline-style: none;
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: color-mix(in oklab, var(--color-primary-500) 50%, transparent);
    border-color: var(--color-primary-500);
  }
  .hljs-comment {
    color: var(--color-base-600);
    font-style: italic;
  }
  .hljs-comment:where(.dark, .dark *) {
    color: var(--color-base-400);
  }
  .tab-button {
    white-space: nowrap;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: transparent;
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: color-mix(in oklab, var(--color-base-900) 90%, transparent);
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
  .tab-button:hover {
    color: var(--color-accent-500);
  }
  .tab-button:disabled {
    pointer-events: none;
    opacity: 50%;
  }
  .tab-button[data-selected="true"] {
    color: var(--color-accent-700);
    border-color: var(--color-accent-700);
  }
  .tab-button:where(.dark, .dark *) {
    color: color-mix(in oklab, var(--color-base-100) 90%, transparent);
  }
  .tab-button:where(.dark, .dark *):hover {
    color: var(--color-accent-300);
  }
  .tab-button:where(.dark, .dark *)[data-selected="true"] {
    color: var(--color-accent-400);
    border-color: var(--color-accent-400);
  }
  .hljs-literal {
    color: var(--color-primary-800);
  }
  .hljs-literal:where(.dark, .dark *) {
    color: var(--color-primary-300);
  }
  .code-highlight-wrapper .word-highlight-with-message {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-primary-600);
    border-radius: 0.25rem;
    padding-inline: calc(var(--spacing) * 1);
    padding-block: calc(var(--spacing) * 1);
    background-color: color-mix(in oklab, var(--color-primary-100) 25%, transparent);
    position: relative;
  }
  .code-highlight-wrapper .word-highlight-with-message:where(.dark, .dark *) {
    border-color: color-mix(in oklab, var(--color-primary-300) 25%, transparent);
    background-color: color-mix(in oklab, var(--color-primary-500) 10%, transparent);
  }
  .code-highlight-wrapper .word-highlight-message::selection {
    background-color: transparent;
  }
  .search-modal-results {
    max-height: calc(var(--spacing) * 96);
    overflow-y: auto;
    padding-inline: calc(var(--spacing) * 4);
  }
  .search-modal-results:where(.dark, .dark *) {
    color-scheme: dark;
  }
  .word-highlight-arrow-inner {
    position: absolute;
    width: calc(var(--spacing) * 0);
    height: calc(var(--spacing) * 0);
    border-left-color: transparent;
    border-right-color: transparent;
    border-bottom-color: color-mix(in oklab, var(--color-base-200) 25%, transparent);
    top: calc(var(--spacing) * 0);
    left: calc(1/2 * 100%);
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .word-highlight-arrow-inner:where(.dark, .dark *) {
    border-bottom-color: color-mix(in oklab, var(--color-base-700) 10%, transparent);
  }
  .code-highlight-wrapper pre code {
    font-family: var(--font-mono);
  }
  .search-modal-input-container {
    position: relative;
  }
  .search-result-title {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-primary-700);
    flex: 1;
  }
  .search-result-title:where(.dark, .dark *) {
    color: var(--color-primary-400);
  }
  .markdown-alert-caution {
    fill: var(--color-amber-700);
    background-color: color-mix(in oklab, var(--color-amber-100) 75%, transparent);
    border-color: color-mix(in oklab, var(--color-amber-500) 20%, transparent);
    color: var(--color-amber-800);
  }
  .markdown-alert-caution:where(.dark, .dark *) {
    fill: var(--color-amber-500);
    border-color: color-mix(in oklab, var(--color-amber-500) 30%, transparent);
    background-color: color-mix(in oklab, var(--color-amber-900) 25%, transparent);
    color: var(--color-amber-200);
  }
  .markdown-alert-warning {
    fill: var(--color-rose-700);
    background-color: color-mix(in oklab, var(--color-rose-100) 75%, transparent);
    border-color: color-mix(in oklab, var(--color-rose-500) 20%, transparent);
    color: var(--color-rose-800);
  }
  .markdown-alert-warning:where(.dark, .dark *) {
    fill: var(--color-rose-500);
    border-color: color-mix(in oklab, var(--color-rose-500) 30%, transparent);
    background-color: color-mix(in oklab, var(--color-rose-900) 25%, transparent);
    color: var(--color-rose-200);
  }
  .markdown-alert a {
    text-decoration-line: underline;
  }
  .code-highlight-wrapper .line.warning {
    background-color: color-mix(in oklab, var(--color-amber-300) 50%, transparent);
  }
  .code-highlight-wrapper .line.warning:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-amber-400) 20%, transparent);
  }
  .code-highlight-wrapper .line.diff-remove {
    background-color: color-mix(in oklab, var(--color-red-600) 20%, transparent);
    opacity: 50%;
  }
  .code-highlight-wrapper .line.diff-remove:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-red-900) 20%, transparent);
  }
  .code-highlight-wrapper .line.diff-remove::before {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    --tw-content: '-';
    content: var(--tw-content);
    display: none;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    position: absolute;
    left: calc(var(--spacing) * 1);
    color: var(--color-red-700);
  }
  @media (min-width: 768px) {
    .code-highlight-wrapper .line.diff-remove::before {
      display: block;
    }
  }
  .code-highlight-wrapper .line.diff-remove::before:where(.dark, .dark *) {
    color: var(--color-red-500);
  }
}

@layer utilities {
  .prose {
    max-width: 65ch;
    font-size: 1rem;
    line-height: 1.75;
    --tw-prose-body: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
    --tw-prose-headings: oklch(21% 0.034 264.665);
    --tw-prose-invert-headings: #fff;
    --tw-prose-lead: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
    --tw-prose-links: oklch(21% 0.034 264.665);
    --tw-prose-invert-links: #fff;
    --tw-prose-bold: oklch(21% 0.034 264.665);
    --tw-prose-invert-bold: #fff;
    --tw-prose-counters: oklch(55.1% 0.027 264.364);
    --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
    --tw-prose-bullets: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
    --tw-prose-hr: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
    --tw-prose-quotes: oklch(21% 0.034 264.665);
    --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
    --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
    --tw-prose-captions: oklch(55.1% 0.027 264.364);
    --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
    --tw-prose-kbd: oklch(21% 0.034 264.665);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-kbd-shadows: 107 114 128;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-code: oklch(21% 0.034 264.665);
    --tw-prose-invert-code: #fff;
    --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
    --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
    --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
    color: var(--tw-prose-body);
  }
  .prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    color: var(--tw-prose-lead);
  }
  .prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
    font-weight: 800;
    color: var(--tw-prose-headings);
  }
  .prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
    font-weight: 800;
    color: var(--tw-prose-headings);
  }
  .prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
    font-weight: 800;
    color: var(--tw-prose-headings);
  }
  .prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
    font-weight: 700;
    color: var(--tw-prose-headings);
  }
  .prose :where(h5):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
    font-weight: 700;
    color: var(--tw-prose-headings);
  }
  .prose :where(h6):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
    font-weight: 700;
    color: var(--tw-prose-headings);
  }
  .prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
    border-inline-start-width: 0.25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: "\201C""\201D""\2018""\2019";
    font-style: italic;
    font-weight: 500;
    color: var(--tw-prose-quotes);
    border-left-width: 4px;
    padding-left: 1rem;
    border-color: oklch(0.469 0.107 45.000);
  }
  .prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    color: var(--tw-prose-links);
    text-decoration: none;
    font-weight: 700;
  }
  .prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  .prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.875em;
    color: var(--tw-prose-code);
    font-weight: 400;
  }
  .prose :where(code::before):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    content: "`";
  }
  .prose :where(code::after):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    content: "`";
  }
  .prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.4rem;
    padding-top: 0.8571429em;
    padding-inline-end: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-inline-start: 1.1428571em;
    background-color: color-mix(in srgb, var(--color-zinc-200) 50%, transparent);
    overflow-x: auto;
    color: var(--tw-prose-pre-code);
    box-shadow: inset 0 0 0 1px oklch(87.1% .006 286.286);
  }
  .prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
  .prose :where(pre code::before):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    content: none;
  }
  .prose :where(pre code::after):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    content: none;
  }
  .prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.875em;
    border-radius: 0.3125rem;
    padding-top: 0.1875em;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    padding-inline-start: 0.375em;
    font-family: inherit;
    color: var(--tw-prose-kbd);
    font-weight: 500;
    box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  }
  .prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    width: 100%;
    table-layout: auto;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
  }
  .prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }
  .prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-inline-end: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-inline-start: 0.5714286em;
  }
  .prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }
  .prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    border-bottom-width: 0;
  }
  .prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    vertical-align: baseline;
    padding-top: 0.5714286em;
    padding-inline-end: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-inline-start: 0.5714286em;
  }
  .prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }
  .prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    vertical-align: top;
  }
  .prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: disc;
  }
  .prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: decimal;
  }
  .prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-inline-start: 0.375em;
  }
  .prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-inline-start: 0.375em;
  }
  .prose :where(ul > li::marker):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    color: var(--tw-prose-bullets);
  }
  .prose :where(ol > li::marker):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-weight: 400;
    color: var(--tw-prose-counters);
  }
  .prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.25em;
    color: var(--tw-prose-headings);
    font-weight: 600;
  }
  .prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.625em;
  }
  .prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 3em;
    margin-bottom: 3em;
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
  }
  .prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
    color: var(--tw-prose-captions);
  }
  .prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.875em;
  }
  .prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
  }
  .prose :where(> ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .prose :where(> ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.5em;
  }
  .prose :where(> ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-bottom: 0.5em;
  }
  .prose :where(> ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.5em;
  }
  .prose :where(> ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-bottom: 0.5em;
  }
  .prose :where(> :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }
  .prose :where(> :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-bottom: 0;
  }
  .prose :where(a:not(:has(> code))):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: color-mix(in srgb, oklch(0.648 0.147 45.000) 75%, transparent);
  }
  .prose :where(:not(pre) > code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding: 3px 8px;
    box-shadow: inset 0 0 0 1px oklch(87.1% .006 286.286);
    border-radius: 0.4rem;
    background-color: color-mix(in srgb, var(--color-zinc-200) 50%, transparent);
    color: var(--color-zinc-700);
    word-break: break-word;
    font-size: 0.8em;
  }
  .prose :where(pre > code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: inherit;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-16 {
    top: calc(var(--spacing) * 16);
  }
  .top-24 {
    top: calc(var(--spacing) * 24);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-\[-1px\] {
    left: -1px;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .-mr-4 {
    margin-right: calc(var(--spacing) * -4);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-\[calc\(-1\*\(4em-1px\)\)\] {
    margin-left: calc(-1 * (4em - 1px));
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .max-h-\[calc\(100vh-4rem\)\] {
    max-height: calc(100vh - 4rem);
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .container {
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
    width: 100%;
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-\[1px\] {
    width: 1px;
  }
  .w-full {
    width: 100%;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-full {
    max-width: 100%;
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .flex-1 {
    flex: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .list-none {
    list-style-type: none;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-12 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 12) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-top-style: var(--tw-border-style);
      border-bottom-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .self-start {
    align-self: flex-start;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-base-200 {
    border-color: var(--color-base-200);
  }
  .border-base-300 {
    border-color: var(--color-base-300);
  }
  .divide-base-200 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-base-200);
    }
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .bg-base-50 {
    background-color: var(--color-base-50);
  }
  .bg-base-50\/50 {
    background-color: color-mix(in oklab, var(--color-base-50) 50%, transparent);
  }
  .bg-primary-100 {
    background-color: var(--color-primary-100);
  }
  .bg-primary-400 {
    background-color: var(--color-primary-400);
  }
  .bg-primary-600 {
    background-color: var(--color-primary-600);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/95 {
    background-color: color-mix(in oklab, var(--color-white) 95%, transparent);
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-primary-600 {
    --tw-gradient-from: var(--color-primary-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-tertiary-one-600 {
    --tw-gradient-to: var(--color-tertiary-one-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .bg-clip-text {
    background-clip: text;
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .pt-12 {
    padding-top: calc(var(--spacing) * 12);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pl-3\.5 {
    padding-left: calc(var(--spacing) * 3.5);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-\[calc\(4em\+1px\)\] {
    padding-left: calc(4em + 1px);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-wider {
    letter-spacing: 0.05em;
  }
  .text-pretty {
    text-wrap: pretty;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-base-400 {
    color: var(--color-base-400);
  }
  .text-base-500 {
    color: var(--color-base-500);
  }
  .text-base-600 {
    color: var(--color-base-600);
  }
  .text-base-700 {
    color: var(--color-base-700);
  }
  .text-base-900 {
    color: var(--color-base-900);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-primary-600 {
    color: var(--color-primary-600);
  }
  .text-primary-800 {
    color: var(--color-primary-800);
  }
  .text-tertiary-one-600 {
    color: var(--color-tertiary-one-600);
  }
  .text-tertiary-two-700 {
    color: var(--color-tertiary-two-700);
  }
  .text-transparent {
    color: transparent;
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .backdrop-blur {
    --tw-backdrop-blur: blur(8px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-250 {
    --tw-duration: 250ms;
    transition-duration: 250ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .group-hover\:translate-x-1:is(:where(.group):hover *) {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .group-hover\:text-primary-600:is(:where(.group):hover *) {
    color: var(--color-primary-600);
  }
  .prose-headings\:scroll-m-20 :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    scroll-margin: calc(var(--spacing) * 20);
  }
  .hover\:border-primary-300:hover {
    border-color: var(--color-primary-300);
  }
  .hover\:bg-base-100:hover {
    background-color: var(--color-base-100);
  }
  .hover\:bg-base-200:hover {
    background-color: var(--color-base-200);
  }
  .hover\:bg-primary-700:hover {
    background-color: var(--color-primary-700);
  }
  .hover\:text-accent-400:hover {
    color: var(--color-accent-400);
  }
  .hover\:text-base-900:hover {
    color: var(--color-base-900);
  }
  .hover\:shadow-lg:hover {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .data-\[expanded\=false\]\:hidden[data-expanded="false"] {
    display: none;
  }
  .data-\[sidebar-open\=true\]\:overflow-hidden[data-sidebar-open="true"] {
    overflow: hidden;
  }
  .data-\[current\=true\]\:border-primary-400[data-current="true"] {
    border-color: var(--color-primary-400);
  }
  .data-\[current\=true\]\:text-primary-800[data-current="true"] {
    color: var(--color-primary-800);
  }
  .data-\[selected\=true\]\:text-base-800[data-selected="true"] {
    color: var(--color-base-800);
  }
  @supports (backdrop-filter: var(--tw)) {
    .supports-\[backdrop-filter\]\:bg-white\/60 {
      background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .first\:pt-0:first-child {
    padding-top: calc(var(--spacing) * 0);
  }
  @media (min-width: 640px) {
    .sm\:flex-row {
      flex-direction: row;
    }
    .sm\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  @media (min-width: 768px) {
    .md\:flex {
      display: flex;
    }
    .md\:hidden {
      display: none;
    }
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    .md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  @media (min-width: 1024px) {
    .lg\:mx-2 {
      margin-inline: calc(var(--spacing) * 2);
    }
    .lg\:block {
      display: block;
    }
    .lg\:flex {
      display: flex;
    }
    .lg\:hidden {
      display: none;
    }
    .lg\:w-64 {
      width: calc(var(--spacing) * 64);
    }
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    .lg\:flex-row {
      flex-direction: row;
    }
    .lg\:gap-8 {
      gap: calc(var(--spacing) * 8);
    }
    .lg\:p-8 {
      padding: calc(var(--spacing) * 8);
    }
    .lg\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
    .lg\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
    .lg\:py-2 {
      padding-block: calc(var(--spacing) * 2);
    }
    .lg\:pt-20 {
      padding-top: calc(var(--spacing) * 20);
    }
    .lg\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .lg\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
    .lg\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  @media (min-width: 1280px) {
    .xl\:block {
      display: block;
    }
    .xl\:w-72 {
      width: calc(var(--spacing) * 72);
    }
  }
  .dark\:prose-invert:where(.dark, .dark *) {
    --tw-prose-body: var(--tw-prose-invert-body);
    --tw-prose-headings: var(--tw-prose-invert-headings);
    --tw-prose-lead: var(--tw-prose-invert-lead);
    --tw-prose-links: var(--tw-prose-invert-links);
    --tw-prose-bold: var(--tw-prose-invert-bold);
    --tw-prose-counters: var(--tw-prose-invert-counters);
    --tw-prose-bullets: var(--tw-prose-invert-bullets);
    --tw-prose-hr: var(--tw-prose-invert-hr);
    --tw-prose-quotes: var(--tw-prose-invert-quotes);
    --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
    --tw-prose-captions: var(--tw-prose-invert-captions);
    --tw-prose-kbd: var(--tw-prose-invert-kbd);
    --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
    --tw-prose-code: var(--tw-prose-invert-code);
    --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
    --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
    --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
    --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
  }
  .dark\:prose-invert:where(.dark, .dark *) :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-weight: 300;
    background-color: color-mix(in srgb, var(--color-zinc-800) 75%, transparent);
    box-shadow: inset 0 0 0 1px oklab(100% 0 5.96046e-8/.1);
  }
  .dark\:prose-invert:where(.dark, .dark *) :where(:not(pre) > code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    background-color: color-mix(in srgb, var(--color-zinc-800) 75%, transparent);
    color: var(--color-zinc-200);
    box-shadow: inset 0 0 0 1px oklab(100% 0 5.96046e-8/.1);
  }
  .dark\:block:where(.dark, .dark *) {
    display: block;
  }
  .dark\:hidden:where(.dark, .dark *) {
    display: none;
  }
  .dark\:border-base-700:where(.dark, .dark *) {
    border-color: var(--color-base-700);
  }
  .dark\:border-base-800:where(.dark, .dark *) {
    border-color: var(--color-base-800);
  }
  .dark\:divide-base-800:where(.dark, .dark *) {
    :where(& > :not(:last-child)) {
      border-color: var(--color-base-800);
    }
  }
  .dark\:bg-base-800:where(.dark, .dark *) {
    background-color: var(--color-base-800);
  }
  .dark\:bg-base-900:where(.dark, .dark *) {
    background-color: var(--color-base-900);
  }
  .dark\:bg-base-900\/95:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-base-900) 95%, transparent);
  }
  .dark\:bg-base-950:where(.dark, .dark *) {
    background-color: var(--color-base-950);
  }
  .dark\:bg-primary-500:where(.dark, .dark *) {
    background-color: var(--color-primary-500);
  }
  .dark\:bg-primary-900:where(.dark, .dark *) {
    background-color: var(--color-primary-900);
  }
  .dark\:from-primary-400:where(.dark, .dark *) {
    --tw-gradient-from: var(--color-primary-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .dark\:to-tertiary-one-400:where(.dark, .dark *) {
    --tw-gradient-to: var(--color-tertiary-one-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .dark\:text-base-100:where(.dark, .dark *) {
    color: var(--color-base-100);
  }
  .dark\:text-base-200:where(.dark, .dark *) {
    color: var(--color-base-200);
  }
  .dark\:text-base-400:where(.dark, .dark *) {
    color: var(--color-base-400);
  }
  .dark\:text-base-50:where(.dark, .dark *) {
    color: var(--color-base-50);
  }
  .dark\:text-base-600:where(.dark, .dark *) {
    color: var(--color-base-600);
  }
  .dark\:text-neutral-400:where(.dark, .dark *) {
    color: var(--color-neutral-400);
  }
  .dark\:text-primary-200:where(.dark, .dark *) {
    color: var(--color-primary-200);
  }
  .dark\:text-primary-400:where(.dark, .dark *) {
    color: var(--color-primary-400);
  }
  .dark\:text-primary-50:where(.dark, .dark *) {
    color: var(--color-primary-50);
  }
  .dark\:text-tertiary-one-400:where(.dark, .dark *) {
    color: var(--color-tertiary-one-400);
  }
  .dark\:text-tertiary-two-300:where(.dark, .dark *) {
    color: var(--color-tertiary-two-300);
  }
  .dark\:scheme-dark:where(.dark, .dark *) {
    color-scheme: dark;
  }
  .dark\:group-hover\:text-primary-400:where(.dark, .dark *):is(:where(.group):hover *) {
    color: var(--color-primary-400);
  }
  .dark\:hover\:border-primary-700:where(.dark, .dark *):hover {
    border-color: var(--color-primary-700);
  }
  .dark\:hover\:bg-base-700:where(.dark, .dark *):hover {
    background-color: var(--color-base-700);
  }
  .dark\:hover\:bg-base-800:where(.dark, .dark *):hover {
    background-color: var(--color-base-800);
  }
  .dark\:hover\:bg-primary-600:where(.dark, .dark *):hover {
    background-color: var(--color-primary-600);
  }
  .dark\:hover\:text-base-100:where(.dark, .dark *):hover {
    color: var(--color-base-100);
  }
  .dark\:hover\:text-base-50:where(.dark, .dark *):hover {
    color: var(--color-base-50);
  }
  .dark\:hover\:text-base-50\/90:where(.dark, .dark *):hover {
    color: color-mix(in oklab, var(--color-base-50) 90%, transparent);
  }
  .dark\:data-\[current\=true\]\:text-primary-500:where(.dark, .dark *)[data-current="true"] {
    color: var(--color-primary-500);
  }
  .dark\:data-\[selected\=true\]\:text-base-50:where(.dark, .dark *)[data-selected="true"] {
    color: var(--color-base-50);
  }
  @supports (backdrop-filter: var(--tw)) {
    .dark\:supports-\[backdrop-filter\]\:bg-base-900\/60:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-base-900) 60%, transparent);
    }
  }
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-color {
  syntax: "<color>";
  inherits: false;
  initial-value: currentColor;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 transparent;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-ring-color {
  syntax: "<color>";
  inherits: false;
  initial-value: rgb(59 130 246 / 0.5);
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 transparent;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-divide-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-gradient-from: #0000;
      --tw-gradient-from-position: 0%;
      --tw-gradient-to: #0000;
      --tw-gradient-to-position: 100%;
      --tw-gradient-via: #0000;
      --tw-gradient-via-position: 50%;
      --tw-inset-ring-color: currentColor;
      --tw-inset-ring-shadow: 0 0 transparent;
      --tw-inset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-ring-color: rgb(59 130 246 / 0.5);
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-ring-offset-width: 0px;
      --tw-ring-shadow: 0 0 #0000;
      --tw-shadow: 0 0 transparent;
      --tw-space-x-reverse: 0;
      --tw-space-y-reverse: 0;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
    }
  }
}