@page "/"
@inject IMarkdownContentService<DocFrontMatter> ContentService
@layout MainLayout

<PageTitle>MonorailCss Documentation</PageTitle>

<div class="space-y-12">
    <!-- Hero Section -->
    <section class="text-center pt-12 lg:pt-20">
        <h1 class="text-5xl lg:text-6xl font-extrabold mb-6">
            <span class="bg-gradient-to-r from-primary-600 to-tertiary-one-600 dark:from-primary-400 dark:to-tertiary-one-400 bg-clip-text text-transparent">
                MonorailCss
            </span>
        </h1>
        <p class="text-xl lg:text-2xl text-base-600 dark:text-base-400 max-w-3xl mx-auto mb-8">
            A JIT CSS compiler that aims to be Tailwind CSS 4.1 compatible, written in .NET
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
            @if (AllPages.Any())
            {
                var firstDoc = AllPages.OrderBy(x => x.FrontMatter.Order).FirstOrDefault();
                @if (firstDoc != null)
                {
                    <a href="@firstDoc.Url" class="inline-flex items-center justify-center px-6 py-3 text-base font-medium rounded-lg text-white bg-primary-600 hover:bg-primary-700 dark:bg-primary-500 dark:hover:bg-primary-600 transition-colors">
                        Get Started
                        <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                        </svg>
                    </a>
                }
            }
            <a href="https://github.com/phil-scott-78/MonorailCss" target="_blank" rel="noopener noreferrer" class="inline-flex items-center justify-center px-6 py-3 text-base font-medium rounded-lg text-base-700 dark:text-base-200 bg-base-100 hover:bg-base-200 dark:bg-base-800 dark:hover:bg-base-700 transition-colors">
                View on GitHub
                <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
            </a>
        </div>
    </section>

    <!-- Feature Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        @foreach (var item in AllPages.OrderBy(x => x.FrontMatter.Order).ThenBy(x => x.FrontMatter.Title))
        {
            @if (!item.FrontMatter.IsDraft)
            {
                <a href="@item.Url" class="group relative overflow-hidden rounded-xl bg-white dark:bg-base-900 border border-base-200 dark:border-base-800 transition-all hover:shadow-lg hover:border-primary-300 dark:hover:border-primary-700">
                    <div class="p-6">
                        @if (!string.IsNullOrEmpty(item.FrontMatter.Category))
                        {
                            <div class="mb-3">
                                <span class="inline-block bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-xs font-medium px-2.5 py-1 rounded">
                                    @item.FrontMatter.Category
                                </span>
                            </div>
                        }

                        <h3 class="text-xl font-bold text-base-900 dark:text-base-100 mb-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
                            @item.FrontMatter.Title
                        </h3>

                        @if (!string.IsNullOrEmpty(item.FrontMatter.Description))
                        {
                            <p class="text-base-600 dark:text-base-400 text-sm mb-4">
                                @item.FrontMatter.Description
                            </p>
                        }

                        <div class="flex items-center text-primary-600 dark:text-primary-400 text-sm font-medium">
                            Read more
                            <svg class="ml-1 w-4 h-4 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                            </svg>
                        </div>
                    </div>
                </a>
            }
        }
    </div>

    <!-- Quick Start Section -->
    <section class="mt-12 p-8 bg-base-100 dark:bg-base-800 rounded-2xl border border-base-200 dark:border-base-700">
        <h2 class="text-3xl font-bold mb-6 text-center text-base-900 dark:text-base-100">Quick Start</h2>
        <div class="max-w-2xl mx-auto">
            <div class="bg-white dark:bg-base-900 p-6 rounded-lg border border-base-200 dark:border-base-700">
                <h3 class="font-semibold mb-3 flex items-center text-base-900 dark:text-base-100">
                    <svg class="w-5 h-5 mr-2 text-primary-600 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                    </svg>
                    Install MonorailCss
                </h3>
                <pre class="bg-base-100 dark:bg-base-800 p-4 rounded text-sm overflow-x-auto text-base-900 dark:text-base-100"><code>dotnet add package MonorailCss</code></pre>
            </div>
        </div>
    </section>
</div>

@code {
    private ImmutableList<MarkdownContentPage<DocFrontMatter>> AllPages { get; set; } = ImmutableList<MarkdownContentPage<DocFrontMatter>>.Empty;

    protected override async Task OnInitializedAsync()
    {
        AllPages = await ContentService.GetAllContentPagesAsync();
    }
}
