{
  "-inset-1/3": {
    "css": "inset: calc(calc(1/3 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-1/4": {
    "css": "inset: calc(calc(1/4 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-1/5": {
    "css": "inset: calc(calc(1/5 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-1/6": {
    "css": "inset: calc(calc(1/6 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-1/12": {
    "css": "inset: calc(calc(1/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-2/3": {
    "css": "inset: calc(calc(2/3 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-2/4": {
    "css": "inset: calc(calc(2/4 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-2/5": {
    "css": "inset: calc(calc(2/5 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-2/6": {
    "css": "inset: calc(calc(2/6 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-2/12": {
    "css": "inset: calc(calc(2/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-3/4": {
    "css": "inset: calc(calc(3/4 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-3/5": {
    "css": "inset: calc(calc(3/5 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-3/6": {
    "css": "inset: calc(calc(3/6 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-3/12": {
    "css": "inset: calc(calc(3/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-4/5": {
    "css": "inset: calc(calc(4/5 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-4/6": {
    "css": "inset: calc(calc(4/6 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-4/12": {
    "css": "inset: calc(calc(4/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-5/6": {
    "css": "inset: calc(calc(5/6 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-5/12": {
    "css": "inset: calc(calc(5/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-6/12": {
    "css": "inset: calc(calc(6/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-7/12": {
    "css": "inset: calc(calc(7/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-8/12": {
    "css": "inset: calc(calc(8/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-9/12": {
    "css": "inset: calc(calc(9/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-10/12": {
    "css": "inset: calc(calc(10/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-11/12": {
    "css": "inset: calc(calc(11/12 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-full": {
    "css": "inset: -100%;",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-px": {
    "css": "inset: -1px;",
    "cssProperties": [
      "inset"
    ]
  },
  "-inset-x-1/2": {
    "css": "inset-inline: calc(calc(1/2 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-1/3": {
    "css": "inset-inline: calc(calc(1/3 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-1/4": {
    "css": "inset-inline: calc(calc(1/4 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-1/5": {
    "css": "inset-inline: calc(calc(1/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-1/6": {
    "css": "inset-inline: calc(calc(1/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-1/12": {
    "css": "inset-inline: calc(calc(1/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-2/3": {
    "css": "inset-inline: calc(calc(2/3 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-2/4": {
    "css": "inset-inline: calc(calc(2/4 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-2/5": {
    "css": "inset-inline: calc(calc(2/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-2/6": {
    "css": "inset-inline: calc(calc(2/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-2/12": {
    "css": "inset-inline: calc(calc(2/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-3/4": {
    "css": "inset-inline: calc(calc(3/4 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-3/5": {
    "css": "inset-inline: calc(calc(3/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-3/6": {
    "css": "inset-inline: calc(calc(3/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-3/12": {
    "css": "inset-inline: calc(calc(3/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-4/5": {
    "css": "inset-inline: calc(calc(4/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-4/6": {
    "css": "inset-inline: calc(calc(4/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-4/12": {
    "css": "inset-inline: calc(calc(4/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-5/6": {
    "css": "inset-inline: calc(calc(5/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-5/12": {
    "css": "inset-inline: calc(calc(5/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-6/12": {
    "css": "inset-inline: calc(calc(6/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-7/12": {
    "css": "inset-inline: calc(calc(7/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-8/12": {
    "css": "inset-inline: calc(calc(8/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-9/12": {
    "css": "inset-inline: calc(calc(9/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-10/12": {
    "css": "inset-inline: calc(calc(10/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-11/12": {
    "css": "inset-inline: calc(calc(11/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-full": {
    "css": "inset-inline: -100%;",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-x-px": {
    "css": "inset-inline: -1px;",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "-inset-y-1/2": {
    "css": "inset-block: calc(calc(1/2 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-1/3": {
    "css": "inset-block: calc(calc(1/3 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-1/4": {
    "css": "inset-block: calc(calc(1/4 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-1/5": {
    "css": "inset-block: calc(calc(1/5 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-1/6": {
    "css": "inset-block: calc(calc(1/6 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-1/12": {
    "css": "inset-block: calc(calc(1/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-2/3": {
    "css": "inset-block: calc(calc(2/3 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-2/4": {
    "css": "inset-block: calc(calc(2/4 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-2/5": {
    "css": "inset-block: calc(calc(2/5 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-2/6": {
    "css": "inset-block: calc(calc(2/6 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-2/12": {
    "css": "inset-block: calc(calc(2/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-3/4": {
    "css": "inset-block: calc(calc(3/4 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-3/5": {
    "css": "inset-block: calc(calc(3/5 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-3/6": {
    "css": "inset-block: calc(calc(3/6 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-3/12": {
    "css": "inset-block: calc(calc(3/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-4/5": {
    "css": "inset-block: calc(calc(4/5 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-4/6": {
    "css": "inset-block: calc(calc(4/6 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-4/12": {
    "css": "inset-block: calc(calc(4/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-5/6": {
    "css": "inset-block: calc(calc(5/6 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-5/12": {
    "css": "inset-block: calc(calc(5/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-6/12": {
    "css": "inset-block: calc(calc(6/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-7/12": {
    "css": "inset-block: calc(calc(7/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-8/12": {
    "css": "inset-block: calc(calc(8/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-9/12": {
    "css": "inset-block: calc(calc(9/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-10/12": {
    "css": "inset-block: calc(calc(10/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-11/12": {
    "css": "inset-block: calc(calc(11/12 * 100%) * -1);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-full": {
    "css": "inset-block: -100%;",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-inset-y-px": {
    "css": "inset-block: -1px;",
    "cssProperties": [
      "inset-block"
    ]
  },
  "-start-1/2": {
    "css": "inset-inline-start: calc(calc(1/2 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-1/3": {
    "css": "inset-inline-start: calc(calc(1/3 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-1/4": {
    "css": "inset-inline-start: calc(calc(1/4 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-1/5": {
    "css": "inset-inline-start: calc(calc(1/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-1/6": {
    "css": "inset-inline-start: calc(calc(1/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-1/12": {
    "css": "inset-inline-start: calc(calc(1/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-2/3": {
    "css": "inset-inline-start: calc(calc(2/3 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-2/4": {
    "css": "inset-inline-start: calc(calc(2/4 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-2/5": {
    "css": "inset-inline-start: calc(calc(2/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-2/6": {
    "css": "inset-inline-start: calc(calc(2/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-2/12": {
    "css": "inset-inline-start: calc(calc(2/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-3/4": {
    "css": "inset-inline-start: calc(calc(3/4 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-3/5": {
    "css": "inset-inline-start: calc(calc(3/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-3/6": {
    "css": "inset-inline-start: calc(calc(3/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-3/12": {
    "css": "inset-inline-start: calc(calc(3/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-4/5": {
    "css": "inset-inline-start: calc(calc(4/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-4/6": {
    "css": "inset-inline-start: calc(calc(4/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-4/12": {
    "css": "inset-inline-start: calc(calc(4/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-5/6": {
    "css": "inset-inline-start: calc(calc(5/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-5/12": {
    "css": "inset-inline-start: calc(calc(5/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-6/12": {
    "css": "inset-inline-start: calc(calc(6/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-7/12": {
    "css": "inset-inline-start: calc(calc(7/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-8/12": {
    "css": "inset-inline-start: calc(calc(8/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-9/12": {
    "css": "inset-inline-start: calc(calc(9/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-10/12": {
    "css": "inset-inline-start: calc(calc(10/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-11/12": {
    "css": "inset-inline-start: calc(calc(11/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-full": {
    "css": "inset-inline-start: -100%;",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-start-px": {
    "css": "inset-inline-start: -1px;",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "-end-1/2": {
    "css": "inset-inline-end: calc(calc(1/2 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-1/3": {
    "css": "inset-inline-end: calc(calc(1/3 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-1/4": {
    "css": "inset-inline-end: calc(calc(1/4 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-1/5": {
    "css": "inset-inline-end: calc(calc(1/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-1/6": {
    "css": "inset-inline-end: calc(calc(1/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-1/12": {
    "css": "inset-inline-end: calc(calc(1/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-2/3": {
    "css": "inset-inline-end: calc(calc(2/3 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-2/4": {
    "css": "inset-inline-end: calc(calc(2/4 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-2/5": {
    "css": "inset-inline-end: calc(calc(2/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-2/6": {
    "css": "inset-inline-end: calc(calc(2/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-2/12": {
    "css": "inset-inline-end: calc(calc(2/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-3/4": {
    "css": "inset-inline-end: calc(calc(3/4 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-3/5": {
    "css": "inset-inline-end: calc(calc(3/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-3/6": {
    "css": "inset-inline-end: calc(calc(3/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-3/12": {
    "css": "inset-inline-end: calc(calc(3/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-4/5": {
    "css": "inset-inline-end: calc(calc(4/5 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-4/6": {
    "css": "inset-inline-end: calc(calc(4/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-4/12": {
    "css": "inset-inline-end: calc(calc(4/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-5/6": {
    "css": "inset-inline-end: calc(calc(5/6 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-5/12": {
    "css": "inset-inline-end: calc(calc(5/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-6/12": {
    "css": "inset-inline-end: calc(calc(6/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-7/12": {
    "css": "inset-inline-end: calc(calc(7/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-8/12": {
    "css": "inset-inline-end: calc(calc(8/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-9/12": {
    "css": "inset-inline-end: calc(calc(9/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-10/12": {
    "css": "inset-inline-end: calc(calc(10/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-11/12": {
    "css": "inset-inline-end: calc(calc(11/12 * 100%) * -1);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-full": {
    "css": "inset-inline-end: -100%;",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-end-px": {
    "css": "inset-inline-end: -1px;",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "-top-1/2": {
    "css": "top: calc(calc(1/2 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-1/3": {
    "css": "top: calc(calc(1/3 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-1/4": {
    "css": "top: calc(calc(1/4 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-1/5": {
    "css": "top: calc(calc(1/5 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-1/6": {
    "css": "top: calc(calc(1/6 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-1/12": {
    "css": "top: calc(calc(1/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-2/3": {
    "css": "top: calc(calc(2/3 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-2/4": {
    "css": "top: calc(calc(2/4 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-2/5": {
    "css": "top: calc(calc(2/5 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-2/6": {
    "css": "top: calc(calc(2/6 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-2/12": {
    "css": "top: calc(calc(2/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-3/4": {
    "css": "top: calc(calc(3/4 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-3/5": {
    "css": "top: calc(calc(3/5 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-3/6": {
    "css": "top: calc(calc(3/6 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-3/12": {
    "css": "top: calc(calc(3/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-4/5": {
    "css": "top: calc(calc(4/5 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-4/6": {
    "css": "top: calc(calc(4/6 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-4/12": {
    "css": "top: calc(calc(4/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-5/6": {
    "css": "top: calc(calc(5/6 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-5/12": {
    "css": "top: calc(calc(5/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-6/12": {
    "css": "top: calc(calc(6/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-7/12": {
    "css": "top: calc(calc(7/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-8/12": {
    "css": "top: calc(calc(8/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-9/12": {
    "css": "top: calc(calc(9/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-10/12": {
    "css": "top: calc(calc(10/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-11/12": {
    "css": "top: calc(calc(11/12 * 100%) * -1);",
    "cssProperties": [
      "top"
    ]
  },
  "-top-full": {
    "css": "top: -100%;",
    "cssProperties": [
      "top"
    ]
  },
  "-top-px": {
    "css": "top: -1px;",
    "cssProperties": [
      "top"
    ]
  },
  "-right-1/2": {
    "css": "right: calc(calc(1/2 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-1/3": {
    "css": "right: calc(calc(1/3 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-1/4": {
    "css": "right: calc(calc(1/4 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-1/5": {
    "css": "right: calc(calc(1/5 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-1/6": {
    "css": "right: calc(calc(1/6 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-1/12": {
    "css": "right: calc(calc(1/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-2/3": {
    "css": "right: calc(calc(2/3 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-2/4": {
    "css": "right: calc(calc(2/4 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-2/5": {
    "css": "right: calc(calc(2/5 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-2/6": {
    "css": "right: calc(calc(2/6 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-2/12": {
    "css": "right: calc(calc(2/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-3/4": {
    "css": "right: calc(calc(3/4 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-3/5": {
    "css": "right: calc(calc(3/5 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-3/6": {
    "css": "right: calc(calc(3/6 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-3/12": {
    "css": "right: calc(calc(3/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-4/5": {
    "css": "right: calc(calc(4/5 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-4/6": {
    "css": "right: calc(calc(4/6 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-4/12": {
    "css": "right: calc(calc(4/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-5/6": {
    "css": "right: calc(calc(5/6 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-5/12": {
    "css": "right: calc(calc(5/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-6/12": {
    "css": "right: calc(calc(6/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-7/12": {
    "css": "right: calc(calc(7/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-8/12": {
    "css": "right: calc(calc(8/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-9/12": {
    "css": "right: calc(calc(9/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-10/12": {
    "css": "right: calc(calc(10/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-11/12": {
    "css": "right: calc(calc(11/12 * 100%) * -1);",
    "cssProperties": [
      "right"
    ]
  },
  "-right-full": {
    "css": "right: -100%;",
    "cssProperties": [
      "right"
    ]
  },
  "-right-px": {
    "css": "right: -1px;",
    "cssProperties": [
      "right"
    ]
  },
  "-bottom-1/2": {
    "css": "bottom: calc(calc(1/2 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-1/3": {
    "css": "bottom: calc(calc(1/3 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-1/4": {
    "css": "bottom: calc(calc(1/4 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-1/5": {
    "css": "bottom: calc(calc(1/5 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-1/6": {
    "css": "bottom: calc(calc(1/6 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-1/12": {
    "css": "bottom: calc(calc(1/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-2/3": {
    "css": "bottom: calc(calc(2/3 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-2/4": {
    "css": "bottom: calc(calc(2/4 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-2/5": {
    "css": "bottom: calc(calc(2/5 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-2/6": {
    "css": "bottom: calc(calc(2/6 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-2/12": {
    "css": "bottom: calc(calc(2/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-3/4": {
    "css": "bottom: calc(calc(3/4 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-3/5": {
    "css": "bottom: calc(calc(3/5 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-3/6": {
    "css": "bottom: calc(calc(3/6 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-3/12": {
    "css": "bottom: calc(calc(3/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-4/5": {
    "css": "bottom: calc(calc(4/5 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-4/6": {
    "css": "bottom: calc(calc(4/6 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-4/12": {
    "css": "bottom: calc(calc(4/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-5/6": {
    "css": "bottom: calc(calc(5/6 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-5/12": {
    "css": "bottom: calc(calc(5/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-6/12": {
    "css": "bottom: calc(calc(6/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-7/12": {
    "css": "bottom: calc(calc(7/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-8/12": {
    "css": "bottom: calc(calc(8/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-9/12": {
    "css": "bottom: calc(calc(9/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-10/12": {
    "css": "bottom: calc(calc(10/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-11/12": {
    "css": "bottom: calc(calc(11/12 * 100%) * -1);",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-full": {
    "css": "bottom: -100%;",
    "cssProperties": [
      "bottom"
    ]
  },
  "-bottom-px": {
    "css": "bottom: -1px;",
    "cssProperties": [
      "bottom"
    ]
  },
  "-left-1/2": {
    "css": "left: calc(calc(1/2 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-1/3": {
    "css": "left: calc(calc(1/3 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-1/4": {
    "css": "left: calc(calc(1/4 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-1/5": {
    "css": "left: calc(calc(1/5 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-1/6": {
    "css": "left: calc(calc(1/6 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-1/12": {
    "css": "left: calc(calc(1/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-2/3": {
    "css": "left: calc(calc(2/3 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-2/4": {
    "css": "left: calc(calc(2/4 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-2/5": {
    "css": "left: calc(calc(2/5 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-2/6": {
    "css": "left: calc(calc(2/6 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-2/12": {
    "css": "left: calc(calc(2/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-3/4": {
    "css": "left: calc(calc(3/4 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-3/5": {
    "css": "left: calc(calc(3/5 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-3/6": {
    "css": "left: calc(calc(3/6 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-3/12": {
    "css": "left: calc(calc(3/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-4/5": {
    "css": "left: calc(calc(4/5 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-4/6": {
    "css": "left: calc(calc(4/6 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-4/12": {
    "css": "left: calc(calc(4/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-5/6": {
    "css": "left: calc(calc(5/6 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-5/12": {
    "css": "left: calc(calc(5/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-6/12": {
    "css": "left: calc(calc(6/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-7/12": {
    "css": "left: calc(calc(7/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-8/12": {
    "css": "left: calc(calc(8/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-9/12": {
    "css": "left: calc(calc(9/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-10/12": {
    "css": "left: calc(calc(10/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-11/12": {
    "css": "left: calc(calc(11/12 * 100%) * -1);",
    "cssProperties": [
      "left"
    ]
  },
  "-left-full": {
    "css": "left: -100%;",
    "cssProperties": [
      "left"
    ]
  },
  "-left-px": {
    "css": "left: -1px;",
    "cssProperties": [
      "left"
    ]
  },
  "-order-1": {
    "css": "order: calc(1 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-2": {
    "css": "order: calc(2 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-3": {
    "css": "order: calc(3 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-4": {
    "css": "order: calc(4 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-5": {
    "css": "order: calc(5 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-6": {
    "css": "order: calc(6 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-7": {
    "css": "order: calc(7 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-8": {
    "css": "order: calc(8 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-9": {
    "css": "order: calc(9 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-10": {
    "css": "order: calc(10 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-11": {
    "css": "order: calc(11 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-order-12": {
    "css": "order: calc(12 * -1);",
    "cssProperties": [
      "order"
    ]
  },
  "-col-start-1": {
    "css": "grid-column-start: calc(1 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-2": {
    "css": "grid-column-start: calc(2 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-3": {
    "css": "grid-column-start: calc(3 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-4": {
    "css": "grid-column-start: calc(4 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-5": {
    "css": "grid-column-start: calc(5 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-6": {
    "css": "grid-column-start: calc(6 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-7": {
    "css": "grid-column-start: calc(7 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-8": {
    "css": "grid-column-start: calc(8 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-9": {
    "css": "grid-column-start: calc(9 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-10": {
    "css": "grid-column-start: calc(10 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-11": {
    "css": "grid-column-start: calc(11 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-12": {
    "css": "grid-column-start: calc(12 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-start-13": {
    "css": "grid-column-start: calc(13 * -1);",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "-col-end-1": {
    "css": "grid-column-end: calc(1 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-2": {
    "css": "grid-column-end: calc(2 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-3": {
    "css": "grid-column-end: calc(3 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-4": {
    "css": "grid-column-end: calc(4 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-5": {
    "css": "grid-column-end: calc(5 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-6": {
    "css": "grid-column-end: calc(6 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-7": {
    "css": "grid-column-end: calc(7 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-8": {
    "css": "grid-column-end: calc(8 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-9": {
    "css": "grid-column-end: calc(9 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-10": {
    "css": "grid-column-end: calc(10 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-11": {
    "css": "grid-column-end: calc(11 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-12": {
    "css": "grid-column-end: calc(12 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-col-end-13": {
    "css": "grid-column-end: calc(13 * -1);",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "-row-start-1": {
    "css": "grid-row-start: calc(1 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-2": {
    "css": "grid-row-start: calc(2 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-3": {
    "css": "grid-row-start: calc(3 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-4": {
    "css": "grid-row-start: calc(4 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-5": {
    "css": "grid-row-start: calc(5 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-6": {
    "css": "grid-row-start: calc(6 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-7": {
    "css": "grid-row-start: calc(7 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-8": {
    "css": "grid-row-start: calc(8 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-9": {
    "css": "grid-row-start: calc(9 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-10": {
    "css": "grid-row-start: calc(10 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-11": {
    "css": "grid-row-start: calc(11 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-12": {
    "css": "grid-row-start: calc(12 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-start-13": {
    "css": "grid-row-start: calc(13 * -1);",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "-row-end-1": {
    "css": "grid-row-end: calc(1 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-2": {
    "css": "grid-row-end: calc(2 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-3": {
    "css": "grid-row-end: calc(3 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-4": {
    "css": "grid-row-end: calc(4 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-5": {
    "css": "grid-row-end: calc(5 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-6": {
    "css": "grid-row-end: calc(6 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-7": {
    "css": "grid-row-end: calc(7 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-8": {
    "css": "grid-row-end: calc(8 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-9": {
    "css": "grid-row-end: calc(9 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-10": {
    "css": "grid-row-end: calc(10 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-11": {
    "css": "grid-row-end: calc(11 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-12": {
    "css": "grid-row-end: calc(12 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-row-end-13": {
    "css": "grid-row-end: calc(13 * -1);",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "-m-px": {
    "css": "margin: -1px;",
    "cssProperties": [
      "margin"
    ]
  },
  "-mx-px": {
    "css": "margin-inline: -1px;",
    "cssProperties": [
      "margin-inline"
    ]
  },
  "-my-px": {
    "css": "margin-block: -1px;",
    "cssProperties": [
      "margin-block"
    ]
  },
  "-ms-px": {
    "css": "margin-inline-start: -1px;",
    "cssProperties": [
      "margin-inline-start"
    ]
  },
  "-me-px": {
    "css": "margin-inline-end: -1px;",
    "cssProperties": [
      "margin-inline-end"
    ]
  },
  "-mt-px": {
    "css": "margin-top: -1px;",
    "cssProperties": [
      "margin-top"
    ]
  },
  "-mr-px": {
    "css": "margin-right: -1px;",
    "cssProperties": [
      "margin-right"
    ]
  },
  "-mb-px": {
    "css": "margin-bottom: -1px;",
    "cssProperties": [
      "margin-bottom"
    ]
  },
  "-ml-px": {
    "css": "margin-left: -1px;",
    "cssProperties": [
      "margin-left"
    ]
  },
  "-translate-1/2": {
    "css": "--tw-translate-x: calc(calc(1/2 * 100%) * -1);\n    --tw-translate-y: calc(calc(1/2 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-1/3": {
    "css": "--tw-translate-x: calc(calc(1/3 * 100%) * -1);\n    --tw-translate-y: calc(calc(1/3 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-1/4": {
    "css": "--tw-translate-x: calc(calc(1/4 * 100%) * -1);\n    --tw-translate-y: calc(calc(1/4 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-1/5": {
    "css": "--tw-translate-x: calc(calc(1/5 * 100%) * -1);\n    --tw-translate-y: calc(calc(1/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-1/6": {
    "css": "--tw-translate-x: calc(calc(1/6 * 100%) * -1);\n    --tw-translate-y: calc(calc(1/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-1/12": {
    "css": "--tw-translate-x: calc(calc(1/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(1/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-2/3": {
    "css": "--tw-translate-x: calc(calc(2/3 * 100%) * -1);\n    --tw-translate-y: calc(calc(2/3 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-2/4": {
    "css": "--tw-translate-x: calc(calc(2/4 * 100%) * -1);\n    --tw-translate-y: calc(calc(2/4 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-2/5": {
    "css": "--tw-translate-x: calc(calc(2/5 * 100%) * -1);\n    --tw-translate-y: calc(calc(2/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-2/6": {
    "css": "--tw-translate-x: calc(calc(2/6 * 100%) * -1);\n    --tw-translate-y: calc(calc(2/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-2/12": {
    "css": "--tw-translate-x: calc(calc(2/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(2/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-3/4": {
    "css": "--tw-translate-x: calc(calc(3/4 * 100%) * -1);\n    --tw-translate-y: calc(calc(3/4 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-3/5": {
    "css": "--tw-translate-x: calc(calc(3/5 * 100%) * -1);\n    --tw-translate-y: calc(calc(3/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-3/6": {
    "css": "--tw-translate-x: calc(calc(3/6 * 100%) * -1);\n    --tw-translate-y: calc(calc(3/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-3/12": {
    "css": "--tw-translate-x: calc(calc(3/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(3/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-4/5": {
    "css": "--tw-translate-x: calc(calc(4/5 * 100%) * -1);\n    --tw-translate-y: calc(calc(4/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-4/6": {
    "css": "--tw-translate-x: calc(calc(4/6 * 100%) * -1);\n    --tw-translate-y: calc(calc(4/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-4/12": {
    "css": "--tw-translate-x: calc(calc(4/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(4/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-5/6": {
    "css": "--tw-translate-x: calc(calc(5/6 * 100%) * -1);\n    --tw-translate-y: calc(calc(5/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-5/12": {
    "css": "--tw-translate-x: calc(calc(5/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(5/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-6/12": {
    "css": "--tw-translate-x: calc(calc(6/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(6/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-7/12": {
    "css": "--tw-translate-x: calc(calc(7/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(7/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-8/12": {
    "css": "--tw-translate-x: calc(calc(8/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(8/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-9/12": {
    "css": "--tw-translate-x: calc(calc(9/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(9/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-10/12": {
    "css": "--tw-translate-x: calc(calc(10/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(10/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-11/12": {
    "css": "--tw-translate-x: calc(calc(11/12 * 100%) * -1);\n    --tw-translate-y: calc(calc(11/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-full": {
    "css": "--tw-translate-x: -100%;\n    --tw-translate-y: -100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-px": {
    "css": "--tw-translate-x: -1px;\n    --tw-translate-y: -1px;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-1/2": {
    "css": "--tw-translate-x: calc(calc(1/2 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-1/3": {
    "css": "--tw-translate-x: calc(calc(1/3 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-1/4": {
    "css": "--tw-translate-x: calc(calc(1/4 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-1/5": {
    "css": "--tw-translate-x: calc(calc(1/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-1/6": {
    "css": "--tw-translate-x: calc(calc(1/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-1/12": {
    "css": "--tw-translate-x: calc(calc(1/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-2/3": {
    "css": "--tw-translate-x: calc(calc(2/3 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-2/4": {
    "css": "--tw-translate-x: calc(calc(2/4 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-2/5": {
    "css": "--tw-translate-x: calc(calc(2/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-2/6": {
    "css": "--tw-translate-x: calc(calc(2/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-2/12": {
    "css": "--tw-translate-x: calc(calc(2/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-3/4": {
    "css": "--tw-translate-x: calc(calc(3/4 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-3/5": {
    "css": "--tw-translate-x: calc(calc(3/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-3/6": {
    "css": "--tw-translate-x: calc(calc(3/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-scale-0": {
    "css": "--tw-scale-x: calc(0% * -1);\n    --tw-scale-y: calc(0% * -1);\n    --tw-scale-z: calc(0% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-50": {
    "css": "--tw-scale-x: calc(50% * -1);\n    --tw-scale-y: calc(50% * -1);\n    --tw-scale-z: calc(50% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-75": {
    "css": "--tw-scale-x: calc(75% * -1);\n    --tw-scale-y: calc(75% * -1);\n    --tw-scale-z: calc(75% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-90": {
    "css": "--tw-scale-x: calc(90% * -1);\n    --tw-scale-y: calc(90% * -1);\n    --tw-scale-z: calc(90% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-95": {
    "css": "--tw-scale-x: calc(95% * -1);\n    --tw-scale-y: calc(95% * -1);\n    --tw-scale-z: calc(95% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-100": {
    "css": "--tw-scale-x: calc(100% * -1);\n    --tw-scale-y: calc(100% * -1);\n    --tw-scale-z: calc(100% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-105": {
    "css": "--tw-scale-x: calc(105% * -1);\n    --tw-scale-y: calc(105% * -1);\n    --tw-scale-z: calc(105% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-110": {
    "css": "--tw-scale-x: calc(110% * -1);\n    --tw-scale-y: calc(110% * -1);\n    --tw-scale-z: calc(110% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-125": {
    "css": "--tw-scale-x: calc(125% * -1);\n    --tw-scale-y: calc(125% * -1);\n    --tw-scale-z: calc(125% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-150": {
    "css": "--tw-scale-x: calc(150% * -1);\n    --tw-scale-y: calc(150% * -1);\n    --tw-scale-z: calc(150% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-200": {
    "css": "--tw-scale-x: calc(200% * -1);\n    --tw-scale-y: calc(200% * -1);\n    --tw-scale-z: calc(200% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-0": {
    "css": "--tw-scale-x: calc(0% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-50": {
    "css": "--tw-scale-x: calc(50% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-75": {
    "css": "--tw-scale-x: calc(75% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-90": {
    "css": "--tw-scale-x: calc(90% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-95": {
    "css": "--tw-scale-x: calc(95% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-100": {
    "css": "--tw-scale-x: calc(100% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-105": {
    "css": "--tw-scale-x: calc(105% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-110": {
    "css": "--tw-scale-x: calc(110% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-125": {
    "css": "--tw-scale-x: calc(125% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-150": {
    "css": "--tw-scale-x: calc(150% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-x-200": {
    "css": "--tw-scale-x: calc(200% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-0": {
    "css": "--tw-scale-y: calc(0% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-50": {
    "css": "--tw-scale-y: calc(50% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-75": {
    "css": "--tw-scale-y: calc(75% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-90": {
    "css": "--tw-scale-y: calc(90% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-95": {
    "css": "--tw-scale-y: calc(95% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-100": {
    "css": "--tw-scale-y: calc(100% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-105": {
    "css": "--tw-scale-y: calc(105% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-110": {
    "css": "--tw-scale-y: calc(110% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-125": {
    "css": "--tw-scale-y: calc(125% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-150": {
    "css": "--tw-scale-y: calc(150% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-y-200": {
    "css": "--tw-scale-y: calc(200% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-0": {
    "css": "--tw-scale-z: calc(0% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-50": {
    "css": "--tw-scale-z: calc(50% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-75": {
    "css": "--tw-scale-z: calc(75% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-90": {
    "css": "--tw-scale-z: calc(90% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-95": {
    "css": "--tw-scale-z: calc(95% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-100": {
    "css": "--tw-scale-z: calc(100% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-105": {
    "css": "--tw-scale-z: calc(105% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-110": {
    "css": "--tw-scale-z: calc(110% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-125": {
    "css": "--tw-scale-z: calc(125% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-150": {
    "css": "--tw-scale-z: calc(150% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-scale-z-200": {
    "css": "--tw-scale-z: calc(200% * -1);\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "-rotate-0": {
    "css": "rotate: calc(0deg * -1);",
    "cssProperties": [
      "rotate"
    ]
  },
  "-rotate-1": {
    "css": "rotate: calc(1deg * -1);",
    "cssProperties": [
      "rotate"
    ]
  },
  "-rotate-2": {
    "css": "rotate: calc(2deg * -1);",
    "cssProperties": [
      "rotate"
    ]
  },
  "-rotate-3": {
    "css": "rotate: calc(3deg * -1);",
    "cssProperties": [
      "rotate"
    ]
  },
  "-rotate-6": {
    "css": "rotate: calc(6deg * -1);",
    "cssProperties": [
      "rotate"
    ]
  },
  "-rotate-12": {
    "css": "rotate: calc(12deg * -1);",
    "cssProperties": [
      "rotate"
    ]
  },
  "-rotate-45": {
    "css": "rotate: calc(45deg * -1);",
    "cssProperties": [
      "rotate"
    ]
  },
  "-rotate-90": {
    "css": "rotate: calc(90deg * -1);",
    "cssProperties": [
      "rotate"
    ]
  },
  "-rotate-180": {
    "css": "rotate: calc(180deg * -1);",
    "cssProperties": [
      "rotate"
    ]
  },
  "-rotate-x-0": {
    "css": "--tw-rotate-x: rotateX(calc(0deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-x-1": {
    "css": "--tw-rotate-x: rotateX(calc(1deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-x-2": {
    "css": "--tw-rotate-x: rotateX(calc(2deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-x-3": {
    "css": "--tw-rotate-x: rotateX(calc(3deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-x-6": {
    "css": "--tw-rotate-x: rotateX(calc(6deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-x-12": {
    "css": "--tw-rotate-x: rotateX(calc(12deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-x-45": {
    "css": "--tw-rotate-x: rotateX(calc(45deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-x-90": {
    "css": "--tw-rotate-x: rotateX(calc(90deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-x-180": {
    "css": "--tw-rotate-x: rotateX(calc(180deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-y-0": {
    "css": "--tw-rotate-y: rotateY(calc(0deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-y-1": {
    "css": "--tw-rotate-y: rotateY(calc(1deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-y-2": {
    "css": "--tw-rotate-y: rotateY(calc(2deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-y-3": {
    "css": "--tw-rotate-y: rotateY(calc(3deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-y-6": {
    "css": "--tw-rotate-y: rotateY(calc(6deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-y-12": {
    "css": "--tw-rotate-y: rotateY(calc(12deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-y-45": {
    "css": "--tw-rotate-y: rotateY(calc(45deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-y-90": {
    "css": "--tw-rotate-y: rotateY(calc(90deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-y-180": {
    "css": "--tw-rotate-y: rotateY(calc(180deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-z-0": {
    "css": "--tw-rotate-z: rotateZ(calc(0deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-z-1": {
    "css": "--tw-rotate-z: rotateZ(calc(1deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-z-2": {
    "css": "--tw-rotate-z: rotateZ(calc(2deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-z-3": {
    "css": "--tw-rotate-z: rotateZ(calc(3deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-z-6": {
    "css": "--tw-rotate-z: rotateZ(calc(6deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-z-12": {
    "css": "--tw-rotate-z: rotateZ(calc(12deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-z-45": {
    "css": "--tw-rotate-z: rotateZ(calc(45deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-z-90": {
    "css": "--tw-rotate-z: rotateZ(calc(90deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-rotate-z-180": {
    "css": "--tw-rotate-z: rotateZ(calc(180deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-0": {
    "css": "--tw-skew-x: skewX(calc(0deg * -1));\n    --tw-skew-y: skewY(calc(0deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-1": {
    "css": "--tw-skew-x: skewX(calc(1deg * -1));\n    --tw-skew-y: skewY(calc(1deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-2": {
    "css": "--tw-skew-x: skewX(calc(2deg * -1));\n    --tw-skew-y: skewY(calc(2deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-3": {
    "css": "--tw-skew-x: skewX(calc(3deg * -1));\n    --tw-skew-y: skewY(calc(3deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-6": {
    "css": "--tw-skew-x: skewX(calc(6deg * -1));\n    --tw-skew-y: skewY(calc(6deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-12": {
    "css": "--tw-skew-x: skewX(calc(12deg * -1));\n    --tw-skew-y: skewY(calc(12deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-x-0": {
    "css": "--tw-skew-x: skewX(calc(0deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-x-1": {
    "css": "--tw-skew-x: skewX(calc(1deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-x-2": {
    "css": "--tw-skew-x: skewX(calc(2deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-x-3": {
    "css": "--tw-skew-x: skewX(calc(3deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-x-6": {
    "css": "--tw-skew-x: skewX(calc(6deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-x-12": {
    "css": "--tw-skew-x: skewX(calc(12deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-y-0": {
    "css": "--tw-skew-y: skewY(calc(0deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-y-1": {
    "css": "--tw-skew-y: skewY(calc(1deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-y-2": {
    "css": "--tw-skew-y: skewY(calc(2deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-y-3": {
    "css": "--tw-skew-y: skewY(calc(3deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-y-6": {
    "css": "--tw-skew-y: skewY(calc(6deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-skew-y-12": {
    "css": "--tw-skew-y: skewY(calc(12deg * -1));\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "-scroll-m-px": {
    "css": "scroll-margin: -1px;",
    "cssProperties": [
      "scroll-margin"
    ]
  },
  "-scroll-mx-px": {
    "css": "scroll-margin-inline: -1px;",
    "cssProperties": [
      "scroll-margin-inline"
    ]
  },
  "-scroll-my-px": {
    "css": "scroll-margin-block: -1px;",
    "cssProperties": [
      "scroll-margin-block"
    ]
  },
  "-scroll-ms-px": {
    "css": "scroll-margin-inline-start: -1px;",
    "cssProperties": [
      "scroll-margin-inline-start"
    ]
  },
  "-scroll-me-px": {
    "css": "scroll-margin-inline-end: -1px;",
    "cssProperties": [
      "scroll-margin-inline-end"
    ]
  },
  "-scroll-mt-px": {
    "css": "scroll-margin-top: -1px;",
    "cssProperties": [
      "scroll-margin-top"
    ]
  },
  "-scroll-mr-px": {
    "css": "scroll-margin-right: -1px;",
    "cssProperties": [
      "scroll-margin-right"
    ]
  },
  "-scroll-mb-px": {
    "css": "scroll-margin-bottom: -1px;",
    "cssProperties": [
      "scroll-margin-bottom"
    ]
  },
  "-scroll-ml-px": {
    "css": "scroll-margin-left: -1px;",
    "cssProperties": [
      "scroll-margin-left"
    ]
  },
  "-space-y-px": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(-1px * var(--tw-space-y-reverse));\n      margin-block-end: calc(-1px * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-space-x-px": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(-1px * var(--tw-space-x-reverse));\n      margin-inline-end: calc(-1px * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-mask-linear-0": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * -0);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-linear-1": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * -1);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-linear-2": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * -2);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-linear-3": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * -3);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-linear-6": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * -6);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-linear-12": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * -12);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-linear-45": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * -45);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-linear-90": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * -90);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-linear-180": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * -180);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-conic-0": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * -0);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-conic-1": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * -1);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-conic-2": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * -2);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-conic-3": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * -3);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-conic-6": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * -6);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-conic-12": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * -12);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-conic-45": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * -45);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-conic-90": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * -90);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-mask-conic-180": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * -180);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "-indent-px": {
    "css": "text-indent: -1px;",
    "cssProperties": [
      "text-indent"
    ]
  },
  "-outline-offset-0": {
    "css": "outline-offset: calc(0px * -1);",
    "cssProperties": [
      "outline-offset"
    ]
  },
  "-outline-offset-1": {
    "css": "outline-offset: calc(1px * -1);",
    "cssProperties": [
      "outline-offset"
    ]
  },
  "-outline-offset-2": {
    "css": "outline-offset: calc(2px * -1);",
    "cssProperties": [
      "outline-offset"
    ]
  },
  "-outline-offset-4": {
    "css": "outline-offset: calc(4px * -1);",
    "cssProperties": [
      "outline-offset"
    ]
  },
  "-outline-offset-8": {
    "css": "outline-offset: calc(8px * -1);",
    "cssProperties": [
      "outline-offset"
    ]
  },
  "@container-normal": {
    "css": "container-type: normal;",
    "cssProperties": [
      "container-type"
    ]
  },
  "collapse": {
    "css": "visibility: collapse;",
    "cssProperties": [
      "visibility"
    ]
  },
  "absolute": {
    "css": "position: absolute;",
    "cssProperties": [
      "position"
    ]
  },
  "bottom-1/2": {
    "css": "bottom: calc(1/2 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-1/3": {
    "css": "bottom: calc(1/3 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-1/4": {
    "css": "bottom: calc(1/4 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-1/5": {
    "css": "bottom: calc(1/5 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-1/6": {
    "css": "bottom: calc(1/6 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-1/12": {
    "css": "bottom: calc(1/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-2/3": {
    "css": "bottom: calc(2/3 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-2/4": {
    "css": "bottom: calc(2/4 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-2/5": {
    "css": "bottom: calc(2/5 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-2/6": {
    "css": "bottom: calc(2/6 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-2/12": {
    "css": "bottom: calc(2/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-3/4": {
    "css": "bottom: calc(3/4 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-3/5": {
    "css": "bottom: calc(3/5 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-3/6": {
    "css": "bottom: calc(3/6 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-3/12": {
    "css": "bottom: calc(3/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-4/5": {
    "css": "bottom: calc(4/5 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-4/6": {
    "css": "bottom: calc(4/6 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-4/12": {
    "css": "bottom: calc(4/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-5/6": {
    "css": "bottom: calc(5/6 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-5/12": {
    "css": "bottom: calc(5/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-6/12": {
    "css": "bottom: calc(6/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-7/12": {
    "css": "bottom: calc(7/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-8/12": {
    "css": "bottom: calc(8/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-9/12": {
    "css": "bottom: calc(9/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-10/12": {
    "css": "bottom: calc(10/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-11/12": {
    "css": "bottom: calc(11/12 * 100%);",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-auto": {
    "css": "bottom: auto;",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-full": {
    "css": "bottom: 100%;",
    "cssProperties": [
      "bottom"
    ]
  },
  "bottom-px": {
    "css": "bottom: 1px;",
    "cssProperties": [
      "bottom"
    ]
  },
  "-z-0": {
    "css": "z-index: calc(0 * -1);",
    "cssProperties": [
      "z-index"
    ]
  },
  "-z-10": {
    "css": "z-index: calc(10 * -1);",
    "cssProperties": [
      "z-index"
    ]
  },
  "-z-20": {
    "css": "z-index: calc(20 * -1);",
    "cssProperties": [
      "z-index"
    ]
  },
  "-z-30": {
    "css": "z-index: calc(30 * -1);",
    "cssProperties": [
      "z-index"
    ]
  },
  "-z-40": {
    "css": "z-index: calc(40 * -1);",
    "cssProperties": [
      "z-index"
    ]
  },
  "-z-50": {
    "css": "z-index: calc(50 * -1);",
    "cssProperties": [
      "z-index"
    ]
  },
  "col-auto": {
    "css": "grid-column: auto;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-1": {
    "css": "grid-column: span 1 / span 1;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-2": {
    "css": "grid-column: span 2 / span 2;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-3": {
    "css": "grid-column: span 3 / span 3;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-4": {
    "css": "grid-column: span 4 / span 4;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-5": {
    "css": "grid-column: span 5 / span 5;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-6": {
    "css": "grid-column: span 6 / span 6;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-7": {
    "css": "grid-column: span 7 / span 7;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-8": {
    "css": "grid-column: span 8 / span 8;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-9": {
    "css": "grid-column: span 9 / span 9;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-10": {
    "css": "grid-column: span 10 / span 10;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-11": {
    "css": "grid-column: span 11 / span 11;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-12": {
    "css": "grid-column: span 12 / span 12;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-span-full": {
    "css": "grid-column: 1 / -1;",
    "cssProperties": [
      "grid-column"
    ]
  },
  "col-start-1": {
    "css": "grid-column-start: 1;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-2": {
    "css": "grid-column-start: 2;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-3": {
    "css": "grid-column-start: 3;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-4": {
    "css": "grid-column-start: 4;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-5": {
    "css": "grid-column-start: 5;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-6": {
    "css": "grid-column-start: 6;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-7": {
    "css": "grid-column-start: 7;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-8": {
    "css": "grid-column-start: 8;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-9": {
    "css": "grid-column-start: 9;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-10": {
    "css": "grid-column-start: 10;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-11": {
    "css": "grid-column-start: 11;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-12": {
    "css": "grid-column-start: 12;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-13": {
    "css": "grid-column-start: 13;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-start-auto": {
    "css": "grid-column-start: auto;",
    "cssProperties": [
      "grid-column-start"
    ]
  },
  "col-end-1": {
    "css": "grid-column-end: 1;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-2": {
    "css": "grid-column-end: 2;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-3": {
    "css": "grid-column-end: 3;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-4": {
    "css": "grid-column-end: 4;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-5": {
    "css": "grid-column-end: 5;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-6": {
    "css": "grid-column-end: 6;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-7": {
    "css": "grid-column-end: 7;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-8": {
    "css": "grid-column-end: 8;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-9": {
    "css": "grid-column-end: 9;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-10": {
    "css": "grid-column-end: 10;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-11": {
    "css": "grid-column-end: 11;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-12": {
    "css": "grid-column-end: 12;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-13": {
    "css": "grid-column-end: 13;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "col-end-auto": {
    "css": "grid-column-end: auto;",
    "cssProperties": [
      "grid-column-end"
    ]
  },
  "clear-both": {
    "css": "clear: both;",
    "cssProperties": [
      "clear"
    ]
  },
  "clear-end": {
    "css": "clear: inline-end;",
    "cssProperties": [
      "clear"
    ]
  },
  "clear-left": {
    "css": "clear: left;",
    "cssProperties": [
      "clear"
    ]
  },
  "clear-none": {
    "css": "clear: none;",
    "cssProperties": [
      "clear"
    ]
  },
  "clear-right": {
    "css": "clear: right;",
    "cssProperties": [
      "clear"
    ]
  },
  "clear-start": {
    "css": "clear: inline-start;",
    "cssProperties": [
      "clear"
    ]
  },
  "container": {
    "css": "width: 100%;\n    @media (width >= 40rem) {\n      max-width: 40rem;\n    }\n    @media (width >= 48rem) {\n      max-width: 48rem;\n    }\n    @media (width >= 64rem) {\n      max-width: 64rem;\n    }\n    @media (width >= 80rem) {\n      max-width: 80rem;\n    }\n    @media (width >= 96rem) {\n      max-width: 96rem;\n    }",
    "cssProperties": [
      "width",
      "max-width"
    ]
  },
  "box-border": {
    "css": "box-sizing: border-box;",
    "cssProperties": [
      "box-sizing"
    ]
  },
  "box-content": {
    "css": "box-sizing: content-box;",
    "cssProperties": [
      "box-sizing"
    ]
  },
  "block": {
    "css": "display: block;",
    "cssProperties": [
      "display"
    ]
  },
  "contents": {
    "css": "display: contents;",
    "cssProperties": [
      "display"
    ]
  },
  "aspect-auto": {
    "css": "aspect-ratio: auto;",
    "cssProperties": [
      "aspect-ratio"
    ]
  },
  "aspect-square": {
    "css": "aspect-ratio: 1 / 1;",
    "cssProperties": [
      "aspect-ratio"
    ]
  },
  "basis-1/2": {
    "css": "flex-basis: calc(1/2 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-1/3": {
    "css": "flex-basis: calc(1/3 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-1/4": {
    "css": "flex-basis: calc(1/4 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-1/5": {
    "css": "flex-basis: calc(1/5 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-1/6": {
    "css": "flex-basis: calc(1/6 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-1/12": {
    "css": "flex-basis: calc(1/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-2/3": {
    "css": "flex-basis: calc(2/3 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-2/4": {
    "css": "flex-basis: calc(2/4 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-2/5": {
    "css": "flex-basis: calc(2/5 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-2/6": {
    "css": "flex-basis: calc(2/6 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-2/12": {
    "css": "flex-basis: calc(2/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-3/4": {
    "css": "flex-basis: calc(3/4 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-3/5": {
    "css": "flex-basis: calc(3/5 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-3/6": {
    "css": "flex-basis: calc(3/6 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-3/12": {
    "css": "flex-basis: calc(3/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-4/5": {
    "css": "flex-basis: calc(4/5 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-4/6": {
    "css": "flex-basis: calc(4/6 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-4/12": {
    "css": "flex-basis: calc(4/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-5/6": {
    "css": "flex-basis: calc(5/6 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-5/12": {
    "css": "flex-basis: calc(5/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-6/12": {
    "css": "flex-basis: calc(6/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-7/12": {
    "css": "flex-basis: calc(7/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-8/12": {
    "css": "flex-basis: calc(8/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-9/12": {
    "css": "flex-basis: calc(9/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-10/12": {
    "css": "flex-basis: calc(10/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-11/12": {
    "css": "flex-basis: calc(11/12 * 100%);",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-auto": {
    "css": "flex-basis: auto;",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-full": {
    "css": "flex-basis: 100%;",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "basis-px": {
    "css": "flex-basis: 1px;",
    "cssProperties": [
      "flex-basis"
    ]
  },
  "caption-bottom": {
    "css": "caption-side: bottom;",
    "cssProperties": [
      "caption-side"
    ]
  },
  "caption-top": {
    "css": "caption-side: top;",
    "cssProperties": [
      "caption-side"
    ]
  },
  "border-collapse": {
    "css": "border-collapse: collapse;",
    "cssProperties": [
      "border-collapse"
    ]
  },
  "border-separate": {
    "css": "border-collapse: separate;",
    "cssProperties": [
      "border-collapse"
    ]
  },
  "border-spacing-px": {
    "css": "--tw-border-spacing-x: 1px;\n    --tw-border-spacing-y: 1px;\n    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);",
    "cssProperties": [
      "border-spacing"
    ],
    "atProperties": [
      {
        "name": "--tw-border-spacing-x",
        "syntax": "<length>",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-border-spacing-y",
        "syntax": "<length>",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "border-spacing-x-px": {
    "css": "--tw-border-spacing-x: 1px;\n    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);",
    "cssProperties": [
      "border-spacing"
    ],
    "atProperties": [
      {
        "name": "--tw-border-spacing-x",
        "syntax": "<length>",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "border-spacing-y-px": {
    "css": "--tw-border-spacing-y: 1px;\n    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);",
    "cssProperties": [
      "border-spacing"
    ],
    "atProperties": [
      {
        "name": "--tw-border-spacing-y",
        "syntax": "<length>",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-3/12": {
    "css": "--tw-translate-x: calc(calc(3/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-4/5": {
    "css": "--tw-translate-x: calc(calc(4/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-4/6": {
    "css": "--tw-translate-x: calc(calc(4/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-4/12": {
    "css": "--tw-translate-x: calc(calc(4/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-5/6": {
    "css": "--tw-translate-x: calc(calc(5/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-5/12": {
    "css": "--tw-translate-x: calc(calc(5/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-6/12": {
    "css": "--tw-translate-x: calc(calc(6/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-7/12": {
    "css": "--tw-translate-x: calc(calc(7/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-8/12": {
    "css": "--tw-translate-x: calc(calc(8/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-9/12": {
    "css": "--tw-translate-x: calc(calc(9/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-10/12": {
    "css": "--tw-translate-x: calc(calc(10/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-11/12": {
    "css": "--tw-translate-x: calc(calc(11/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-full": {
    "css": "--tw-translate-x: -100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-x-px": {
    "css": "--tw-translate-x: -1px;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-1/2": {
    "css": "--tw-translate-y: calc(calc(1/2 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-1/3": {
    "css": "--tw-translate-y: calc(calc(1/3 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-1/4": {
    "css": "--tw-translate-y: calc(calc(1/4 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-1/5": {
    "css": "--tw-translate-y: calc(calc(1/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-1/6": {
    "css": "--tw-translate-y: calc(calc(1/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-1/12": {
    "css": "--tw-translate-y: calc(calc(1/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-2/3": {
    "css": "--tw-translate-y: calc(calc(2/3 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-2/4": {
    "css": "--tw-translate-y: calc(calc(2/4 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-2/5": {
    "css": "--tw-translate-y: calc(calc(2/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-2/6": {
    "css": "--tw-translate-y: calc(calc(2/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-2/12": {
    "css": "--tw-translate-y: calc(calc(2/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-3/4": {
    "css": "--tw-translate-y: calc(calc(3/4 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-3/5": {
    "css": "--tw-translate-y: calc(calc(3/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-3/6": {
    "css": "--tw-translate-y: calc(calc(3/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-3/12": {
    "css": "--tw-translate-y: calc(calc(3/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-4/5": {
    "css": "--tw-translate-y: calc(calc(4/5 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-4/6": {
    "css": "--tw-translate-y: calc(calc(4/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-4/12": {
    "css": "--tw-translate-y: calc(calc(4/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-5/6": {
    "css": "--tw-translate-y: calc(calc(5/6 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-5/12": {
    "css": "--tw-translate-y: calc(calc(5/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-6/12": {
    "css": "--tw-translate-y: calc(calc(6/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-7/12": {
    "css": "--tw-translate-y: calc(calc(7/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-8/12": {
    "css": "--tw-translate-y: calc(calc(8/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-9/12": {
    "css": "--tw-translate-y: calc(calc(9/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-10/12": {
    "css": "--tw-translate-y: calc(calc(10/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-11/12": {
    "css": "--tw-translate-y: calc(calc(11/12 * 100%) * -1);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-full": {
    "css": "--tw-translate-y: -100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-y-px": {
    "css": "--tw-translate-y: -1px;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-translate-z-px": {
    "css": "--tw-translate-z: -1px;\n    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "animate-none": {
    "css": "animation: none;",
    "cssProperties": [
      "animation"
    ]
  },
  "cursor-alias": {
    "css": "cursor: alias;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-all-scroll": {
    "css": "cursor: all-scroll;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-auto": {
    "css": "cursor: auto;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-cell": {
    "css": "cursor: cell;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-col-resize": {
    "css": "cursor: col-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-context-menu": {
    "css": "cursor: context-menu;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-copy": {
    "css": "cursor: copy;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-crosshair": {
    "css": "cursor: crosshair;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-default": {
    "css": "cursor: default;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-e-resize": {
    "css": "cursor: e-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-ew-resize": {
    "css": "cursor: ew-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-grab": {
    "css": "cursor: grab;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-grabbing": {
    "css": "cursor: grabbing;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-help": {
    "css": "cursor: help;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-move": {
    "css": "cursor: move;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-n-resize": {
    "css": "cursor: n-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-ne-resize": {
    "css": "cursor: ne-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-nesw-resize": {
    "css": "cursor: nesw-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-no-drop": {
    "css": "cursor: no-drop;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-none": {
    "css": "cursor: none;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-not-allowed": {
    "css": "cursor: not-allowed;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-ns-resize": {
    "css": "cursor: ns-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-nw-resize": {
    "css": "cursor: nw-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-nwse-resize": {
    "css": "cursor: nwse-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-pointer": {
    "css": "cursor: pointer;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-progress": {
    "css": "cursor: progress;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-row-resize": {
    "css": "cursor: row-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-s-resize": {
    "css": "cursor: s-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-se-resize": {
    "css": "cursor: se-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-sw-resize": {
    "css": "cursor: sw-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-text": {
    "css": "cursor: text;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-vertical-text": {
    "css": "cursor: vertical-text;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-w-resize": {
    "css": "cursor: w-resize;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-wait": {
    "css": "cursor: wait;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-zoom-in": {
    "css": "cursor: zoom-in;",
    "cssProperties": [
      "cursor"
    ]
  },
  "cursor-zoom-out": {
    "css": "cursor: zoom-out;",
    "cssProperties": [
      "cursor"
    ]
  },
  "appearance-auto": {
    "css": "appearance: auto;",
    "cssProperties": [
      "appearance"
    ]
  },
  "appearance-none": {
    "css": "appearance: none;",
    "cssProperties": [
      "appearance"
    ]
  },
  "columns-1": {
    "css": "columns: 1;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-2": {
    "css": "columns: 2;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-3": {
    "css": "columns: 3;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-4": {
    "css": "columns: 4;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-5": {
    "css": "columns: 5;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-6": {
    "css": "columns: 6;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-7": {
    "css": "columns: 7;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-8": {
    "css": "columns: 8;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-9": {
    "css": "columns: 9;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-10": {
    "css": "columns: 10;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-11": {
    "css": "columns: 11;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-12": {
    "css": "columns: 12;",
    "cssProperties": [
      "columns"
    ]
  },
  "columns-auto": {
    "css": "columns: auto;",
    "cssProperties": [
      "columns"
    ]
  },
  "break-before-all": {
    "css": "break-before: all;",
    "cssProperties": [
      "break-before"
    ]
  },
  "break-before-auto": {
    "css": "break-before: auto;",
    "cssProperties": [
      "break-before"
    ]
  },
  "break-before-avoid": {
    "css": "break-before: avoid;",
    "cssProperties": [
      "break-before"
    ]
  },
  "break-before-avoid-page": {
    "css": "break-before: avoid-page;",
    "cssProperties": [
      "break-before"
    ]
  },
  "break-before-column": {
    "css": "break-before: column;",
    "cssProperties": [
      "break-before"
    ]
  },
  "break-before-left": {
    "css": "break-before: left;",
    "cssProperties": [
      "break-before"
    ]
  },
  "break-before-page": {
    "css": "break-before: page;",
    "cssProperties": [
      "break-before"
    ]
  },
  "break-before-right": {
    "css": "break-before: right;",
    "cssProperties": [
      "break-before"
    ]
  },
  "break-inside-auto": {
    "css": "break-inside: auto;",
    "cssProperties": [
      "break-inside"
    ]
  },
  "break-inside-avoid": {
    "css": "break-inside: avoid;",
    "cssProperties": [
      "break-inside"
    ]
  },
  "break-inside-avoid-column": {
    "css": "break-inside: avoid-column;",
    "cssProperties": [
      "break-inside"
    ]
  },
  "break-inside-avoid-page": {
    "css": "break-inside: avoid-page;",
    "cssProperties": [
      "break-inside"
    ]
  },
  "break-after-all": {
    "css": "break-after: all;",
    "cssProperties": [
      "break-after"
    ]
  },
  "break-after-auto": {
    "css": "break-after: auto;",
    "cssProperties": [
      "break-after"
    ]
  },
  "break-after-avoid": {
    "css": "break-after: avoid;",
    "cssProperties": [
      "break-after"
    ]
  },
  "break-after-avoid-page": {
    "css": "break-after: avoid-page;",
    "cssProperties": [
      "break-after"
    ]
  },
  "break-after-column": {
    "css": "break-after: column;",
    "cssProperties": [
      "break-after"
    ]
  },
  "break-after-left": {
    "css": "break-after: left;",
    "cssProperties": [
      "break-after"
    ]
  },
  "break-after-page": {
    "css": "break-after: page;",
    "cssProperties": [
      "break-after"
    ]
  },
  "break-after-right": {
    "css": "break-after: right;",
    "cssProperties": [
      "break-after"
    ]
  },
  "auto-cols-auto": {
    "css": "grid-auto-columns: auto;",
    "cssProperties": [
      "grid-auto-columns"
    ]
  },
  "auto-cols-fr": {
    "css": "grid-auto-columns: minmax(0, 1fr);",
    "cssProperties": [
      "grid-auto-columns"
    ]
  },
  "auto-cols-max": {
    "css": "grid-auto-columns: max-content;",
    "cssProperties": [
      "grid-auto-columns"
    ]
  },
  "auto-cols-min": {
    "css": "grid-auto-columns: min-content;",
    "cssProperties": [
      "grid-auto-columns"
    ]
  },
  "auto-rows-auto": {
    "css": "grid-auto-rows: auto;",
    "cssProperties": [
      "grid-auto-rows"
    ]
  },
  "auto-rows-fr": {
    "css": "grid-auto-rows: minmax(0, 1fr);",
    "cssProperties": [
      "grid-auto-rows"
    ]
  },
  "auto-rows-max": {
    "css": "grid-auto-rows: max-content;",
    "cssProperties": [
      "grid-auto-rows"
    ]
  },
  "auto-rows-min": {
    "css": "grid-auto-rows: min-content;",
    "cssProperties": [
      "grid-auto-rows"
    ]
  },
  "content-around": {
    "css": "align-content: space-around;",
    "cssProperties": [
      "align-content"
    ]
  },
  "content-baseline": {
    "css": "align-content: baseline;",
    "cssProperties": [
      "align-content"
    ]
  },
  "content-between": {
    "css": "align-content: space-between;",
    "cssProperties": [
      "align-content"
    ]
  },
  "content-center": {
    "css": "align-content: center;",
    "cssProperties": [
      "align-content"
    ]
  },
  "content-center-safe": {
    "css": "align-content: safe center;",
    "cssProperties": [
      "align-content"
    ]
  },
  "content-end": {
    "css": "align-content: flex-end;",
    "cssProperties": [
      "align-content"
    ]
  },
  "content-end-safe": {
    "css": "align-content: safe flex-end;",
    "cssProperties": [
      "align-content"
    ]
  },
  "content-evenly": {
    "css": "align-content: space-evenly;",
    "cssProperties": [
      "align-content"
    ]
  },
  "content-normal": {
    "css": "align-content: normal;",
    "cssProperties": [
      "align-content"
    ]
  },
  "content-start": {
    "css": "align-content: flex-start;",
    "cssProperties": [
      "align-content"
    ]
  },
  "content-stretch": {
    "css": "align-content: stretch;",
    "cssProperties": [
      "align-content"
    ]
  },
  "border-0": {
    "css": "border-style: var(--tw-border-style);\n    border-width: 0px;",
    "cssProperties": [
      "border-style",
      "border-width"
    ]
  },
  "border-2": {
    "css": "border-style: var(--tw-border-style);\n    border-width: 2px;",
    "cssProperties": [
      "border-style",
      "border-width"
    ]
  },
  "border-4": {
    "css": "border-style: var(--tw-border-style);\n    border-width: 4px;",
    "cssProperties": [
      "border-style",
      "border-width"
    ]
  },
  "border-8": {
    "css": "border-style: var(--tw-border-style);\n    border-width: 8px;",
    "cssProperties": [
      "border-style",
      "border-width"
    ]
  },
  "border-x-0": {
    "css": "border-inline-style: var(--tw-border-style);\n    border-inline-width: 0px;",
    "cssProperties": [
      "border-inline-style",
      "border-inline-width"
    ]
  },
  "border-x-2": {
    "css": "border-inline-style: var(--tw-border-style);\n    border-inline-width: 2px;",
    "cssProperties": [
      "border-inline-style",
      "border-inline-width"
    ]
  },
  "border-x-4": {
    "css": "border-inline-style: var(--tw-border-style);\n    border-inline-width: 4px;",
    "cssProperties": [
      "border-inline-style",
      "border-inline-width"
    ]
  },
  "border-x-8": {
    "css": "border-inline-style: var(--tw-border-style);\n    border-inline-width: 8px;",
    "cssProperties": [
      "border-inline-style",
      "border-inline-width"
    ]
  },
  "border-y-0": {
    "css": "border-block-style: var(--tw-border-style);\n    border-block-width: 0px;",
    "cssProperties": [
      "border-block-style",
      "border-block-width"
    ]
  },
  "border-y-2": {
    "css": "border-block-style: var(--tw-border-style);\n    border-block-width: 2px;",
    "cssProperties": [
      "border-block-style",
      "border-block-width"
    ]
  },
  "border-y-4": {
    "css": "border-block-style: var(--tw-border-style);\n    border-block-width: 4px;",
    "cssProperties": [
      "border-block-style",
      "border-block-width"
    ]
  },
  "border-y-8": {
    "css": "border-block-style: var(--tw-border-style);\n    border-block-width: 8px;",
    "cssProperties": [
      "border-block-style",
      "border-block-width"
    ]
  },
  "border-s-0": {
    "css": "border-inline-start-style: var(--tw-border-style);\n    border-inline-start-width: 0px;",
    "cssProperties": [
      "border-inline-start-style",
      "border-inline-start-width"
    ]
  },
  "border-s-2": {
    "css": "border-inline-start-style: var(--tw-border-style);\n    border-inline-start-width: 2px;",
    "cssProperties": [
      "border-inline-start-style",
      "border-inline-start-width"
    ]
  },
  "border-s-4": {
    "css": "border-inline-start-style: var(--tw-border-style);\n    border-inline-start-width: 4px;",
    "cssProperties": [
      "border-inline-start-style",
      "border-inline-start-width"
    ]
  },
  "border-s-8": {
    "css": "border-inline-start-style: var(--tw-border-style);\n    border-inline-start-width: 8px;",
    "cssProperties": [
      "border-inline-start-style",
      "border-inline-start-width"
    ]
  },
  "border-e-0": {
    "css": "border-inline-end-style: var(--tw-border-style);\n    border-inline-end-width: 0px;",
    "cssProperties": [
      "border-inline-end-style",
      "border-inline-end-width"
    ]
  },
  "border-e-2": {
    "css": "border-inline-end-style: var(--tw-border-style);\n    border-inline-end-width: 2px;",
    "cssProperties": [
      "border-inline-end-style",
      "border-inline-end-width"
    ]
  },
  "border-e-4": {
    "css": "border-inline-end-style: var(--tw-border-style);\n    border-inline-end-width: 4px;",
    "cssProperties": [
      "border-inline-end-style",
      "border-inline-end-width"
    ]
  },
  "border-e-8": {
    "css": "border-inline-end-style: var(--tw-border-style);\n    border-inline-end-width: 8px;",
    "cssProperties": [
      "border-inline-end-style",
      "border-inline-end-width"
    ]
  },
  "border-t-0": {
    "css": "border-top-style: var(--tw-border-style);\n    border-top-width: 0px;",
    "cssProperties": [
      "border-top-style",
      "border-top-width"
    ]
  },
  "border-t-2": {
    "css": "border-top-style: var(--tw-border-style);\n    border-top-width: 2px;",
    "cssProperties": [
      "border-top-style",
      "border-top-width"
    ]
  },
  "border-t-4": {
    "css": "border-top-style: var(--tw-border-style);\n    border-top-width: 4px;",
    "cssProperties": [
      "border-top-style",
      "border-top-width"
    ]
  },
  "border-t-8": {
    "css": "border-top-style: var(--tw-border-style);\n    border-top-width: 8px;",
    "cssProperties": [
      "border-top-style",
      "border-top-width"
    ]
  },
  "border-r-0": {
    "css": "border-right-style: var(--tw-border-style);\n    border-right-width: 0px;",
    "cssProperties": [
      "border-right-style",
      "border-right-width"
    ]
  },
  "border-r-2": {
    "css": "border-right-style: var(--tw-border-style);\n    border-right-width: 2px;",
    "cssProperties": [
      "border-right-style",
      "border-right-width"
    ]
  },
  "border-r-4": {
    "css": "border-right-style: var(--tw-border-style);\n    border-right-width: 4px;",
    "cssProperties": [
      "border-right-style",
      "border-right-width"
    ]
  },
  "border-r-8": {
    "css": "border-right-style: var(--tw-border-style);\n    border-right-width: 8px;",
    "cssProperties": [
      "border-right-style",
      "border-right-width"
    ]
  },
  "border-b-0": {
    "css": "border-bottom-style: var(--tw-border-style);\n    border-bottom-width: 0px;",
    "cssProperties": [
      "border-bottom-style",
      "border-bottom-width"
    ]
  },
  "border-b-2": {
    "css": "border-bottom-style: var(--tw-border-style);\n    border-bottom-width: 2px;",
    "cssProperties": [
      "border-bottom-style",
      "border-bottom-width"
    ]
  },
  "border-b-4": {
    "css": "border-bottom-style: var(--tw-border-style);\n    border-bottom-width: 4px;",
    "cssProperties": [
      "border-bottom-style",
      "border-bottom-width"
    ]
  },
  "border-b-8": {
    "css": "border-bottom-style: var(--tw-border-style);\n    border-bottom-width: 8px;",
    "cssProperties": [
      "border-bottom-style",
      "border-bottom-width"
    ]
  },
  "border-l-0": {
    "css": "border-left-style: var(--tw-border-style);\n    border-left-width: 0px;",
    "cssProperties": [
      "border-left-style",
      "border-left-width"
    ]
  },
  "border-l-2": {
    "css": "border-left-style: var(--tw-border-style);\n    border-left-width: 2px;",
    "cssProperties": [
      "border-left-style",
      "border-left-width"
    ]
  },
  "border-l-4": {
    "css": "border-left-style: var(--tw-border-style);\n    border-left-width: 4px;",
    "cssProperties": [
      "border-left-style",
      "border-left-width"
    ]
  },
  "border-l-8": {
    "css": "border-left-style: var(--tw-border-style);\n    border-left-width: 8px;",
    "cssProperties": [
      "border-left-style",
      "border-left-width"
    ]
  },
  "border-dashed": {
    "css": "--tw-border-style: dashed;\n    border-style: dashed;",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "border-dotted": {
    "css": "--tw-border-style: dotted;\n    border-style: dotted;",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "border-double": {
    "css": "--tw-border-style: double;\n    border-style: double;",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "border-hidden": {
    "css": "--tw-border-style: hidden;\n    border-style: hidden;",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "border-none": {
    "css": "--tw-border-style: none;\n    border-style: none;",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "border-solid": {
    "css": "--tw-border-style: solid;\n    border-style: solid;",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "bg-gradient-to-b": {
    "css": "--tw-gradient-position: to bottom in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));",
    "cssProperties": [
      "background-image"
    ]
  },
  "bg-gradient-to-bl": {
    "css": "--tw-gradient-position: to bottom left in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));",
    "cssProperties": [
      "background-image"
    ]
  },
  "bg-gradient-to-br": {
    "css": "--tw-gradient-position: to bottom right in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));",
    "cssProperties": [
      "background-image"
    ]
  },
  "bg-gradient-to-l": {
    "css": "--tw-gradient-position: to left in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));",
    "cssProperties": [
      "background-image"
    ]
  },
  "bg-gradient-to-r": {
    "css": "--tw-gradient-position: to right in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));",
    "cssProperties": [
      "background-image"
    ]
  },
  "bg-gradient-to-t": {
    "css": "--tw-gradient-position: to top in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));",
    "cssProperties": [
      "background-image"
    ]
  },
  "bg-gradient-to-tl": {
    "css": "--tw-gradient-position: to top left in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));",
    "cssProperties": [
      "background-image"
    ]
  },
  "bg-gradient-to-tr": {
    "css": "--tw-gradient-position: to top right in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));",
    "cssProperties": [
      "background-image"
    ]
  },
  "bg-none": {
    "css": "background-image: none;",
    "cssProperties": [
      "background-image"
    ]
  },
  "box-decoration-clone": {
    "css": "-webkit-box-decoration-break: clone;\n    box-decoration-break: clone;",
    "cssProperties": [
      "box-decoration-break"
    ]
  },
  "box-decoration-slice": {
    "css": "-webkit-box-decoration-break: slice;\n    box-decoration-break: slice;",
    "cssProperties": [
      "box-decoration-break"
    ]
  },
  "decoration-clone": {
    "css": "-webkit-box-decoration-break: clone;\n    box-decoration-break: clone;",
    "cssProperties": [
      "box-decoration-break"
    ]
  },
  "decoration-slice": {
    "css": "-webkit-box-decoration-break: slice;\n    box-decoration-break: slice;",
    "cssProperties": [
      "box-decoration-break"
    ]
  },
  "bg-auto": {
    "css": "background-size: auto;",
    "cssProperties": [
      "background-size"
    ]
  },
  "bg-contain": {
    "css": "background-size: contain;",
    "cssProperties": [
      "background-size"
    ]
  },
  "bg-cover": {
    "css": "background-size: cover;",
    "cssProperties": [
      "background-size"
    ]
  },
  "bg-fixed": {
    "css": "background-attachment: fixed;",
    "cssProperties": [
      "background-attachment"
    ]
  },
  "bg-local": {
    "css": "background-attachment: local;",
    "cssProperties": [
      "background-attachment"
    ]
  },
  "bg-scroll": {
    "css": "background-attachment: scroll;",
    "cssProperties": [
      "background-attachment"
    ]
  },
  "bg-clip-border": {
    "css": "background-clip: border-box;",
    "cssProperties": [
      "background-clip"
    ]
  },
  "bg-clip-content": {
    "css": "background-clip: content-box;",
    "cssProperties": [
      "background-clip"
    ]
  },
  "bg-clip-padding": {
    "css": "background-clip: padding-box;",
    "cssProperties": [
      "background-clip"
    ]
  },
  "bg-clip-text": {
    "css": "background-clip: text;",
    "cssProperties": [
      "background-clip"
    ]
  },
  "bg-bottom": {
    "css": "background-position: bottom;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-bottom-left": {
    "css": "background-position: left bottom;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-bottom-right": {
    "css": "background-position: right bottom;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-center": {
    "css": "background-position: center;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-left": {
    "css": "background-position: left;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-left-bottom": {
    "css": "background-position: left bottom;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-left-top": {
    "css": "background-position: left top;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-right": {
    "css": "background-position: right;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-right-bottom": {
    "css": "background-position: right bottom;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-right-top": {
    "css": "background-position: right top;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-top": {
    "css": "background-position: top;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-top-left": {
    "css": "background-position: left top;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-top-right": {
    "css": "background-position: right top;",
    "cssProperties": [
      "background-position"
    ]
  },
  "bg-no-repeat": {
    "css": "background-repeat: no-repeat;",
    "cssProperties": [
      "background-repeat"
    ]
  },
  "bg-repeat": {
    "css": "background-repeat: repeat;",
    "cssProperties": [
      "background-repeat"
    ]
  },
  "bg-repeat-round": {
    "css": "background-repeat: round;",
    "cssProperties": [
      "background-repeat"
    ]
  },
  "bg-repeat-space": {
    "css": "background-repeat: space;",
    "cssProperties": [
      "background-repeat"
    ]
  },
  "bg-repeat-x": {
    "css": "background-repeat: repeat-x;",
    "cssProperties": [
      "background-repeat"
    ]
  },
  "bg-repeat-y": {
    "css": "background-repeat: repeat-y;",
    "cssProperties": [
      "background-repeat"
    ]
  },
  "bg-origin-border": {
    "css": "background-origin: border-box;",
    "cssProperties": [
      "background-origin"
    ]
  },
  "bg-origin-content": {
    "css": "background-origin: content-box;",
    "cssProperties": [
      "background-origin"
    ]
  },
  "bg-origin-padding": {
    "css": "background-origin: padding-box;",
    "cssProperties": [
      "background-origin"
    ]
  },
  "align-baseline": {
    "css": "vertical-align: baseline;",
    "cssProperties": [
      "vertical-align"
    ]
  },
  "align-bottom": {
    "css": "vertical-align: bottom;",
    "cssProperties": [
      "vertical-align"
    ]
  },
  "align-middle": {
    "css": "vertical-align: middle;",
    "cssProperties": [
      "vertical-align"
    ]
  },
  "align-sub": {
    "css": "vertical-align: sub;",
    "cssProperties": [
      "vertical-align"
    ]
  },
  "align-super": {
    "css": "vertical-align: super;",
    "cssProperties": [
      "vertical-align"
    ]
  },
  "align-text-bottom": {
    "css": "vertical-align: text-bottom;",
    "cssProperties": [
      "vertical-align"
    ]
  },
  "align-text-top": {
    "css": "vertical-align: text-top;",
    "cssProperties": [
      "vertical-align"
    ]
  },
  "align-top": {
    "css": "vertical-align: top;",
    "cssProperties": [
      "vertical-align"
    ]
  },
  "break-normal": {
    "css": "overflow-wrap: normal;\n    word-break: normal;",
    "cssProperties": [
      "overflow-wrap",
      "word-break"
    ]
  },
  "break-words": {
    "css": "overflow-wrap: break-word;",
    "cssProperties": [
      "overflow-wrap"
    ]
  },
  "break-all": {
    "css": "word-break: break-all;",
    "cssProperties": [
      "word-break"
    ]
  },
  "break-keep": {
    "css": "word-break: keep-all;",
    "cssProperties": [
      "word-break"
    ]
  },
  "capitalize": {
    "css": "text-transform: capitalize;",
    "cssProperties": [
      "text-transform"
    ]
  },
  "decoration-dashed": {
    "css": "text-decoration-style: dashed;",
    "cssProperties": [
      "text-decoration-style"
    ]
  },
  "decoration-dotted": {
    "css": "text-decoration-style: dotted;",
    "cssProperties": [
      "text-decoration-style"
    ]
  },
  "decoration-double": {
    "css": "text-decoration-style: double;",
    "cssProperties": [
      "text-decoration-style"
    ]
  },
  "decoration-solid": {
    "css": "text-decoration-style: solid;",
    "cssProperties": [
      "text-decoration-style"
    ]
  },
  "decoration-wavy": {
    "css": "text-decoration-style: wavy;",
    "cssProperties": [
      "text-decoration-style"
    ]
  },
  "decoration-0": {
    "css": "text-decoration-thickness: 0px;",
    "cssProperties": [
      "text-decoration-thickness"
    ]
  },
  "decoration-1": {
    "css": "text-decoration-thickness: 1px;",
    "cssProperties": [
      "text-decoration-thickness"
    ]
  },
  "decoration-2": {
    "css": "text-decoration-thickness: 2px;",
    "cssProperties": [
      "text-decoration-thickness"
    ]
  },
  "decoration-auto": {
    "css": "text-decoration-thickness: auto;",
    "cssProperties": [
      "text-decoration-thickness"
    ]
  },
  "decoration-from-font": {
    "css": "text-decoration-thickness: from-font;",
    "cssProperties": [
      "text-decoration-thickness"
    ]
  },
  "-underline-offset-0": {
    "css": "text-underline-offset: calc(0px * -1);",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "-underline-offset-1": {
    "css": "text-underline-offset: calc(1px * -1);",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "-underline-offset-2": {
    "css": "text-underline-offset: calc(2px * -1);",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "-underline-offset-4": {
    "css": "text-underline-offset: calc(4px * -1);",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "-underline-offset-8": {
    "css": "text-underline-offset: calc(8px * -1);",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "antialiased": {
    "css": "-webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;"
  },
  "accent-auto": {
    "css": "accent-color: auto;",
    "cssProperties": [
      "accent-color"
    ]
  },
  "bg-blend-color": {
    "css": "background-blend-mode: color;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-color-burn": {
    "css": "background-blend-mode: color-burn;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-color-dodge": {
    "css": "background-blend-mode: color-dodge;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-darken": {
    "css": "background-blend-mode: darken;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-difference": {
    "css": "background-blend-mode: difference;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-exclusion": {
    "css": "background-blend-mode: exclusion;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-hard-light": {
    "css": "background-blend-mode: hard-light;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-hue": {
    "css": "background-blend-mode: hue;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-lighten": {
    "css": "background-blend-mode: lighten;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-luminosity": {
    "css": "background-blend-mode: luminosity;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-multiply": {
    "css": "background-blend-mode: multiply;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-normal": {
    "css": "background-blend-mode: normal;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-overlay": {
    "css": "background-blend-mode: overlay;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-saturation": {
    "css": "background-blend-mode: saturation;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-screen": {
    "css": "background-blend-mode: screen;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "bg-blend-soft-light": {
    "css": "background-blend-mode: soft-light;",
    "cssProperties": [
      "background-blend-mode"
    ]
  },
  "blur-none": {
    "css": "--tw-blur:  ;\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-blur",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-0": {
    "css": "--tw-brightness: brightness(0%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-50": {
    "css": "--tw-brightness: brightness(50%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-75": {
    "css": "--tw-brightness: brightness(75%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-90": {
    "css": "--tw-brightness: brightness(90%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-95": {
    "css": "--tw-brightness: brightness(95%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-100": {
    "css": "--tw-brightness: brightness(100%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-105": {
    "css": "--tw-brightness: brightness(105%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-110": {
    "css": "--tw-brightness: brightness(110%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-125": {
    "css": "--tw-brightness: brightness(125%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-150": {
    "css": "--tw-brightness: brightness(150%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "brightness-200": {
    "css": "--tw-brightness: brightness(200%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contrast-0": {
    "css": "--tw-contrast: contrast(0%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contrast-50": {
    "css": "--tw-contrast: contrast(50%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contrast-75": {
    "css": "--tw-contrast: contrast(75%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contrast-100": {
    "css": "--tw-contrast: contrast(100%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contrast-125": {
    "css": "--tw-contrast: contrast(125%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contrast-150": {
    "css": "--tw-contrast: contrast(150%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contrast-200": {
    "css": "--tw-contrast: contrast(200%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-blur-none": {
    "css": "--tw-backdrop-blur:  ;\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-blur",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-0": {
    "css": "--tw-backdrop-brightness: brightness(0%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-50": {
    "css": "--tw-backdrop-brightness: brightness(50%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-75": {
    "css": "--tw-backdrop-brightness: brightness(75%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-90": {
    "css": "--tw-backdrop-brightness: brightness(90%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-95": {
    "css": "--tw-backdrop-brightness: brightness(95%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-100": {
    "css": "--tw-backdrop-brightness: brightness(100%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-105": {
    "css": "--tw-backdrop-brightness: brightness(105%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-110": {
    "css": "--tw-backdrop-brightness: brightness(110%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-125": {
    "css": "--tw-backdrop-brightness: brightness(125%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-150": {
    "css": "--tw-backdrop-brightness: brightness(150%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-brightness-200": {
    "css": "--tw-backdrop-brightness: brightness(200%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-brightness",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-contrast-0": {
    "css": "--tw-backdrop-contrast: contrast(0%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-contrast-50": {
    "css": "--tw-backdrop-contrast: contrast(50%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-contrast-75": {
    "css": "--tw-backdrop-contrast: contrast(75%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-contrast-100": {
    "css": "--tw-backdrop-contrast: contrast(100%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-contrast-125": {
    "css": "--tw-backdrop-contrast: contrast(125%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-contrast-150": {
    "css": "--tw-backdrop-contrast: contrast(150%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-contrast-200": {
    "css": "--tw-backdrop-contrast: contrast(200%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-contrast",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-grayscale": {
    "css": "--tw-backdrop-grayscale: grayscale(100%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-grayscale-0": {
    "css": "--tw-backdrop-grayscale: grayscale(0%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-grayscale-25": {
    "css": "--tw-backdrop-grayscale: grayscale(25%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-grayscale-50": {
    "css": "--tw-backdrop-grayscale: grayscale(50%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-grayscale-75": {
    "css": "--tw-backdrop-grayscale: grayscale(75%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-grayscale-100": {
    "css": "--tw-backdrop-grayscale: grayscale(100%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-hue-rotate-0": {
    "css": "--tw-backdrop-hue-rotate: hue-rotate(0deg);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-hue-rotate-15": {
    "css": "--tw-backdrop-hue-rotate: hue-rotate(15deg);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-hue-rotate-30": {
    "css": "--tw-backdrop-hue-rotate: hue-rotate(30deg);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-hue-rotate-60": {
    "css": "--tw-backdrop-hue-rotate: hue-rotate(60deg);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-hue-rotate-90": {
    "css": "--tw-backdrop-hue-rotate: hue-rotate(90deg);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-hue-rotate-180": {
    "css": "--tw-backdrop-hue-rotate: hue-rotate(180deg);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-invert": {
    "css": "--tw-backdrop-invert: invert(100%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-invert-0": {
    "css": "--tw-backdrop-invert: invert(0%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-invert-25": {
    "css": "--tw-backdrop-invert: invert(25%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-invert-50": {
    "css": "--tw-backdrop-invert: invert(50%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-invert-75": {
    "css": "--tw-backdrop-invert: invert(75%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-invert-100": {
    "css": "--tw-backdrop-invert: invert(100%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-0": {
    "css": "--tw-backdrop-opacity: opacity(0%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-5": {
    "css": "--tw-backdrop-opacity: opacity(5%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-10": {
    "css": "--tw-backdrop-opacity: opacity(10%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-15": {
    "css": "--tw-backdrop-opacity: opacity(15%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-20": {
    "css": "--tw-backdrop-opacity: opacity(20%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-25": {
    "css": "--tw-backdrop-opacity: opacity(25%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-30": {
    "css": "--tw-backdrop-opacity: opacity(30%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-35": {
    "css": "--tw-backdrop-opacity: opacity(35%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-40": {
    "css": "--tw-backdrop-opacity: opacity(40%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-45": {
    "css": "--tw-backdrop-opacity: opacity(45%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-50": {
    "css": "--tw-backdrop-opacity: opacity(50%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-55": {
    "css": "--tw-backdrop-opacity: opacity(55%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-60": {
    "css": "--tw-backdrop-opacity: opacity(60%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-65": {
    "css": "--tw-backdrop-opacity: opacity(65%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-70": {
    "css": "--tw-backdrop-opacity: opacity(70%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-75": {
    "css": "--tw-backdrop-opacity: opacity(75%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-80": {
    "css": "--tw-backdrop-opacity: opacity(80%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-85": {
    "css": "--tw-backdrop-opacity: opacity(85%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-90": {
    "css": "--tw-backdrop-opacity: opacity(90%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-95": {
    "css": "--tw-backdrop-opacity: opacity(95%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-opacity-100": {
    "css": "--tw-backdrop-opacity: opacity(100%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-opacity",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-saturate-0": {
    "css": "--tw-backdrop-saturate: saturate(0%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-saturate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-saturate-50": {
    "css": "--tw-backdrop-saturate: saturate(50%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-saturate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-saturate-100": {
    "css": "--tw-backdrop-saturate: saturate(100%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-saturate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-saturate-150": {
    "css": "--tw-backdrop-saturate: saturate(150%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-saturate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-saturate-200": {
    "css": "--tw-backdrop-saturate: saturate(200%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-saturate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-sepia": {
    "css": "--tw-backdrop-sepia: sepia(100%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-sepia",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-sepia-0": {
    "css": "--tw-backdrop-sepia: sepia(0%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-sepia",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-sepia-50": {
    "css": "--tw-backdrop-sepia: sepia(50%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-sepia",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "backdrop-sepia-100": {
    "css": "--tw-backdrop-sepia: sepia(100%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);",
    "cssProperties": [
      "backdrop-filter"
    ],
    "atProperties": [
      {
        "name": "--tw-backdrop-sepia",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "delay-75": {
    "css": "transition-delay: 75ms;",
    "cssProperties": [
      "transition-delay"
    ]
  },
  "delay-100": {
    "css": "transition-delay: 100ms;",
    "cssProperties": [
      "transition-delay"
    ]
  },
  "delay-150": {
    "css": "transition-delay: 150ms;",
    "cssProperties": [
      "transition-delay"
    ]
  },
  "delay-200": {
    "css": "transition-delay: 200ms;",
    "cssProperties": [
      "transition-delay"
    ]
  },
  "delay-300": {
    "css": "transition-delay: 300ms;",
    "cssProperties": [
      "transition-delay"
    ]
  },
  "delay-500": {
    "css": "transition-delay: 500ms;",
    "cssProperties": [
      "transition-delay"
    ]
  },
  "contain-inline-size": {
    "css": "--tw-contain-size: inline-size;\n    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);",
    "cssProperties": [
      "contain"
    ],
    "atProperties": [
      {
        "name": "--tw-contain-size",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contain-layout": {
    "css": "--tw-contain-layout: layout;\n    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);",
    "cssProperties": [
      "contain"
    ],
    "atProperties": [
      {
        "name": "--tw-contain-layout",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contain-paint": {
    "css": "--tw-contain-paint: paint;\n    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);",
    "cssProperties": [
      "contain"
    ],
    "atProperties": [
      {
        "name": "--tw-contain-paint",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contain-size": {
    "css": "--tw-contain-size: size;\n    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);",
    "cssProperties": [
      "contain"
    ],
    "atProperties": [
      {
        "name": "--tw-contain-size",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contain-style": {
    "css": "--tw-contain-style: style;\n    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);",
    "cssProperties": [
      "contain"
    ],
    "atProperties": [
      {
        "name": "--tw-contain-style",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "contain-content": {
    "css": "contain: content;",
    "cssProperties": [
      "contain"
    ]
  },
  "contain-none": {
    "css": "contain: none;",
    "cssProperties": [
      "contain"
    ]
  },
  "contain-strict": {
    "css": "contain: strict;",
    "cssProperties": [
      "contain"
    ]
  },
  "content-none": {
    "css": "--tw-content: none;\n    content: none;",
    "cssProperties": [
      "content"
    ]
  },
  "backface-hidden": {
    "css": "backface-visibility: hidden;",
    "cssProperties": [
      "backface-visibility"
    ]
  },
  "backface-visible": {
    "css": "backface-visibility: visible;",
    "cssProperties": [
      "backface-visibility"
    ]
  },
  "fixed": {
    "css": "position: fixed;",
    "cssProperties": [
      "position"
    ]
  },
  "inset-1/2": {
    "css": "inset: calc(1/2 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-1/3": {
    "css": "inset: calc(1/3 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-1/4": {
    "css": "inset: calc(1/4 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-1/5": {
    "css": "inset: calc(1/5 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-1/6": {
    "css": "inset: calc(1/6 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-1/12": {
    "css": "inset: calc(1/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-2/3": {
    "css": "inset: calc(2/3 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-2/4": {
    "css": "inset: calc(2/4 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-2/5": {
    "css": "inset: calc(2/5 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-2/6": {
    "css": "inset: calc(2/6 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-2/12": {
    "css": "inset: calc(2/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-3/4": {
    "css": "inset: calc(3/4 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-3/5": {
    "css": "inset: calc(3/5 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-3/6": {
    "css": "inset: calc(3/6 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-3/12": {
    "css": "inset: calc(3/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-4/5": {
    "css": "inset: calc(4/5 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-4/6": {
    "css": "inset: calc(4/6 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-4/12": {
    "css": "inset: calc(4/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-5/6": {
    "css": "inset: calc(5/6 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-5/12": {
    "css": "inset: calc(5/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-6/12": {
    "css": "inset: calc(6/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-7/12": {
    "css": "inset: calc(7/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-8/12": {
    "css": "inset: calc(8/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-9/12": {
    "css": "inset: calc(9/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-10/12": {
    "css": "inset: calc(10/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-11/12": {
    "css": "inset: calc(11/12 * 100%);",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-auto": {
    "css": "inset: auto;",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-full": {
    "css": "inset: 100%;",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-px": {
    "css": "inset: 1px;",
    "cssProperties": [
      "inset"
    ]
  },
  "inset-x-1/2": {
    "css": "inset-inline: calc(1/2 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-1/3": {
    "css": "inset-inline: calc(1/3 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-1/4": {
    "css": "inset-inline: calc(1/4 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-1/5": {
    "css": "inset-inline: calc(1/5 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-1/6": {
    "css": "inset-inline: calc(1/6 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-1/12": {
    "css": "inset-inline: calc(1/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-2/3": {
    "css": "inset-inline: calc(2/3 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-2/4": {
    "css": "inset-inline: calc(2/4 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-2/5": {
    "css": "inset-inline: calc(2/5 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-2/6": {
    "css": "inset-inline: calc(2/6 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-2/12": {
    "css": "inset-inline: calc(2/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-3/4": {
    "css": "inset-inline: calc(3/4 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-3/5": {
    "css": "inset-inline: calc(3/5 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-3/6": {
    "css": "inset-inline: calc(3/6 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-3/12": {
    "css": "inset-inline: calc(3/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-4/5": {
    "css": "inset-inline: calc(4/5 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-4/6": {
    "css": "inset-inline: calc(4/6 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-4/12": {
    "css": "inset-inline: calc(4/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-5/6": {
    "css": "inset-inline: calc(5/6 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-5/12": {
    "css": "inset-inline: calc(5/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-6/12": {
    "css": "inset-inline: calc(6/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-7/12": {
    "css": "inset-inline: calc(7/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-8/12": {
    "css": "inset-inline: calc(8/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-9/12": {
    "css": "inset-inline: calc(9/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-10/12": {
    "css": "inset-inline: calc(10/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-11/12": {
    "css": "inset-inline: calc(11/12 * 100%);",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-auto": {
    "css": "inset-inline: auto;",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-full": {
    "css": "inset-inline: 100%;",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-x-px": {
    "css": "inset-inline: 1px;",
    "cssProperties": [
      "inset-inline"
    ]
  },
  "inset-y-1/2": {
    "css": "inset-block: calc(1/2 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-1/3": {
    "css": "inset-block: calc(1/3 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-1/4": {
    "css": "inset-block: calc(1/4 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-1/5": {
    "css": "inset-block: calc(1/5 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-1/6": {
    "css": "inset-block: calc(1/6 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-1/12": {
    "css": "inset-block: calc(1/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-2/3": {
    "css": "inset-block: calc(2/3 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-2/4": {
    "css": "inset-block: calc(2/4 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-2/5": {
    "css": "inset-block: calc(2/5 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-2/6": {
    "css": "inset-block: calc(2/6 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-2/12": {
    "css": "inset-block: calc(2/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-3/4": {
    "css": "inset-block: calc(3/4 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-3/5": {
    "css": "inset-block: calc(3/5 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-3/6": {
    "css": "inset-block: calc(3/6 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-3/12": {
    "css": "inset-block: calc(3/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-4/5": {
    "css": "inset-block: calc(4/5 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-4/6": {
    "css": "inset-block: calc(4/6 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-4/12": {
    "css": "inset-block: calc(4/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-5/6": {
    "css": "inset-block: calc(5/6 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-5/12": {
    "css": "inset-block: calc(5/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-6/12": {
    "css": "inset-block: calc(6/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-7/12": {
    "css": "inset-block: calc(7/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-8/12": {
    "css": "inset-block: calc(8/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-9/12": {
    "css": "inset-block: calc(9/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-10/12": {
    "css": "inset-block: calc(10/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-11/12": {
    "css": "inset-block: calc(11/12 * 100%);",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-auto": {
    "css": "inset-block: auto;",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-full": {
    "css": "inset-block: 100%;",
    "cssProperties": [
      "inset-block"
    ]
  },
  "inset-y-px": {
    "css": "inset-block: 1px;",
    "cssProperties": [
      "inset-block"
    ]
  },
  "end-1/2": {
    "css": "inset-inline-end: calc(1/2 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-1/3": {
    "css": "inset-inline-end: calc(1/3 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-1/4": {
    "css": "inset-inline-end: calc(1/4 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-1/5": {
    "css": "inset-inline-end: calc(1/5 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-1/6": {
    "css": "inset-inline-end: calc(1/6 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-1/12": {
    "css": "inset-inline-end: calc(1/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-2/3": {
    "css": "inset-inline-end: calc(2/3 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-2/4": {
    "css": "inset-inline-end: calc(2/4 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-2/5": {
    "css": "inset-inline-end: calc(2/5 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-2/6": {
    "css": "inset-inline-end: calc(2/6 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-2/12": {
    "css": "inset-inline-end: calc(2/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-3/4": {
    "css": "inset-inline-end: calc(3/4 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-3/5": {
    "css": "inset-inline-end: calc(3/5 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-3/6": {
    "css": "inset-inline-end: calc(3/6 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-3/12": {
    "css": "inset-inline-end: calc(3/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-4/5": {
    "css": "inset-inline-end: calc(4/5 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-4/6": {
    "css": "inset-inline-end: calc(4/6 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-4/12": {
    "css": "inset-inline-end: calc(4/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-5/6": {
    "css": "inset-inline-end: calc(5/6 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-5/12": {
    "css": "inset-inline-end: calc(5/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-6/12": {
    "css": "inset-inline-end: calc(6/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-7/12": {
    "css": "inset-inline-end: calc(7/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-8/12": {
    "css": "inset-inline-end: calc(8/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-9/12": {
    "css": "inset-inline-end: calc(9/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-10/12": {
    "css": "inset-inline-end: calc(10/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-11/12": {
    "css": "inset-inline-end: calc(11/12 * 100%);",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-auto": {
    "css": "inset-inline-end: auto;",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-full": {
    "css": "inset-inline-end: 100%;",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "end-px": {
    "css": "inset-inline-end: 1px;",
    "cssProperties": [
      "inset-inline-end"
    ]
  },
  "left-1/2": {
    "css": "left: calc(1/2 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-1/3": {
    "css": "left: calc(1/3 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-1/4": {
    "css": "left: calc(1/4 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-1/5": {
    "css": "left: calc(1/5 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-1/6": {
    "css": "left: calc(1/6 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-1/12": {
    "css": "left: calc(1/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-2/3": {
    "css": "left: calc(2/3 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-2/4": {
    "css": "left: calc(2/4 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-2/5": {
    "css": "left: calc(2/5 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-2/6": {
    "css": "left: calc(2/6 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-2/12": {
    "css": "left: calc(2/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-3/4": {
    "css": "left: calc(3/4 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-3/5": {
    "css": "left: calc(3/5 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-3/6": {
    "css": "left: calc(3/6 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-3/12": {
    "css": "left: calc(3/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-4/5": {
    "css": "left: calc(4/5 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-4/6": {
    "css": "left: calc(4/6 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-4/12": {
    "css": "left: calc(4/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-5/6": {
    "css": "left: calc(5/6 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-5/12": {
    "css": "left: calc(5/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-6/12": {
    "css": "left: calc(6/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-7/12": {
    "css": "left: calc(7/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-8/12": {
    "css": "left: calc(8/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-9/12": {
    "css": "left: calc(9/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-10/12": {
    "css": "left: calc(10/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-11/12": {
    "css": "left: calc(11/12 * 100%);",
    "cssProperties": [
      "left"
    ]
  },
  "left-auto": {
    "css": "left: auto;",
    "cssProperties": [
      "left"
    ]
  },
  "left-full": {
    "css": "left: 100%;",
    "cssProperties": [
      "left"
    ]
  },
  "left-px": {
    "css": "left: 1px;",
    "cssProperties": [
      "left"
    ]
  },
  "isolate": {
    "css": "isolation: isolate;",
    "cssProperties": [
      "isolation"
    ]
  },
  "isolation-auto": {
    "css": "isolation: auto;",
    "cssProperties": [
      "isolation"
    ]
  },
  "float-end": {
    "css": "float: inline-end;",
    "cssProperties": [
      "float"
    ]
  },
  "float-left": {
    "css": "float: left;",
    "cssProperties": [
      "float"
    ]
  },
  "float-none": {
    "css": "float: none;",
    "cssProperties": [
      "float"
    ]
  },
  "float-right": {
    "css": "float: right;",
    "cssProperties": [
      "float"
    ]
  },
  "float-start": {
    "css": "float: inline-start;",
    "cssProperties": [
      "float"
    ]
  },
  "m-auto": {
    "css": "margin: auto;",
    "cssProperties": [
      "margin"
    ]
  },
  "m-px": {
    "css": "margin: 1px;",
    "cssProperties": [
      "margin"
    ]
  },
  "line-clamp-1": {
    "css": "overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 1;",
    "cssProperties": [
      "overflow",
      "display"
    ]
  },
  "line-clamp-2": {
    "css": "overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;",
    "cssProperties": [
      "overflow",
      "display"
    ]
  },
  "line-clamp-3": {
    "css": "overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 3;",
    "cssProperties": [
      "overflow",
      "display"
    ]
  },
  "line-clamp-4": {
    "css": "overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 4;",
    "cssProperties": [
      "overflow",
      "display"
    ]
  },
  "line-clamp-5": {
    "css": "overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 5;",
    "cssProperties": [
      "overflow",
      "display"
    ]
  },
  "line-clamp-6": {
    "css": "overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 6;",
    "cssProperties": [
      "overflow",
      "display"
    ]
  },
  "line-clamp-none": {
    "css": "overflow: visible;\n    display: block;\n    -webkit-box-orient: horizontal;\n    -webkit-line-clamp: unset;",
    "cssProperties": [
      "overflow",
      "display"
    ]
  },
  "flex": {
    "css": "display: flex;",
    "cssProperties": [
      "display"
    ]
  },
  "flow-root": {
    "css": "display: flow-root;",
    "cssProperties": [
      "display"
    ]
  },
  "grid": {
    "css": "display: grid;",
    "cssProperties": [
      "display"
    ]
  },
  "hidden": {
    "css": "display: none;",
    "cssProperties": [
      "display"
    ]
  },
  "inline": {
    "css": "display: inline;",
    "cssProperties": [
      "display"
    ]
  },
  "inline-block": {
    "css": "display: inline-block;",
    "cssProperties": [
      "display"
    ]
  },
  "inline-flex": {
    "css": "display: inline-flex;",
    "cssProperties": [
      "display"
    ]
  },
  "inline-grid": {
    "css": "display: inline-grid;",
    "cssProperties": [
      "display"
    ]
  },
  "inline-table": {
    "css": "display: inline-table;",
    "cssProperties": [
      "display"
    ]
  },
  "list-item": {
    "css": "display: list-item;",
    "cssProperties": [
      "display"
    ]
  },
  "field-sizing-content": {
    "css": "field-sizing: content;",
    "cssProperties": [
      "field-sizing"
    ]
  },
  "field-sizing-fixed": {
    "css": "field-sizing: fixed;",
    "cssProperties": [
      "field-sizing"
    ]
  },
  "h-1/2": {
    "css": "height: calc(1/2 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-1/3": {
    "css": "height: calc(1/3 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-1/4": {
    "css": "height: calc(1/4 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-1/5": {
    "css": "height: calc(1/5 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-1/6": {
    "css": "height: calc(1/6 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-1/12": {
    "css": "height: calc(1/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-2/3": {
    "css": "height: calc(2/3 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-2/4": {
    "css": "height: calc(2/4 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-2/5": {
    "css": "height: calc(2/5 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-2/6": {
    "css": "height: calc(2/6 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-2/12": {
    "css": "height: calc(2/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-3/4": {
    "css": "height: calc(3/4 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-3/5": {
    "css": "height: calc(3/5 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-3/6": {
    "css": "height: calc(3/6 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-3/12": {
    "css": "height: calc(3/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-4/5": {
    "css": "height: calc(4/5 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-4/6": {
    "css": "height: calc(4/6 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-4/12": {
    "css": "height: calc(4/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-5/6": {
    "css": "height: calc(5/6 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-5/12": {
    "css": "height: calc(5/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-6/12": {
    "css": "height: calc(6/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-7/12": {
    "css": "height: calc(7/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-8/12": {
    "css": "height: calc(8/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-9/12": {
    "css": "height: calc(9/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-10/12": {
    "css": "height: calc(10/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-11/12": {
    "css": "height: calc(11/12 * 100%);",
    "cssProperties": [
      "height"
    ]
  },
  "h-auto": {
    "css": "height: auto;",
    "cssProperties": [
      "height"
    ]
  },
  "h-dvh": {
    "css": "height: 100dvh;",
    "cssProperties": [
      "height"
    ]
  },
  "h-dvw": {
    "css": "height: 100dvw;",
    "cssProperties": [
      "height"
    ]
  },
  "h-fit": {
    "css": "height: fit-content;",
    "cssProperties": [
      "height"
    ]
  },
  "h-full": {
    "css": "height: 100%;",
    "cssProperties": [
      "height"
    ]
  },
  "h-lh": {
    "css": "height: 1lh;",
    "cssProperties": [
      "height"
    ]
  },
  "h-lvh": {
    "css": "height: 100lvh;",
    "cssProperties": [
      "height"
    ]
  },
  "h-lvw": {
    "css": "height: 100lvw;",
    "cssProperties": [
      "height"
    ]
  },
  "h-max": {
    "css": "height: max-content;",
    "cssProperties": [
      "height"
    ]
  },
  "h-min": {
    "css": "height: min-content;",
    "cssProperties": [
      "height"
    ]
  },
  "h-px": {
    "css": "height: 1px;",
    "cssProperties": [
      "height"
    ]
  },
  "h-screen": {
    "css": "height: 100vh;",
    "cssProperties": [
      "height"
    ]
  },
  "h-svh": {
    "css": "height: 100svh;",
    "cssProperties": [
      "height"
    ]
  },
  "h-svw": {
    "css": "height: 100svw;",
    "cssProperties": [
      "height"
    ]
  },
  "flex-1": {
    "css": "flex: 1;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-1/2": {
    "css": "flex: calc(1/2 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-1/3": {
    "css": "flex: calc(1/3 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-1/4": {
    "css": "flex: calc(1/4 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-1/5": {
    "css": "flex: calc(1/5 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-1/6": {
    "css": "flex: calc(1/6 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-1/12": {
    "css": "flex: calc(1/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-2": {
    "css": "flex: 2;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-2/3": {
    "css": "flex: calc(2/3 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-2/4": {
    "css": "flex: calc(2/4 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-2/5": {
    "css": "flex: calc(2/5 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-2/6": {
    "css": "flex: calc(2/6 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-2/12": {
    "css": "flex: calc(2/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-3": {
    "css": "flex: 3;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-3/4": {
    "css": "flex: calc(3/4 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-3/5": {
    "css": "flex: calc(3/5 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-3/6": {
    "css": "flex: calc(3/6 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-3/12": {
    "css": "flex: calc(3/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-4": {
    "css": "flex: 4;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-4/5": {
    "css": "flex: calc(4/5 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-4/6": {
    "css": "flex: calc(4/6 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-4/12": {
    "css": "flex: calc(4/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-5": {
    "css": "flex: 5;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-5/6": {
    "css": "flex: calc(5/6 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-5/12": {
    "css": "flex: calc(5/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-6": {
    "css": "flex: 6;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-6/12": {
    "css": "flex: calc(6/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-7": {
    "css": "flex: 7;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-7/12": {
    "css": "flex: calc(7/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-8": {
    "css": "flex: 8;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-8/12": {
    "css": "flex: calc(8/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-9": {
    "css": "flex: 9;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-9/12": {
    "css": "flex: calc(9/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-10": {
    "css": "flex: 10;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-10/12": {
    "css": "flex: calc(10/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-11": {
    "css": "flex: 11;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-11/12": {
    "css": "flex: calc(11/12 * 100%);",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-12": {
    "css": "flex: 12;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-auto": {
    "css": "flex: auto;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-initial": {
    "css": "flex: 0 auto;",
    "cssProperties": [
      "flex"
    ]
  },
  "flex-none": {
    "css": "flex: none;",
    "cssProperties": [
      "flex"
    ]
  },
  "grow": {
    "css": "flex-grow: 1;",
    "cssProperties": [
      "flex-grow"
    ]
  },
  "grow-0": {
    "css": "flex-grow: 0;",
    "cssProperties": [
      "flex-grow"
    ]
  },
  "list-inside": {
    "css": "list-style-position: inside;",
    "cssProperties": [
      "list-style-position"
    ]
  },
  "list-outside": {
    "css": "list-style-position: outside;",
    "cssProperties": [
      "list-style-position"
    ]
  },
  "list-decimal": {
    "css": "list-style-type: decimal;",
    "cssProperties": [
      "list-style-type"
    ]
  },
  "list-disc": {
    "css": "list-style-type: disc;",
    "cssProperties": [
      "list-style-type"
    ]
  },
  "list-none": {
    "css": "list-style-type: none;",
    "cssProperties": [
      "list-style-type"
    ]
  },
  "list-image-none": {
    "css": "list-style-image: none;",
    "cssProperties": [
      "list-style-image"
    ]
  },
  "grid-flow-col": {
    "css": "grid-auto-flow: column;",
    "cssProperties": [
      "grid-auto-flow"
    ]
  },
  "grid-flow-col-dense": {
    "css": "grid-auto-flow: column dense;",
    "cssProperties": [
      "grid-auto-flow"
    ]
  },
  "grid-flow-dense": {
    "css": "grid-auto-flow: dense;",
    "cssProperties": [
      "grid-auto-flow"
    ]
  },
  "grid-flow-row": {
    "css": "grid-auto-flow: row;",
    "cssProperties": [
      "grid-auto-flow"
    ]
  },
  "grid-flow-row-dense": {
    "css": "grid-auto-flow: row dense;",
    "cssProperties": [
      "grid-auto-flow"
    ]
  },
  "grid-cols-1": {
    "css": "grid-template-columns: repeat(1, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-2": {
    "css": "grid-template-columns: repeat(2, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-3": {
    "css": "grid-template-columns: repeat(3, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-4": {
    "css": "grid-template-columns: repeat(4, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-5": {
    "css": "grid-template-columns: repeat(5, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-6": {
    "css": "grid-template-columns: repeat(6, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-7": {
    "css": "grid-template-columns: repeat(7, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-8": {
    "css": "grid-template-columns: repeat(8, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-9": {
    "css": "grid-template-columns: repeat(9, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-10": {
    "css": "grid-template-columns: repeat(10, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-11": {
    "css": "grid-template-columns: repeat(11, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-12": {
    "css": "grid-template-columns: repeat(12, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-none": {
    "css": "grid-template-columns: none;",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-cols-subgrid": {
    "css": "grid-template-columns: subgrid;",
    "cssProperties": [
      "grid-template-columns"
    ]
  },
  "grid-rows-1": {
    "css": "grid-template-rows: repeat(1, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-2": {
    "css": "grid-template-rows: repeat(2, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-3": {
    "css": "grid-template-rows: repeat(3, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-4": {
    "css": "grid-template-rows: repeat(4, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-5": {
    "css": "grid-template-rows: repeat(5, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-6": {
    "css": "grid-template-rows: repeat(6, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-7": {
    "css": "grid-template-rows: repeat(7, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-8": {
    "css": "grid-template-rows: repeat(8, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-9": {
    "css": "grid-template-rows: repeat(9, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-10": {
    "css": "grid-template-rows: repeat(10, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-11": {
    "css": "grid-template-rows: repeat(11, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-12": {
    "css": "grid-template-rows: repeat(12, minmax(0, 1fr));",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-none": {
    "css": "grid-template-rows: none;",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "grid-rows-subgrid": {
    "css": "grid-template-rows: subgrid;",
    "cssProperties": [
      "grid-template-rows"
    ]
  },
  "flex-col": {
    "css": "flex-direction: column;",
    "cssProperties": [
      "flex-direction"
    ]
  },
  "flex-col-reverse": {
    "css": "flex-direction: column-reverse;",
    "cssProperties": [
      "flex-direction"
    ]
  },
  "flex-row": {
    "css": "flex-direction: row;",
    "cssProperties": [
      "flex-direction"
    ]
  },
  "flex-row-reverse": {
    "css": "flex-direction: row-reverse;",
    "cssProperties": [
      "flex-direction"
    ]
  },
  "flex-nowrap": {
    "css": "flex-wrap: nowrap;",
    "cssProperties": [
      "flex-wrap"
    ]
  },
  "flex-wrap": {
    "css": "flex-wrap: wrap;",
    "cssProperties": [
      "flex-wrap"
    ]
  },
  "flex-wrap-reverse": {
    "css": "flex-wrap: wrap-reverse;",
    "cssProperties": [
      "flex-wrap"
    ]
  },
  "items-baseline": {
    "css": "align-items: baseline;",
    "cssProperties": [
      "align-items"
    ]
  },
  "items-baseline-last": {
    "css": "align-items: last baseline;",
    "cssProperties": [
      "align-items"
    ]
  },
  "items-center": {
    "css": "align-items: center;",
    "cssProperties": [
      "align-items"
    ]
  },
  "items-center-safe": {
    "css": "align-items: safe center;",
    "cssProperties": [
      "align-items"
    ]
  },
  "items-end": {
    "css": "align-items: flex-end;",
    "cssProperties": [
      "align-items"
    ]
  },
  "items-end-safe": {
    "css": "align-items: safe flex-end;",
    "cssProperties": [
      "align-items"
    ]
  },
  "items-start": {
    "css": "align-items: flex-start;",
    "cssProperties": [
      "align-items"
    ]
  },
  "items-stretch": {
    "css": "align-items: stretch;",
    "cssProperties": [
      "align-items"
    ]
  },
  "justify-around": {
    "css": "justify-content: space-around;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-baseline": {
    "css": "justify-content: baseline;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-between": {
    "css": "justify-content: space-between;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-center": {
    "css": "justify-content: center;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-center-safe": {
    "css": "justify-content: safe center;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-end": {
    "css": "justify-content: flex-end;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-end-safe": {
    "css": "justify-content: safe flex-end;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-evenly": {
    "css": "justify-content: space-evenly;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-normal": {
    "css": "justify-content: normal;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-start": {
    "css": "justify-content: flex-start;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-stretch": {
    "css": "justify-content: stretch;",
    "cssProperties": [
      "justify-content"
    ]
  },
  "justify-items-center": {
    "css": "justify-items: center;",
    "cssProperties": [
      "justify-items"
    ]
  },
  "justify-items-center-safe": {
    "css": "justify-items: safe center;",
    "cssProperties": [
      "justify-items"
    ]
  },
  "justify-items-end": {
    "css": "justify-items: end;",
    "cssProperties": [
      "justify-items"
    ]
  },
  "justify-items-end-safe": {
    "css": "justify-items: safe end;",
    "cssProperties": [
      "justify-items"
    ]
  },
  "justify-items-normal": {
    "css": "justify-items: normal;",
    "cssProperties": [
      "justify-items"
    ]
  },
  "justify-items-start": {
    "css": "justify-items: start;",
    "cssProperties": [
      "justify-items"
    ]
  },
  "justify-items-stretch": {
    "css": "justify-items: stretch;",
    "cssProperties": [
      "justify-items"
    ]
  },
  "gap-px": {
    "css": "gap: 1px;",
    "cssProperties": [
      "gap"
    ]
  },
  "gap-x-px": {
    "css": "column-gap: 1px;",
    "cssProperties": [
      "column-gap"
    ]
  },
  "gap-y-px": {
    "css": "row-gap: 1px;",
    "cssProperties": [
      "row-gap"
    ]
  },
  "divide-x": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-x-reverse: 0;\n      border-inline-style: var(--tw-border-style);\n      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));\n      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));\n    }",
    "cssProperties": [
      "border-inline-style",
      "border-inline-start-width",
      "border-inline-end-width"
    ],
    "atProperties": [
      {
        "name": "--tw-divide-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-x-0": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-x-reverse: 0;\n      border-inline-style: var(--tw-border-style);\n      border-inline-start-width: calc(0px * var(--tw-divide-x-reverse));\n      border-inline-end-width: calc(0px * calc(1 - var(--tw-divide-x-reverse)));\n    }",
    "cssProperties": [
      "border-inline-style",
      "border-inline-start-width",
      "border-inline-end-width"
    ],
    "atProperties": [
      {
        "name": "--tw-divide-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-x-2": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-x-reverse: 0;\n      border-inline-style: var(--tw-border-style);\n      border-inline-start-width: calc(2px * var(--tw-divide-x-reverse));\n      border-inline-end-width: calc(2px * calc(1 - var(--tw-divide-x-reverse)));\n    }",
    "cssProperties": [
      "border-inline-style",
      "border-inline-start-width",
      "border-inline-end-width"
    ],
    "atProperties": [
      {
        "name": "--tw-divide-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-x-4": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-x-reverse: 0;\n      border-inline-style: var(--tw-border-style);\n      border-inline-start-width: calc(4px * var(--tw-divide-x-reverse));\n      border-inline-end-width: calc(4px * calc(1 - var(--tw-divide-x-reverse)));\n    }",
    "cssProperties": [
      "border-inline-style",
      "border-inline-start-width",
      "border-inline-end-width"
    ],
    "atProperties": [
      {
        "name": "--tw-divide-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-x-8": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-x-reverse: 0;\n      border-inline-style: var(--tw-border-style);\n      border-inline-start-width: calc(8px * var(--tw-divide-x-reverse));\n      border-inline-end-width: calc(8px * calc(1 - var(--tw-divide-x-reverse)));\n    }",
    "cssProperties": [
      "border-inline-style",
      "border-inline-start-width",
      "border-inline-end-width"
    ],
    "atProperties": [
      {
        "name": "--tw-divide-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-y": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-y-reverse: 0;\n      border-bottom-style: var(--tw-border-style);\n      border-top-style: var(--tw-border-style);\n      border-top-width: calc(1px * var(--tw-divide-y-reverse));\n      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));\n    }",
    "cssProperties": [
      "border-bottom-style",
      "border-top-style",
      "border-top-width",
      "border-bottom-width"
    ],
    "atProperties": [
      {
        "name": "--tw-divide-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-y-0": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-y-reverse: 0;\n      border-bottom-style: var(--tw-border-style);\n      border-top-style: var(--tw-border-style);\n      border-top-width: calc(0px * var(--tw-divide-y-reverse));\n      border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));\n    }",
    "cssProperties": [
      "border-bottom-style",
      "border-top-style",
      "border-top-width",
      "border-bottom-width"
    ],
    "atProperties": [
      {
        "name": "--tw-divide-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-y-2": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-y-reverse: 0;\n      border-bottom-style: var(--tw-border-style);\n      border-top-style: var(--tw-border-style);\n      border-top-width: calc(2px * var(--tw-divide-y-reverse));\n      border-bottom-width: calc(2px * calc(1 - var(--tw-divide-y-reverse)));\n    }",
    "cssProperties": [
      "border-bottom-style",
      "border-top-style",
      "border-top-width",
      "border-bottom-width"
    ],
    "atProperties": [
      {
        "name": "--tw-divide-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-y-4": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-y-reverse: 0;\n      border-bottom-style: var(--tw-border-style);\n      border-top-style: var(--tw-border-style);\n      border-top-width: calc(4px * var(--tw-divide-y-reverse));\n      border-bottom-width: calc(4px * calc(1 - var(--tw-divide-y-reverse)));\n    }",
    "cssProperties": [
      "border-bottom-style",
      "border-top-style",
      "border-top-width",
      "border-bottom-width"
    ],
    "atProperties": [
      {
        "name": "--tw-divide-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-y-8": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-y-reverse: 0;\n      border-bottom-style: var(--tw-border-style);\n      border-top-style: var(--tw-border-style);\n      border-top-width: calc(8px * var(--tw-divide-y-reverse));\n      border-bottom-width: calc(8px * calc(1 - var(--tw-divide-y-reverse)));\n    }",
    "cssProperties": [
      "border-bottom-style",
      "border-top-style",
      "border-top-width",
      "border-bottom-width"
    ],
    "atProperties": [
      {
        "name": "--tw-divide-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-y-reverse": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-y-reverse: 1;\n    }",
    "atProperties": [
      {
        "name": "--tw-divide-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-dashed": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-border-style: dashed;\n      border-style: dashed;\n    }",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "divide-dotted": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-border-style: dotted;\n      border-style: dotted;\n    }",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "divide-double": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-border-style: double;\n      border-style: double;\n    }",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "divide-none": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-border-style: none;\n      border-style: none;\n    }",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "divide-solid": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-border-style: solid;\n      border-style: solid;\n    }",
    "cssProperties": [
      "border-style"
    ],
    "atProperties": [
      {
        "name": "--tw-border-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "justify-self-auto": {
    "css": "justify-self: auto;",
    "cssProperties": [
      "justify-self"
    ]
  },
  "justify-self-center": {
    "css": "justify-self: center;",
    "cssProperties": [
      "justify-self"
    ]
  },
  "justify-self-center-safe": {
    "css": "justify-self: safe center;",
    "cssProperties": [
      "justify-self"
    ]
  },
  "justify-self-end": {
    "css": "justify-self: flex-end;",
    "cssProperties": [
      "justify-self"
    ]
  },
  "justify-self-end-safe": {
    "css": "justify-self: safe flex-end;",
    "cssProperties": [
      "justify-self"
    ]
  },
  "justify-self-start": {
    "css": "justify-self: flex-start;",
    "cssProperties": [
      "justify-self"
    ]
  },
  "justify-self-stretch": {
    "css": "justify-self: stretch;",
    "cssProperties": [
      "justify-self"
    ]
  },
  "from-0%": {
    "css": "--tw-gradient-from-position: 0%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-5%": {
    "css": "--tw-gradient-from-position: 5%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-10%": {
    "css": "--tw-gradient-from-position: 10%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-15%": {
    "css": "--tw-gradient-from-position: 15%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-20%": {
    "css": "--tw-gradient-from-position: 20%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-25%": {
    "css": "--tw-gradient-from-position: 25%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-30%": {
    "css": "--tw-gradient-from-position: 30%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-35%": {
    "css": "--tw-gradient-from-position: 35%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-40%": {
    "css": "--tw-gradient-from-position: 40%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-45%": {
    "css": "--tw-gradient-from-position: 45%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-50%": {
    "css": "--tw-gradient-from-position: 50%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-55%": {
    "css": "--tw-gradient-from-position: 55%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-60%": {
    "css": "--tw-gradient-from-position: 60%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-65%": {
    "css": "--tw-gradient-from-position: 65%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-70%": {
    "css": "--tw-gradient-from-position: 70%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-75%": {
    "css": "--tw-gradient-from-position: 75%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-80%": {
    "css": "--tw-gradient-from-position: 80%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-85%": {
    "css": "--tw-gradient-from-position: 85%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-90%": {
    "css": "--tw-gradient-from-position: 90%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-95%": {
    "css": "--tw-gradient-from-position: 95%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "from-100%": {
    "css": "--tw-gradient-from-position: 100%;",
    "atProperties": [
      {
        "name": "--tw-gradient-from-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-from-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-b-to-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-b-to-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-add": {
    "css": "mask-composite: add;",
    "cssProperties": [
      "mask-composite"
    ]
  },
  "mask-alpha": {
    "css": "mask-mode: alpha;",
    "cssProperties": [
      "mask-mode"
    ]
  },
  "mask-auto": {
    "css": "mask-size: auto;",
    "cssProperties": [
      "mask-size"
    ]
  },
  "mask-bottom": {
    "css": "mask-position: bottom;",
    "cssProperties": [
      "mask-position"
    ]
  },
  "mask-bottom-left": {
    "css": "mask-position: left bottom;",
    "cssProperties": [
      "mask-position"
    ]
  },
  "mask-bottom-right": {
    "css": "mask-position: right bottom;",
    "cssProperties": [
      "mask-position"
    ]
  },
  "mask-center": {
    "css": "mask-position: center;",
    "cssProperties": [
      "mask-position"
    ]
  },
  "fill-none": {
    "css": "fill: none;",
    "cssProperties": [
      "fill"
    ]
  },
  "indent-px": {
    "css": "text-indent: 1px;",
    "cssProperties": [
      "text-indent"
    ]
  },
  "leading-none": {
    "css": "--tw-leading: 1;\n    line-height: 1;",
    "cssProperties": [
      "line-height"
    ],
    "atProperties": [
      {
        "name": "--tw-leading",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "leading-px": {
    "css": "--tw-leading: 1px;\n    line-height: 1px;",
    "cssProperties": [
      "line-height"
    ],
    "atProperties": [
      {
        "name": "--tw-leading",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "hyphens-auto": {
    "css": "-webkit-hyphens: auto;\n    hyphens: auto;",
    "cssProperties": [
      "hyphens"
    ]
  },
  "hyphens-manual": {
    "css": "-webkit-hyphens: manual;\n    hyphens: manual;",
    "cssProperties": [
      "hyphens"
    ]
  },
  "hyphens-none": {
    "css": "-webkit-hyphens: none;\n    hyphens: none;",
    "cssProperties": [
      "hyphens"
    ]
  },
  "lowercase": {
    "css": "text-transform: lowercase;",
    "cssProperties": [
      "text-transform"
    ]
  },
  "italic": {
    "css": "font-style: italic;",
    "cssProperties": [
      "font-style"
    ]
  },
  "font-stretch-50%": {
    "css": "font-stretch: 50%;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-75%": {
    "css": "font-stretch: 75%;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-90%": {
    "css": "font-stretch: 90%;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-95%": {
    "css": "font-stretch: 95%;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-100%": {
    "css": "font-stretch: 100%;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-105%": {
    "css": "font-stretch: 105%;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-110%": {
    "css": "font-stretch: 110%;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-125%": {
    "css": "font-stretch: 125%;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-150%": {
    "css": "font-stretch: 150%;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-200%": {
    "css": "font-stretch: 200%;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-condensed": {
    "css": "font-stretch: condensed;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-expanded": {
    "css": "font-stretch: expanded;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-extra-condensed": {
    "css": "font-stretch: extra-condensed;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-extra-expanded": {
    "css": "font-stretch: extra-expanded;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-normal": {
    "css": "font-stretch: normal;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-semi-condensed": {
    "css": "font-stretch: semi-condensed;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-semi-expanded": {
    "css": "font-stretch: semi-expanded;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-ultra-condensed": {
    "css": "font-stretch: ultra-condensed;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "font-stretch-ultra-expanded": {
    "css": "font-stretch: ultra-expanded;",
    "cssProperties": [
      "font-stretch"
    ]
  },
  "diagonal-fractions": {
    "css": "--tw-numeric-fraction: diagonal-fractions;\n    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);",
    "cssProperties": [
      "font-variant-numeric"
    ],
    "atProperties": [
      {
        "name": "--tw-numeric-fraction",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "lining-nums": {
    "css": "--tw-numeric-figure: lining-nums;\n    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);",
    "cssProperties": [
      "font-variant-numeric"
    ],
    "atProperties": [
      {
        "name": "--tw-numeric-figure",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "line-through": {
    "css": "text-decoration-line: line-through;",
    "cssProperties": [
      "text-decoration-line"
    ]
  },
  "inset-shadow-none": {
    "css": "--tw-inset-shadow: 0 0 #0000;\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-inset-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "inset-ring": {
    "css": "--tw-inset-ring-shadow: inset 0 0 0 1px var(--tw-inset-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-inset-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "inset-ring-0": {
    "css": "--tw-inset-ring-shadow: inset 0 0 0 0px var(--tw-inset-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-inset-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "inset-ring-1": {
    "css": "--tw-inset-ring-shadow: inset 0 0 0 1px var(--tw-inset-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-inset-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "inset-ring-2": {
    "css": "--tw-inset-ring-shadow: inset 0 0 0 2px var(--tw-inset-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-inset-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "inset-ring-4": {
    "css": "--tw-inset-ring-shadow: inset 0 0 0 4px var(--tw-inset-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-inset-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "inset-ring-8": {
    "css": "--tw-inset-ring-shadow: inset 0 0 0 8px var(--tw-inset-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-inset-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "inset-shadow-initial": {
    "css": "--tw-inset-shadow-color: initial;",
    "atProperties": [
      {
        "name": "--tw-inset-shadow-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "drop-shadow-none": {
    "css": "--tw-drop-shadow:  ;\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-drop-shadow",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "grayscale": {
    "css": "--tw-grayscale: grayscale(100%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "grayscale-0": {
    "css": "--tw-grayscale: grayscale(0%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "grayscale-25": {
    "css": "--tw-grayscale: grayscale(25%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "grayscale-50": {
    "css": "--tw-grayscale: grayscale(50%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "grayscale-75": {
    "css": "--tw-grayscale: grayscale(75%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "grayscale-100": {
    "css": "--tw-grayscale: grayscale(100%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-grayscale",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "hue-rotate-0": {
    "css": "--tw-hue-rotate: hue-rotate(0deg);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "hue-rotate-15": {
    "css": "--tw-hue-rotate: hue-rotate(15deg);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "hue-rotate-30": {
    "css": "--tw-hue-rotate: hue-rotate(30deg);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "hue-rotate-60": {
    "css": "--tw-hue-rotate: hue-rotate(60deg);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "hue-rotate-90": {
    "css": "--tw-hue-rotate: hue-rotate(90deg);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "hue-rotate-180": {
    "css": "--tw-hue-rotate: hue-rotate(180deg);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-hue-rotate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "invert": {
    "css": "--tw-invert: invert(100%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "invert-0": {
    "css": "--tw-invert: invert(0%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "invert-25": {
    "css": "--tw-invert: invert(25%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "invert-50": {
    "css": "--tw-invert: invert(50%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "invert-75": {
    "css": "--tw-invert: invert(75%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "invert-100": {
    "css": "--tw-invert: invert(100%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-invert",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "delay-700": {
    "css": "transition-delay: 700ms;",
    "cssProperties": [
      "transition-delay"
    ]
  },
  "delay-1000": {
    "css": "transition-delay: 1000ms;",
    "cssProperties": [
      "transition-delay"
    ]
  },
  "duration-75": {
    "css": "--tw-duration: 75ms;\n    transition-duration: 75ms;",
    "cssProperties": [
      "transition-duration"
    ],
    "atProperties": [
      {
        "name": "--tw-duration",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "duration-100": {
    "css": "--tw-duration: 100ms;\n    transition-duration: 100ms;",
    "cssProperties": [
      "transition-duration"
    ],
    "atProperties": [
      {
        "name": "--tw-duration",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "duration-150": {
    "css": "--tw-duration: 150ms;\n    transition-duration: 150ms;",
    "cssProperties": [
      "transition-duration"
    ],
    "atProperties": [
      {
        "name": "--tw-duration",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "duration-200": {
    "css": "--tw-duration: 200ms;\n    transition-duration: 200ms;",
    "cssProperties": [
      "transition-duration"
    ],
    "atProperties": [
      {
        "name": "--tw-duration",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "duration-300": {
    "css": "--tw-duration: 300ms;\n    transition-duration: 300ms;",
    "cssProperties": [
      "transition-duration"
    ],
    "atProperties": [
      {
        "name": "--tw-duration",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "duration-500": {
    "css": "--tw-duration: 500ms;\n    transition-duration: 500ms;",
    "cssProperties": [
      "transition-duration"
    ],
    "atProperties": [
      {
        "name": "--tw-duration",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "duration-700": {
    "css": "--tw-duration: 700ms;\n    transition-duration: 700ms;",
    "cssProperties": [
      "transition-duration"
    ],
    "atProperties": [
      {
        "name": "--tw-duration",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "duration-1000": {
    "css": "--tw-duration: 1000ms;\n    transition-duration: 1000ms;",
    "cssProperties": [
      "transition-duration"
    ],
    "atProperties": [
      {
        "name": "--tw-duration",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "ease-linear": {
    "css": "--tw-ease: linear;\n    transition-timing-function: linear;",
    "cssProperties": [
      "transition-timing-function"
    ],
    "atProperties": [
      {
        "name": "--tw-ease",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "forced-color-adjust-auto": {
    "css": "forced-color-adjust: auto;",
    "cssProperties": [
      "forced-color-adjust"
    ]
  },
  "forced-color-adjust-none": {
    "css": "forced-color-adjust: none;",
    "cssProperties": [
      "forced-color-adjust"
    ]
  },
  "divide-x-reverse": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-divide-x-reverse: 1;\n    }",
    "atProperties": [
      {
        "name": "--tw-divide-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "duration-initial": {
    "css": "--tw-duration: initial;",
    "atProperties": [
      {
        "name": "--tw-duration",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "ease-initial": {
    "css": "--tw-ease: initial;",
    "atProperties": [
      {
        "name": "--tw-ease",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "me-px": {
    "css": "margin-inline-end: 1px;",
    "cssProperties": [
      "margin-inline-end"
    ]
  },
  "mb-auto": {
    "css": "margin-bottom: auto;",
    "cssProperties": [
      "margin-bottom"
    ]
  },
  "mb-px": {
    "css": "margin-bottom: 1px;",
    "cssProperties": [
      "margin-bottom"
    ]
  },
  "max-h-1/2": {
    "css": "max-height: calc(1/2 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-1/3": {
    "css": "max-height: calc(1/3 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-1/4": {
    "css": "max-height: calc(1/4 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-1/5": {
    "css": "max-height: calc(1/5 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-1/6": {
    "css": "max-height: calc(1/6 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-1/12": {
    "css": "max-height: calc(1/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-2/3": {
    "css": "max-height: calc(2/3 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-2/4": {
    "css": "max-height: calc(2/4 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-2/5": {
    "css": "max-height: calc(2/5 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-2/6": {
    "css": "max-height: calc(2/6 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-2/12": {
    "css": "max-height: calc(2/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-3/4": {
    "css": "max-height: calc(3/4 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-3/5": {
    "css": "max-height: calc(3/5 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-3/6": {
    "css": "max-height: calc(3/6 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-3/12": {
    "css": "max-height: calc(3/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-4/5": {
    "css": "max-height: calc(4/5 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-4/6": {
    "css": "max-height: calc(4/6 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-4/12": {
    "css": "max-height: calc(4/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-5/6": {
    "css": "max-height: calc(5/6 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-5/12": {
    "css": "max-height: calc(5/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-6/12": {
    "css": "max-height: calc(6/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-7/12": {
    "css": "max-height: calc(7/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-8/12": {
    "css": "max-height: calc(8/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-9/12": {
    "css": "max-height: calc(9/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-10/12": {
    "css": "max-height: calc(10/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-11/12": {
    "css": "max-height: calc(11/12 * 100%);",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-dvh": {
    "css": "max-height: 100dvh;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-dvw": {
    "css": "max-height: 100dvw;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-fit": {
    "css": "max-height: fit-content;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-full": {
    "css": "max-height: 100%;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-lh": {
    "css": "max-height: 1lh;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-lvh": {
    "css": "max-height: 100lvh;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-lvw": {
    "css": "max-height: 100lvw;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-max": {
    "css": "max-height: max-content;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-min": {
    "css": "max-height: min-content;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-none": {
    "css": "max-height: none;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-px": {
    "css": "max-height: 1px;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-screen": {
    "css": "max-height: 100vh;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-svh": {
    "css": "max-height: 100svh;",
    "cssProperties": [
      "max-height"
    ]
  },
  "max-h-svw": {
    "css": "max-height: 100svw;",
    "cssProperties": [
      "max-height"
    ]
  },
  "min-h-1/2": {
    "css": "min-height: calc(1/2 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-1/3": {
    "css": "min-height: calc(1/3 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-1/4": {
    "css": "min-height: calc(1/4 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-1/5": {
    "css": "min-height: calc(1/5 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-1/6": {
    "css": "min-height: calc(1/6 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-1/12": {
    "css": "min-height: calc(1/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-2/3": {
    "css": "min-height: calc(2/3 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-2/4": {
    "css": "min-height: calc(2/4 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-2/5": {
    "css": "min-height: calc(2/5 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-2/6": {
    "css": "min-height: calc(2/6 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-2/12": {
    "css": "min-height: calc(2/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-3/4": {
    "css": "min-height: calc(3/4 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-3/5": {
    "css": "min-height: calc(3/5 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-3/6": {
    "css": "min-height: calc(3/6 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "max-w-1/2": {
    "css": "max-width: calc(1/2 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-1/3": {
    "css": "max-width: calc(1/3 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-1/4": {
    "css": "max-width: calc(1/4 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-1/5": {
    "css": "max-width: calc(1/5 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-1/6": {
    "css": "max-width: calc(1/6 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-1/12": {
    "css": "max-width: calc(1/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-2/3": {
    "css": "max-width: calc(2/3 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-2/4": {
    "css": "max-width: calc(2/4 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-2/5": {
    "css": "max-width: calc(2/5 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-2/6": {
    "css": "max-width: calc(2/6 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-2/12": {
    "css": "max-width: calc(2/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-3/4": {
    "css": "max-width: calc(3/4 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-3/5": {
    "css": "max-width: calc(3/5 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-3/6": {
    "css": "max-width: calc(3/6 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-3/12": {
    "css": "max-width: calc(3/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-4/5": {
    "css": "max-width: calc(4/5 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-4/6": {
    "css": "max-width: calc(4/6 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-4/12": {
    "css": "max-width: calc(4/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-5/6": {
    "css": "max-width: calc(5/6 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-5/12": {
    "css": "max-width: calc(5/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-6/12": {
    "css": "max-width: calc(6/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-7/12": {
    "css": "max-width: calc(7/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-8/12": {
    "css": "max-width: calc(8/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-9/12": {
    "css": "max-width: calc(9/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-10/12": {
    "css": "max-width: calc(10/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-11/12": {
    "css": "max-width: calc(11/12 * 100%);",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-dvh": {
    "css": "max-width: 100dvh;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-dvw": {
    "css": "max-width: 100dvw;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-fit": {
    "css": "max-width: fit-content;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-full": {
    "css": "max-width: 100%;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-lvh": {
    "css": "max-width: 100lvh;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-lvw": {
    "css": "max-width: 100lvw;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-max": {
    "css": "max-width: max-content;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-min": {
    "css": "max-width: min-content;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-none": {
    "css": "max-width: none;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-px": {
    "css": "max-width: 1px;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-screen": {
    "css": "max-width: 100vw;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-svh": {
    "css": "max-width: 100svh;",
    "cssProperties": [
      "max-width"
    ]
  },
  "max-w-svw": {
    "css": "max-width: 100svw;",
    "cssProperties": [
      "max-width"
    ]
  },
  "mask-y-from-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 0%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 5%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 10%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 15%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 20%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 25%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 30%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 35%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 40%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 45%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 50%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 55%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 60%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 65%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 70%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 75%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 80%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 85%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 90%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 95%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-from-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 100%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-from-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-t-from-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-from-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-y-to-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 0%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 5%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 10%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 15%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 20%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 25%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 30%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 35%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 40%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 45%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 50%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 55%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 60%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 65%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 70%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 75%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 80%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 85%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 90%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 95%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-y-to-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 100%;\n    --tw-mask-bottom: linear-gradient(to bottom, var(--tw-mask-bottom-from-color) var(--tw-mask-bottom-from-position), var(--tw-mask-bottom-to-color) var(--tw-mask-bottom-to-position));\n    --tw-mask-bottom-to-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-bottom",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-bottom-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-t-to-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-top: linear-gradient(to top, var(--tw-mask-top-from-color) var(--tw-mask-top-from-position), var(--tw-mask-top-to-color) var(--tw-mask-top-to-position));\n    --tw-mask-top-to-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-top-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-from-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 0%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 5%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 10%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 15%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 20%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 25%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 30%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 35%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 40%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 45%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 50%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 55%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 60%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 65%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 70%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 75%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 80%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 85%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 90%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 95%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-from-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 100%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-r-from-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-from-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-x-to-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 0%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 5%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 10%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 15%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 20%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 25%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 30%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 35%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 40%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 45%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 50%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 55%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 60%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 65%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 70%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 75%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 80%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 85%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 90%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 95%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-x-to-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 100%;\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-r-to-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-right: linear-gradient(to right, var(--tw-mask-right-from-color) var(--tw-mask-right-from-position), var(--tw-mask-right-to-color) var(--tw-mask-right-to-position));\n    --tw-mask-right-to-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-right-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-from-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-from-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-from-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-l-to-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-l-to-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top);\n    --tw-mask-left: linear-gradient(to left, var(--tw-mask-left-from-color) var(--tw-mask-left-from-position), var(--tw-mask-left-to-color) var(--tw-mask-left-to-position));\n    --tw-mask-left-to-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-left-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-0": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * 0);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-linear-1": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * 1);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-linear-2": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * 2);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-linear-3": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * 3);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-linear-6": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * 6);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-linear-12": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * 12);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-linear-45": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * 45);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-linear-90": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * 90);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-linear-180": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)));\n    --tw-mask-linear-position: calc(1deg * 180);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-linear-from-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-from-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-from-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-linear-to-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-linear-to-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-linear-stops: var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position);\n    --tw-mask-linear: linear-gradient(var(--tw-mask-linear-stops));\n    --tw-mask-linear-to-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-linear",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-linear-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-from-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-from-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-from-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-radial-to-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-radial-to-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-radial-stops: var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position);\n    --tw-mask-radial: radial-gradient(var(--tw-mask-radial-stops));\n    --tw-mask-radial-to-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-radial",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-radial-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-0": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * 0);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-conic-1": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * 1);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-conic-2": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * 2);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-conic-3": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * 3);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-conic-6": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * 6);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-conic-12": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * 12);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-conic-45": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * 45);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-conic-90": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * 90);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-conic-180": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)));\n    --tw-mask-conic-position: calc(1deg * 180);",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0deg"
      }
    ]
  },
  "mask-conic-from-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-from-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-from-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-from-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0%"
      }
    ]
  },
  "mask-conic-to-0%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 0%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-5%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 5%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-10%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 10%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-15%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 15%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-20%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 20%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-25%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 25%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-30%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 30%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-35%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 35%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-40%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 40%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-45%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 45%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-50%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 50%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-55%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 55%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-60%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 60%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-65%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 65%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-70%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 70%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-75%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 75%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-80%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 80%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-85%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 85%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-90%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 90%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-95%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 95%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-conic-to-100%": {
    "css": "mask-image: var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic);\n    mask-composite: intersect;\n    --tw-mask-conic-stops: from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position);\n    --tw-mask-conic: conic-gradient(var(--tw-mask-conic-stops));\n    --tw-mask-conic-to-position: 100%;",
    "cssProperties": [
      "mask-image",
      "mask-composite"
    ],
    "atProperties": [
      {
        "name": "--tw-mask-conic",
        "syntax": "*",
        "inherits": false,
        "initialValue": "linear-gradient(#fff, #fff)"
      },
      {
        "name": "--tw-mask-conic-to-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "mask-none": {
    "css": "mask-image: none;",
    "cssProperties": [
      "mask-image"
    ]
  },
  "mask-circle": {
    "css": "--tw-mask-radial-shape: circle;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-shape",
        "syntax": "*",
        "inherits": false,
        "initialValue": "ellipse"
      }
    ]
  },
  "mask-ellipse": {
    "css": "--tw-mask-radial-shape: ellipse;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-shape",
        "syntax": "*",
        "inherits": false,
        "initialValue": "ellipse"
      }
    ]
  },
  "mask-radial-closest-corner": {
    "css": "--tw-mask-radial-size: closest-corner;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-size",
        "syntax": "*",
        "inherits": false,
        "initialValue": "farthest-corner"
      }
    ]
  },
  "mask-radial-closest-side": {
    "css": "--tw-mask-radial-size: closest-side;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-size",
        "syntax": "*",
        "inherits": false,
        "initialValue": "farthest-corner"
      }
    ]
  },
  "mask-radial-farthest-corner": {
    "css": "--tw-mask-radial-size: farthest-corner;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-size",
        "syntax": "*",
        "inherits": false,
        "initialValue": "farthest-corner"
      }
    ]
  },
  "mask-radial-farthest-side": {
    "css": "--tw-mask-radial-size: farthest-side;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-size",
        "syntax": "*",
        "inherits": false,
        "initialValue": "farthest-corner"
      }
    ]
  },
  "mask-radial-at-bottom": {
    "css": "--tw-mask-radial-position: bottom;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "center"
      }
    ]
  },
  "mask-radial-at-bottom-left": {
    "css": "--tw-mask-radial-position: bottom left;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "center"
      }
    ]
  },
  "mask-radial-at-bottom-right": {
    "css": "--tw-mask-radial-position: bottom right;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "center"
      }
    ]
  },
  "mask-radial-at-center": {
    "css": "--tw-mask-radial-position: center;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "center"
      }
    ]
  },
  "mask-radial-at-left": {
    "css": "--tw-mask-radial-position: left;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "center"
      }
    ]
  },
  "mask-radial-at-right": {
    "css": "--tw-mask-radial-position: right;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "center"
      }
    ]
  },
  "mask-radial-at-top": {
    "css": "--tw-mask-radial-position: top;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "center"
      }
    ]
  },
  "mask-radial-at-top-left": {
    "css": "--tw-mask-radial-position: top left;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "center"
      }
    ]
  },
  "mask-radial-at-top-right": {
    "css": "--tw-mask-radial-position: top right;",
    "atProperties": [
      {
        "name": "--tw-mask-radial-position",
        "syntax": "*",
        "inherits": false,
        "initialValue": "center"
      }
    ]
  },
  "mask-exclude": {
    "css": "mask-composite: exclude;",
    "cssProperties": [
      "mask-composite"
    ]
  },
  "mask-intersect": {
    "css": "mask-composite: intersect;",
    "cssProperties": [
      "mask-composite"
    ]
  },
  "mask-subtract": {
    "css": "mask-composite: subtract;",
    "cssProperties": [
      "mask-composite"
    ]
  },
  "mask-luminance": {
    "css": "mask-mode: luminance;",
    "cssProperties": [
      "mask-mode"
    ]
  },
  "mask-match": {
    "css": "mask-mode: match-source;",
    "cssProperties": [
      "mask-mode"
    ]
  },
  "mask-type-alpha": {
    "css": "mask-type: alpha;",
    "cssProperties": [
      "mask-type"
    ]
  },
  "mask-type-luminance": {
    "css": "mask-type: luminance;",
    "cssProperties": [
      "mask-type"
    ]
  },
  "mask-contain": {
    "css": "mask-size: contain;",
    "cssProperties": [
      "mask-size"
    ]
  },
  "mask-cover": {
    "css": "mask-size: cover;",
    "cssProperties": [
      "mask-size"
    ]
  },
  "mask-clip-border": {
    "css": "mask-clip: border-box;",
    "cssProperties": [
      "mask-clip"
    ]
  },
  "mask-clip-content": {
    "css": "mask-clip: content-box;",
    "cssProperties": [
      "mask-clip"
    ]
  },
  "mask-clip-fill": {
    "css": "mask-clip: fill-box;",
    "cssProperties": [
      "mask-clip"
    ]
  },
  "mask-clip-padding": {
    "css": "mask-clip: padding-box;",
    "cssProperties": [
      "mask-clip"
    ]
  },
  "mask-clip-stroke": {
    "css": "mask-clip: stroke-box;",
    "cssProperties": [
      "mask-clip"
    ]
  },
  "mask-clip-view": {
    "css": "mask-clip: view-box;",
    "cssProperties": [
      "mask-clip"
    ]
  },
  "mask-no-clip": {
    "css": "mask-clip: no-clip;",
    "cssProperties": [
      "mask-clip"
    ]
  },
  "mask-left": {
    "css": "mask-position: left;",
    "cssProperties": [
      "mask-position"
    ]
  },
  "mask-right": {
    "css": "mask-position: right;",
    "cssProperties": [
      "mask-position"
    ]
  },
  "mask-top": {
    "css": "mask-position: top;",
    "cssProperties": [
      "mask-position"
    ]
  },
  "mask-top-left": {
    "css": "mask-position: left top;",
    "cssProperties": [
      "mask-position"
    ]
  },
  "mask-top-right": {
    "css": "mask-position: right top;",
    "cssProperties": [
      "mask-position"
    ]
  },
  "mask-no-repeat": {
    "css": "mask-repeat: no-repeat;",
    "cssProperties": [
      "mask-repeat"
    ]
  },
  "mask-repeat": {
    "css": "mask-repeat: repeat;",
    "cssProperties": [
      "mask-repeat"
    ]
  },
  "mask-repeat-round": {
    "css": "mask-repeat: round;",
    "cssProperties": [
      "mask-repeat"
    ]
  },
  "mask-repeat-space": {
    "css": "mask-repeat: space;",
    "cssProperties": [
      "mask-repeat"
    ]
  },
  "mask-repeat-x": {
    "css": "mask-repeat: repeat-x;",
    "cssProperties": [
      "mask-repeat"
    ]
  },
  "mask-repeat-y": {
    "css": "mask-repeat: repeat-y;",
    "cssProperties": [
      "mask-repeat"
    ]
  },
  "mask-origin-border": {
    "css": "mask-origin: border-box;",
    "cssProperties": [
      "mask-origin"
    ]
  },
  "mask-origin-content": {
    "css": "mask-origin: content-box;",
    "cssProperties": [
      "mask-origin"
    ]
  },
  "mask-origin-fill": {
    "css": "mask-origin: fill-box;",
    "cssProperties": [
      "mask-origin"
    ]
  },
  "mask-origin-padding": {
    "css": "mask-origin: padding-box;",
    "cssProperties": [
      "mask-origin"
    ]
  },
  "mask-origin-stroke": {
    "css": "mask-origin: stroke-box;",
    "cssProperties": [
      "mask-origin"
    ]
  },
  "mask-origin-view": {
    "css": "mask-origin: view-box;",
    "cssProperties": [
      "mask-origin"
    ]
  },
  "pointer-events-none": {
    "css": "pointer-events: none;",
    "cssProperties": [
      "pointer-events"
    ]
  },
  "not-sr-only": {
    "css": "position: static;\n    width: auto;\n    height: auto;\n    padding: 0;\n    margin: 0;\n    overflow: visible;\n    clip: auto;\n    white-space: normal;",
    "cssProperties": [
      "position",
      "width",
      "height",
      "padding",
      "margin",
      "overflow",
      "clip",
      "white-space"
    ]
  },
  "relative": {
    "css": "position: relative;",
    "cssProperties": [
      "position"
    ]
  },
  "right-1/2": {
    "css": "right: calc(1/2 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-1/3": {
    "css": "right: calc(1/3 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-1/4": {
    "css": "right: calc(1/4 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-1/5": {
    "css": "right: calc(1/5 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-1/6": {
    "css": "right: calc(1/6 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-1/12": {
    "css": "right: calc(1/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-2/3": {
    "css": "right: calc(2/3 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-2/4": {
    "css": "right: calc(2/4 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-2/5": {
    "css": "right: calc(2/5 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-2/6": {
    "css": "right: calc(2/6 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-2/12": {
    "css": "right: calc(2/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-3/4": {
    "css": "right: calc(3/4 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-3/5": {
    "css": "right: calc(3/5 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-3/6": {
    "css": "right: calc(3/6 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-3/12": {
    "css": "right: calc(3/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-4/5": {
    "css": "right: calc(4/5 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-4/6": {
    "css": "right: calc(4/6 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-4/12": {
    "css": "right: calc(4/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-5/6": {
    "css": "right: calc(5/6 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-5/12": {
    "css": "right: calc(5/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-6/12": {
    "css": "right: calc(6/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-7/12": {
    "css": "right: calc(7/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-8/12": {
    "css": "right: calc(8/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-9/12": {
    "css": "right: calc(9/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-10/12": {
    "css": "right: calc(10/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-11/12": {
    "css": "right: calc(11/12 * 100%);",
    "cssProperties": [
      "right"
    ]
  },
  "right-auto": {
    "css": "right: auto;",
    "cssProperties": [
      "right"
    ]
  },
  "right-full": {
    "css": "right: 100%;",
    "cssProperties": [
      "right"
    ]
  },
  "right-px": {
    "css": "right: 1px;",
    "cssProperties": [
      "right"
    ]
  },
  "order-1": {
    "css": "order: 1;",
    "cssProperties": [
      "order"
    ]
  },
  "order-2": {
    "css": "order: 2;",
    "cssProperties": [
      "order"
    ]
  },
  "order-3": {
    "css": "order: 3;",
    "cssProperties": [
      "order"
    ]
  },
  "order-4": {
    "css": "order: 4;",
    "cssProperties": [
      "order"
    ]
  },
  "order-5": {
    "css": "order: 5;",
    "cssProperties": [
      "order"
    ]
  },
  "order-6": {
    "css": "order: 6;",
    "cssProperties": [
      "order"
    ]
  },
  "order-7": {
    "css": "order: 7;",
    "cssProperties": [
      "order"
    ]
  },
  "order-8": {
    "css": "order: 8;",
    "cssProperties": [
      "order"
    ]
  },
  "order-9": {
    "css": "order: 9;",
    "cssProperties": [
      "order"
    ]
  },
  "order-10": {
    "css": "order: 10;",
    "cssProperties": [
      "order"
    ]
  },
  "order-11": {
    "css": "order: 11;",
    "cssProperties": [
      "order"
    ]
  },
  "order-12": {
    "css": "order: 12;",
    "cssProperties": [
      "order"
    ]
  },
  "order-first": {
    "css": "order: -9999;",
    "cssProperties": [
      "order"
    ]
  },
  "order-last": {
    "css": "order: 9999;",
    "cssProperties": [
      "order"
    ]
  },
  "order-none": {
    "css": "order: 0;",
    "cssProperties": [
      "order"
    ]
  },
  "row-auto": {
    "css": "grid-row: auto;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-1": {
    "css": "grid-row: span 1 / span 1;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-2": {
    "css": "grid-row: span 2 / span 2;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-3": {
    "css": "grid-row: span 3 / span 3;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-4": {
    "css": "grid-row: span 4 / span 4;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-5": {
    "css": "grid-row: span 5 / span 5;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-6": {
    "css": "grid-row: span 6 / span 6;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-7": {
    "css": "grid-row: span 7 / span 7;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-8": {
    "css": "grid-row: span 8 / span 8;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-9": {
    "css": "grid-row: span 9 / span 9;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-10": {
    "css": "grid-row: span 10 / span 10;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-11": {
    "css": "grid-row: span 11 / span 11;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-12": {
    "css": "grid-row: span 12 / span 12;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-span-full": {
    "css": "grid-row: 1 / -1;",
    "cssProperties": [
      "grid-row"
    ]
  },
  "row-start-1": {
    "css": "grid-row-start: 1;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-2": {
    "css": "grid-row-start: 2;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-3": {
    "css": "grid-row-start: 3;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-4": {
    "css": "grid-row-start: 4;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-5": {
    "css": "grid-row-start: 5;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-6": {
    "css": "grid-row-start: 6;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-7": {
    "css": "grid-row-start: 7;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-8": {
    "css": "grid-row-start: 8;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-9": {
    "css": "grid-row-start: 9;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-10": {
    "css": "grid-row-start: 10;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-11": {
    "css": "grid-row-start: 11;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-12": {
    "css": "grid-row-start: 12;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-13": {
    "css": "grid-row-start: 13;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-start-auto": {
    "css": "grid-row-start: auto;",
    "cssProperties": [
      "grid-row-start"
    ]
  },
  "row-end-1": {
    "css": "grid-row-end: 1;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-2": {
    "css": "grid-row-end: 2;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-3": {
    "css": "grid-row-end: 3;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-4": {
    "css": "grid-row-end: 4;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-5": {
    "css": "grid-row-end: 5;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-6": {
    "css": "grid-row-end: 6;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-7": {
    "css": "grid-row-end: 7;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-8": {
    "css": "grid-row-end: 8;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-9": {
    "css": "grid-row-end: 9;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-10": {
    "css": "grid-row-end: 10;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-11": {
    "css": "grid-row-end: 11;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-12": {
    "css": "grid-row-end: 12;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-13": {
    "css": "grid-row-end: 13;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "row-end-auto": {
    "css": "grid-row-end: auto;",
    "cssProperties": [
      "grid-row-end"
    ]
  },
  "mx-auto": {
    "css": "margin-inline: auto;",
    "cssProperties": [
      "margin-inline"
    ]
  },
  "mx-px": {
    "css": "margin-inline: 1px;",
    "cssProperties": [
      "margin-inline"
    ]
  },
  "my-auto": {
    "css": "margin-block: auto;",
    "cssProperties": [
      "margin-block"
    ]
  },
  "my-px": {
    "css": "margin-block: 1px;",
    "cssProperties": [
      "margin-block"
    ]
  },
  "ms-auto": {
    "css": "margin-inline-start: auto;",
    "cssProperties": [
      "margin-inline-start"
    ]
  },
  "ms-px": {
    "css": "margin-inline-start: 1px;",
    "cssProperties": [
      "margin-inline-start"
    ]
  },
  "mt-auto": {
    "css": "margin-top: auto;",
    "cssProperties": [
      "margin-top"
    ]
  },
  "mt-px": {
    "css": "margin-top: 1px;",
    "cssProperties": [
      "margin-top"
    ]
  },
  "mr-auto": {
    "css": "margin-right: auto;",
    "cssProperties": [
      "margin-right"
    ]
  },
  "mr-px": {
    "css": "margin-right: 1px;",
    "cssProperties": [
      "margin-right"
    ]
  },
  "ml-auto": {
    "css": "margin-left: auto;",
    "cssProperties": [
      "margin-left"
    ]
  },
  "ml-px": {
    "css": "margin-left: 1px;",
    "cssProperties": [
      "margin-left"
    ]
  },
  "min-h-3/12": {
    "css": "min-height: calc(3/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-4/5": {
    "css": "min-height: calc(4/5 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-4/6": {
    "css": "min-height: calc(4/6 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-4/12": {
    "css": "min-height: calc(4/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-5/6": {
    "css": "min-height: calc(5/6 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-5/12": {
    "css": "min-height: calc(5/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-6/12": {
    "css": "min-height: calc(6/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-7/12": {
    "css": "min-height: calc(7/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-8/12": {
    "css": "min-height: calc(8/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-9/12": {
    "css": "min-height: calc(9/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-10/12": {
    "css": "min-height: calc(10/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-11/12": {
    "css": "min-height: calc(11/12 * 100%);",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-auto": {
    "css": "min-height: auto;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-dvh": {
    "css": "min-height: 100dvh;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-dvw": {
    "css": "min-height: 100dvw;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-fit": {
    "css": "min-height: fit-content;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-full": {
    "css": "min-height: 100%;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-lh": {
    "css": "min-height: 1lh;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-lvh": {
    "css": "min-height: 100lvh;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-lvw": {
    "css": "min-height: 100lvw;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-max": {
    "css": "min-height: max-content;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-min": {
    "css": "min-height: min-content;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-px": {
    "css": "min-height: 1px;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-screen": {
    "css": "min-height: 100vh;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-svh": {
    "css": "min-height: 100svh;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-h-svw": {
    "css": "min-height: 100svw;",
    "cssProperties": [
      "min-height"
    ]
  },
  "min-w-1/2": {
    "css": "min-width: calc(1/2 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-1/3": {
    "css": "min-width: calc(1/3 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-1/4": {
    "css": "min-width: calc(1/4 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-1/5": {
    "css": "min-width: calc(1/5 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-1/6": {
    "css": "min-width: calc(1/6 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-1/12": {
    "css": "min-width: calc(1/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-2/3": {
    "css": "min-width: calc(2/3 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-2/4": {
    "css": "min-width: calc(2/4 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-2/5": {
    "css": "min-width: calc(2/5 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-2/6": {
    "css": "min-width: calc(2/6 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-2/12": {
    "css": "min-width: calc(2/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-3/4": {
    "css": "min-width: calc(3/4 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-3/5": {
    "css": "min-width: calc(3/5 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-3/6": {
    "css": "min-width: calc(3/6 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-3/12": {
    "css": "min-width: calc(3/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-4/5": {
    "css": "min-width: calc(4/5 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-4/6": {
    "css": "min-width: calc(4/6 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-4/12": {
    "css": "min-width: calc(4/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-5/6": {
    "css": "min-width: calc(5/6 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-5/12": {
    "css": "min-width: calc(5/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-6/12": {
    "css": "min-width: calc(6/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-7/12": {
    "css": "min-width: calc(7/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-8/12": {
    "css": "min-width: calc(8/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-9/12": {
    "css": "min-width: calc(9/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-10/12": {
    "css": "min-width: calc(10/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-11/12": {
    "css": "min-width: calc(11/12 * 100%);",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-auto": {
    "css": "min-width: auto;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-dvh": {
    "css": "min-width: 100dvh;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-dvw": {
    "css": "min-width: 100dvw;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-fit": {
    "css": "min-width: fit-content;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-full": {
    "css": "min-width: 100%;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-lvh": {
    "css": "min-width: 100lvh;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-lvw": {
    "css": "min-width: 100lvw;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-max": {
    "css": "min-width: max-content;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-min": {
    "css": "min-width: min-content;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-px": {
    "css": "min-width: 1px;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-screen": {
    "css": "min-width: 100vw;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-svh": {
    "css": "min-width: 100svh;",
    "cssProperties": [
      "min-width"
    ]
  },
  "min-w-svw": {
    "css": "min-width: 100svw;",
    "cssProperties": [
      "min-width"
    ]
  },
  "origin-bottom": {
    "css": "transform-origin: bottom;",
    "cssProperties": [
      "transform-origin"
    ]
  },
  "origin-bottom-left": {
    "css": "transform-origin: bottom left;",
    "cssProperties": [
      "transform-origin"
    ]
  },
  "origin-bottom-right": {
    "css": "transform-origin: bottom right;",
    "cssProperties": [
      "transform-origin"
    ]
  },
  "origin-center": {
    "css": "transform-origin: center;",
    "cssProperties": [
      "transform-origin"
    ]
  },
  "origin-left": {
    "css": "transform-origin: left;",
    "cssProperties": [
      "transform-origin"
    ]
  },
  "origin-right": {
    "css": "transform-origin: right;",
    "cssProperties": [
      "transform-origin"
    ]
  },
  "origin-top": {
    "css": "transform-origin: top;",
    "cssProperties": [
      "transform-origin"
    ]
  },
  "origin-top-left": {
    "css": "transform-origin: top left;",
    "cssProperties": [
      "transform-origin"
    ]
  },
  "origin-top-right": {
    "css": "transform-origin: top right;",
    "cssProperties": [
      "transform-origin"
    ]
  },
  "scale-0": {
    "css": "--tw-scale-x: 0%;\n    --tw-scale-y: 0%;\n    --tw-scale-z: 0%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-50": {
    "css": "--tw-scale-x: 50%;\n    --tw-scale-y: 50%;\n    --tw-scale-z: 50%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-75": {
    "css": "--tw-scale-x: 75%;\n    --tw-scale-y: 75%;\n    --tw-scale-z: 75%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-90": {
    "css": "--tw-scale-x: 90%;\n    --tw-scale-y: 90%;\n    --tw-scale-z: 90%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-95": {
    "css": "--tw-scale-x: 95%;\n    --tw-scale-y: 95%;\n    --tw-scale-z: 95%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-100": {
    "css": "--tw-scale-x: 100%;\n    --tw-scale-y: 100%;\n    --tw-scale-z: 100%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-105": {
    "css": "--tw-scale-x: 105%;\n    --tw-scale-y: 105%;\n    --tw-scale-z: 105%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-110": {
    "css": "--tw-scale-x: 110%;\n    --tw-scale-y: 110%;\n    --tw-scale-z: 110%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-125": {
    "css": "--tw-scale-x: 125%;\n    --tw-scale-y: 125%;\n    --tw-scale-z: 125%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-150": {
    "css": "--tw-scale-x: 150%;\n    --tw-scale-y: 150%;\n    --tw-scale-z: 150%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-200": {
    "css": "--tw-scale-x: 200%;\n    --tw-scale-y: 200%;\n    --tw-scale-z: 200%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      },
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-0": {
    "css": "--tw-scale-x: 0%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-50": {
    "css": "--tw-scale-x: 50%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-75": {
    "css": "--tw-scale-x: 75%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-90": {
    "css": "--tw-scale-x: 90%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-95": {
    "css": "--tw-scale-x: 95%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-100": {
    "css": "--tw-scale-x: 100%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-105": {
    "css": "--tw-scale-x: 105%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-110": {
    "css": "--tw-scale-x: 110%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-125": {
    "css": "--tw-scale-x: 125%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-150": {
    "css": "--tw-scale-x: 150%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-x-200": {
    "css": "--tw-scale-x: 200%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-0": {
    "css": "--tw-scale-y: 0%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-50": {
    "css": "--tw-scale-y: 50%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-75": {
    "css": "--tw-scale-y: 75%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-90": {
    "css": "--tw-scale-y: 90%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-95": {
    "css": "--tw-scale-y: 95%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-100": {
    "css": "--tw-scale-y: 100%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-105": {
    "css": "--tw-scale-y: 105%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-110": {
    "css": "--tw-scale-y: 110%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-125": {
    "css": "--tw-scale-y: 125%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-150": {
    "css": "--tw-scale-y: 150%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-y-200": {
    "css": "--tw-scale-y: 200%;\n    scale: var(--tw-scale-x) var(--tw-scale-y);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-0": {
    "css": "--tw-scale-z: 0%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-50": {
    "css": "--tw-scale-z: 50%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-75": {
    "css": "--tw-scale-z: 75%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-90": {
    "css": "--tw-scale-z: 90%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-95": {
    "css": "--tw-scale-z: 95%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-100": {
    "css": "--tw-scale-z: 100%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-105": {
    "css": "--tw-scale-z: 105%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-110": {
    "css": "--tw-scale-z: 110%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-125": {
    "css": "--tw-scale-z: 125%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-150": {
    "css": "--tw-scale-z: 150%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-z-200": {
    "css": "--tw-scale-z: 200%;\n    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ],
    "atProperties": [
      {
        "name": "--tw-scale-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "1"
      }
    ]
  },
  "scale-3d": {
    "css": "scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);",
    "cssProperties": [
      "scale"
    ]
  },
  "scale-none": {
    "css": "scale: none;",
    "cssProperties": [
      "scale"
    ]
  },
  "rotate-0": {
    "css": "rotate: 0deg;",
    "cssProperties": [
      "rotate"
    ]
  },
  "rotate-1": {
    "css": "rotate: 1deg;",
    "cssProperties": [
      "rotate"
    ]
  },
  "rotate-2": {
    "css": "rotate: 2deg;",
    "cssProperties": [
      "rotate"
    ]
  },
  "rotate-3": {
    "css": "rotate: 3deg;",
    "cssProperties": [
      "rotate"
    ]
  },
  "rotate-6": {
    "css": "rotate: 6deg;",
    "cssProperties": [
      "rotate"
    ]
  },
  "rotate-12": {
    "css": "rotate: 12deg;",
    "cssProperties": [
      "rotate"
    ]
  },
  "rotate-45": {
    "css": "rotate: 45deg;",
    "cssProperties": [
      "rotate"
    ]
  },
  "rotate-90": {
    "css": "rotate: 90deg;",
    "cssProperties": [
      "rotate"
    ]
  },
  "rotate-180": {
    "css": "rotate: 180deg;",
    "cssProperties": [
      "rotate"
    ]
  },
  "rotate-none": {
    "css": "rotate: none;",
    "cssProperties": [
      "rotate"
    ]
  },
  "rotate-x-0": {
    "css": "--tw-rotate-x: rotateX(0deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-x-1": {
    "css": "--tw-rotate-x: rotateX(1deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-x-2": {
    "css": "--tw-rotate-x: rotateX(2deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-x-3": {
    "css": "--tw-rotate-x: rotateX(3deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-x-6": {
    "css": "--tw-rotate-x: rotateX(6deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-x-12": {
    "css": "--tw-rotate-x: rotateX(12deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-x-45": {
    "css": "--tw-rotate-x: rotateX(45deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-x-90": {
    "css": "--tw-rotate-x: rotateX(90deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-x-180": {
    "css": "--tw-rotate-x: rotateX(180deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-y-0": {
    "css": "--tw-rotate-y: rotateY(0deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-y-1": {
    "css": "--tw-rotate-y: rotateY(1deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-y-2": {
    "css": "--tw-rotate-y: rotateY(2deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-y-3": {
    "css": "--tw-rotate-y: rotateY(3deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-y-6": {
    "css": "--tw-rotate-y: rotateY(6deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-y-12": {
    "css": "--tw-rotate-y: rotateY(12deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-y-45": {
    "css": "--tw-rotate-y: rotateY(45deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-y-90": {
    "css": "--tw-rotate-y: rotateY(90deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-y-180": {
    "css": "--tw-rotate-y: rotateY(180deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-z-0": {
    "css": "--tw-rotate-z: rotateZ(0deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-z-1": {
    "css": "--tw-rotate-z: rotateZ(1deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-z-2": {
    "css": "--tw-rotate-z: rotateZ(2deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-z-3": {
    "css": "--tw-rotate-z: rotateZ(3deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-z-6": {
    "css": "--tw-rotate-z: rotateZ(6deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-z-12": {
    "css": "--tw-rotate-z: rotateZ(12deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-z-45": {
    "css": "--tw-rotate-z: rotateZ(45deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-z-90": {
    "css": "--tw-rotate-z: rotateZ(90deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "rotate-z-180": {
    "css": "--tw-rotate-z: rotateZ(180deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-rotate-z",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "resize": {
    "css": "resize: both;",
    "cssProperties": [
      "resize"
    ]
  },
  "resize-none": {
    "css": "resize: none;",
    "cssProperties": [
      "resize"
    ]
  },
  "resize-x": {
    "css": "resize: horizontal;",
    "cssProperties": [
      "resize"
    ]
  },
  "resize-y": {
    "css": "resize: vertical;",
    "cssProperties": [
      "resize"
    ]
  },
  "scroll-m-px": {
    "css": "scroll-margin: 1px;",
    "cssProperties": [
      "scroll-margin"
    ]
  },
  "scroll-mx-px": {
    "css": "scroll-margin-inline: 1px;",
    "cssProperties": [
      "scroll-margin-inline"
    ]
  },
  "scroll-my-px": {
    "css": "scroll-margin-block: 1px;",
    "cssProperties": [
      "scroll-margin-block"
    ]
  },
  "scroll-ms-px": {
    "css": "scroll-margin-inline-start: 1px;",
    "cssProperties": [
      "scroll-margin-inline-start"
    ]
  },
  "scroll-me-px": {
    "css": "scroll-margin-inline-end: 1px;",
    "cssProperties": [
      "scroll-margin-inline-end"
    ]
  },
  "scroll-mt-px": {
    "css": "scroll-margin-top: 1px;",
    "cssProperties": [
      "scroll-margin-top"
    ]
  },
  "scroll-mr-px": {
    "css": "scroll-margin-right: 1px;",
    "cssProperties": [
      "scroll-margin-right"
    ]
  },
  "scroll-mb-px": {
    "css": "scroll-margin-bottom: 1px;",
    "cssProperties": [
      "scroll-margin-bottom"
    ]
  },
  "scroll-ml-px": {
    "css": "scroll-margin-left: 1px;",
    "cssProperties": [
      "scroll-margin-left"
    ]
  },
  "scroll-p-px": {
    "css": "scroll-padding: 1px;",
    "cssProperties": [
      "scroll-padding"
    ]
  },
  "scroll-px-px": {
    "css": "scroll-padding-inline: 1px;",
    "cssProperties": [
      "scroll-padding-inline"
    ]
  },
  "scroll-py-px": {
    "css": "scroll-padding-block: 1px;",
    "cssProperties": [
      "scroll-padding-block"
    ]
  },
  "scroll-ps-px": {
    "css": "scroll-padding-inline-start: 1px;",
    "cssProperties": [
      "scroll-padding-inline-start"
    ]
  },
  "scroll-pe-px": {
    "css": "scroll-padding-inline-end: 1px;",
    "cssProperties": [
      "scroll-padding-inline-end"
    ]
  },
  "scroll-pt-px": {
    "css": "scroll-padding-top: 1px;",
    "cssProperties": [
      "scroll-padding-top"
    ]
  },
  "scroll-pr-px": {
    "css": "scroll-padding-right: 1px;",
    "cssProperties": [
      "scroll-padding-right"
    ]
  },
  "scroll-pb-px": {
    "css": "scroll-padding-bottom: 1px;",
    "cssProperties": [
      "scroll-padding-bottom"
    ]
  },
  "scroll-pl-px": {
    "css": "scroll-padding-left: 1px;",
    "cssProperties": [
      "scroll-padding-left"
    ]
  },
  "place-content-around": {
    "css": "place-content: space-around;",
    "cssProperties": [
      "place-content"
    ]
  },
  "place-content-baseline": {
    "css": "place-content: baseline;",
    "cssProperties": [
      "place-content"
    ]
  },
  "place-content-between": {
    "css": "place-content: space-between;",
    "cssProperties": [
      "place-content"
    ]
  },
  "place-content-center": {
    "css": "place-content: center;",
    "cssProperties": [
      "place-content"
    ]
  },
  "place-content-center-safe": {
    "css": "place-content: safe center;",
    "cssProperties": [
      "place-content"
    ]
  },
  "place-content-end": {
    "css": "place-content: end;",
    "cssProperties": [
      "place-content"
    ]
  },
  "place-content-end-safe": {
    "css": "place-content: safe end;",
    "cssProperties": [
      "place-content"
    ]
  },
  "place-content-evenly": {
    "css": "place-content: space-evenly;",
    "cssProperties": [
      "place-content"
    ]
  },
  "place-content-start": {
    "css": "place-content: start;",
    "cssProperties": [
      "place-content"
    ]
  },
  "place-content-stretch": {
    "css": "place-content: stretch;",
    "cssProperties": [
      "place-content"
    ]
  },
  "place-items-baseline": {
    "css": "place-items: baseline;",
    "cssProperties": [
      "place-items"
    ]
  },
  "place-items-center": {
    "css": "place-items: center;",
    "cssProperties": [
      "place-items"
    ]
  },
  "place-items-center-safe": {
    "css": "place-items: safe center;",
    "cssProperties": [
      "place-items"
    ]
  },
  "place-items-end": {
    "css": "place-items: end;",
    "cssProperties": [
      "place-items"
    ]
  },
  "place-items-end-safe": {
    "css": "place-items: safe end;",
    "cssProperties": [
      "place-items"
    ]
  },
  "place-items-start": {
    "css": "place-items: start;",
    "cssProperties": [
      "place-items"
    ]
  },
  "place-items-stretch": {
    "css": "place-items: stretch;",
    "cssProperties": [
      "place-items"
    ]
  },
  "place-self-auto": {
    "css": "place-self: auto;",
    "cssProperties": [
      "place-self"
    ]
  },
  "place-self-center": {
    "css": "place-self: center;",
    "cssProperties": [
      "place-self"
    ]
  },
  "place-self-center-safe": {
    "css": "place-self: safe center;",
    "cssProperties": [
      "place-self"
    ]
  },
  "place-self-end": {
    "css": "place-self: end;",
    "cssProperties": [
      "place-self"
    ]
  },
  "place-self-end-safe": {
    "css": "place-self: safe end;",
    "cssProperties": [
      "place-self"
    ]
  },
  "place-self-start": {
    "css": "place-self: start;",
    "cssProperties": [
      "place-self"
    ]
  },
  "place-self-stretch": {
    "css": "place-self: stretch;",
    "cssProperties": [
      "place-self"
    ]
  },
  "self-auto": {
    "css": "align-self: auto;",
    "cssProperties": [
      "align-self"
    ]
  },
  "self-baseline": {
    "css": "align-self: baseline;",
    "cssProperties": [
      "align-self"
    ]
  },
  "self-baseline-last": {
    "css": "align-self: last baseline;",
    "cssProperties": [
      "align-self"
    ]
  },
  "self-center": {
    "css": "align-self: center;",
    "cssProperties": [
      "align-self"
    ]
  },
  "self-center-safe": {
    "css": "align-self: safe center;",
    "cssProperties": [
      "align-self"
    ]
  },
  "self-end": {
    "css": "align-self: flex-end;",
    "cssProperties": [
      "align-self"
    ]
  },
  "self-end-safe": {
    "css": "align-self: safe flex-end;",
    "cssProperties": [
      "align-self"
    ]
  },
  "self-start": {
    "css": "align-self: flex-start;",
    "cssProperties": [
      "align-self"
    ]
  },
  "self-stretch": {
    "css": "align-self: stretch;",
    "cssProperties": [
      "align-self"
    ]
  },
  "overflow-auto": {
    "css": "overflow: auto;",
    "cssProperties": [
      "overflow"
    ]
  },
  "overflow-clip": {
    "css": "overflow: clip;",
    "cssProperties": [
      "overflow"
    ]
  },
  "overflow-hidden": {
    "css": "overflow: hidden;",
    "cssProperties": [
      "overflow"
    ]
  },
  "overflow-scroll": {
    "css": "overflow: scroll;",
    "cssProperties": [
      "overflow"
    ]
  },
  "overflow-visible": {
    "css": "overflow: visible;",
    "cssProperties": [
      "overflow"
    ]
  },
  "overflow-x-auto": {
    "css": "overflow-x: auto;",
    "cssProperties": [
      "overflow-x"
    ]
  },
  "overflow-x-clip": {
    "css": "overflow-x: clip;",
    "cssProperties": [
      "overflow-x"
    ]
  },
  "overflow-x-hidden": {
    "css": "overflow-x: hidden;",
    "cssProperties": [
      "overflow-x"
    ]
  },
  "overflow-x-scroll": {
    "css": "overflow-x: scroll;",
    "cssProperties": [
      "overflow-x"
    ]
  },
  "overflow-x-visible": {
    "css": "overflow-x: visible;",
    "cssProperties": [
      "overflow-x"
    ]
  },
  "overflow-y-auto": {
    "css": "overflow-y: auto;",
    "cssProperties": [
      "overflow-y"
    ]
  },
  "overflow-y-clip": {
    "css": "overflow-y: clip;",
    "cssProperties": [
      "overflow-y"
    ]
  },
  "overflow-y-hidden": {
    "css": "overflow-y: hidden;",
    "cssProperties": [
      "overflow-y"
    ]
  },
  "overflow-y-scroll": {
    "css": "overflow-y: scroll;",
    "cssProperties": [
      "overflow-y"
    ]
  },
  "overflow-y-visible": {
    "css": "overflow-y: visible;",
    "cssProperties": [
      "overflow-y"
    ]
  },
  "overscroll-auto": {
    "css": "overscroll-behavior: auto;",
    "cssProperties": [
      "overscroll-behavior"
    ]
  },
  "overscroll-contain": {
    "css": "overscroll-behavior: contain;",
    "cssProperties": [
      "overscroll-behavior"
    ]
  },
  "overscroll-none": {
    "css": "overscroll-behavior: none;",
    "cssProperties": [
      "overscroll-behavior"
    ]
  },
  "overscroll-x-auto": {
    "css": "overscroll-behavior-x: auto;",
    "cssProperties": [
      "overscroll-behavior-x"
    ]
  },
  "overscroll-x-contain": {
    "css": "overscroll-behavior-x: contain;",
    "cssProperties": [
      "overscroll-behavior-x"
    ]
  },
  "overscroll-x-none": {
    "css": "overscroll-behavior-x: none;",
    "cssProperties": [
      "overscroll-behavior-x"
    ]
  },
  "overscroll-y-auto": {
    "css": "overscroll-behavior-y: auto;",
    "cssProperties": [
      "overscroll-behavior-y"
    ]
  },
  "overscroll-y-contain": {
    "css": "overscroll-behavior-y: contain;",
    "cssProperties": [
      "overscroll-behavior-y"
    ]
  },
  "overscroll-y-none": {
    "css": "overscroll-behavior-y: none;",
    "cssProperties": [
      "overscroll-behavior-y"
    ]
  },
  "scroll-auto": {
    "css": "scroll-behavior: auto;",
    "cssProperties": [
      "scroll-behavior"
    ]
  },
  "scroll-smooth": {
    "css": "scroll-behavior: smooth;",
    "cssProperties": [
      "scroll-behavior"
    ]
  },
  "rounded-full": {
    "css": "border-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-radius"
    ]
  },
  "rounded-none": {
    "css": "border-radius: 0;",
    "cssProperties": [
      "border-radius"
    ]
  },
  "rounded-s-full": {
    "css": "border-start-start-radius: calc(infinity * 1px);\n    border-end-start-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-start-start-radius",
      "border-end-start-radius"
    ]
  },
  "rounded-s-none": {
    "css": "border-start-start-radius: 0;\n    border-end-start-radius: 0;",
    "cssProperties": [
      "border-start-start-radius",
      "border-end-start-radius"
    ]
  },
  "rounded-ss-full": {
    "css": "border-start-start-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-start-start-radius"
    ]
  },
  "rounded-ss-none": {
    "css": "border-start-start-radius: 0;",
    "cssProperties": [
      "border-start-start-radius"
    ]
  },
  "rounded-e-full": {
    "css": "border-start-end-radius: calc(infinity * 1px);\n    border-end-end-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-start-end-radius",
      "border-end-end-radius"
    ]
  },
  "rounded-e-none": {
    "css": "border-start-end-radius: 0;\n    border-end-end-radius: 0;",
    "cssProperties": [
      "border-start-end-radius",
      "border-end-end-radius"
    ]
  },
  "rounded-se-full": {
    "css": "border-start-end-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-start-end-radius"
    ]
  },
  "rounded-se-none": {
    "css": "border-start-end-radius: 0;",
    "cssProperties": [
      "border-start-end-radius"
    ]
  },
  "rounded-ee-full": {
    "css": "border-end-end-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-end-end-radius"
    ]
  },
  "rounded-ee-none": {
    "css": "border-end-end-radius: 0;",
    "cssProperties": [
      "border-end-end-radius"
    ]
  },
  "rounded-es-full": {
    "css": "border-end-start-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-end-start-radius"
    ]
  },
  "rounded-es-none": {
    "css": "border-end-start-radius: 0;",
    "cssProperties": [
      "border-end-start-radius"
    ]
  },
  "rounded-t-full": {
    "css": "border-top-left-radius: calc(infinity * 1px);\n    border-top-right-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-top-left-radius",
      "border-top-right-radius"
    ]
  },
  "rounded-t-none": {
    "css": "border-top-left-radius: 0;\n    border-top-right-radius: 0;",
    "cssProperties": [
      "border-top-left-radius",
      "border-top-right-radius"
    ]
  },
  "rounded-l-full": {
    "css": "border-top-left-radius: calc(infinity * 1px);\n    border-bottom-left-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-top-left-radius",
      "border-bottom-left-radius"
    ]
  },
  "rounded-l-none": {
    "css": "border-top-left-radius: 0;\n    border-bottom-left-radius: 0;",
    "cssProperties": [
      "border-top-left-radius",
      "border-bottom-left-radius"
    ]
  },
  "rounded-tl-full": {
    "css": "border-top-left-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-top-left-radius"
    ]
  },
  "rounded-tl-none": {
    "css": "border-top-left-radius: 0;",
    "cssProperties": [
      "border-top-left-radius"
    ]
  },
  "rounded-r-full": {
    "css": "border-top-right-radius: calc(infinity * 1px);\n    border-bottom-right-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-top-right-radius",
      "border-bottom-right-radius"
    ]
  },
  "rounded-r-none": {
    "css": "border-top-right-radius: 0;\n    border-bottom-right-radius: 0;",
    "cssProperties": [
      "border-top-right-radius",
      "border-bottom-right-radius"
    ]
  },
  "rounded-tr-full": {
    "css": "border-top-right-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-top-right-radius"
    ]
  },
  "rounded-tr-none": {
    "css": "border-top-right-radius: 0;",
    "cssProperties": [
      "border-top-right-radius"
    ]
  },
  "rounded-b-full": {
    "css": "border-bottom-right-radius: calc(infinity * 1px);\n    border-bottom-left-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-bottom-right-radius",
      "border-bottom-left-radius"
    ]
  },
  "rounded-b-none": {
    "css": "border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;",
    "cssProperties": [
      "border-bottom-right-radius",
      "border-bottom-left-radius"
    ]
  },
  "rounded-br-full": {
    "css": "border-bottom-right-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-bottom-right-radius"
    ]
  },
  "rounded-br-none": {
    "css": "border-bottom-right-radius: 0;",
    "cssProperties": [
      "border-bottom-right-radius"
    ]
  },
  "rounded-bl-full": {
    "css": "border-bottom-left-radius: calc(infinity * 1px);",
    "cssProperties": [
      "border-bottom-left-radius"
    ]
  },
  "rounded-bl-none": {
    "css": "border-bottom-left-radius: 0;",
    "cssProperties": [
      "border-bottom-left-radius"
    ]
  },
  "object-contain": {
    "css": "object-fit: contain;",
    "cssProperties": [
      "object-fit"
    ]
  },
  "object-cover": {
    "css": "object-fit: cover;",
    "cssProperties": [
      "object-fit"
    ]
  },
  "object-fill": {
    "css": "object-fit: fill;",
    "cssProperties": [
      "object-fit"
    ]
  },
  "object-none": {
    "css": "object-fit: none;",
    "cssProperties": [
      "object-fit"
    ]
  },
  "object-scale-down": {
    "css": "object-fit: scale-down;",
    "cssProperties": [
      "object-fit"
    ]
  },
  "object-bottom": {
    "css": "object-position: bottom;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-bottom-left": {
    "css": "object-position: left bottom;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-bottom-right": {
    "css": "object-position: right bottom;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-center": {
    "css": "object-position: center;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-left": {
    "css": "object-position: left;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-left-bottom": {
    "css": "object-position: left bottom;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-left-top": {
    "css": "object-position: left top;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-right": {
    "css": "object-position: right;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-right-bottom": {
    "css": "object-position: right bottom;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-right-top": {
    "css": "object-position: right top;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-top": {
    "css": "object-position: top;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-top-left": {
    "css": "object-position: left top;",
    "cssProperties": [
      "object-position"
    ]
  },
  "object-top-right": {
    "css": "object-position: right top;",
    "cssProperties": [
      "object-position"
    ]
  },
  "p-px": {
    "css": "padding: 1px;",
    "cssProperties": [
      "padding"
    ]
  },
  "px-px": {
    "css": "padding-inline: 1px;",
    "cssProperties": [
      "padding-inline"
    ]
  },
  "py-px": {
    "css": "padding-block: 1px;",
    "cssProperties": [
      "padding-block"
    ]
  },
  "ps-px": {
    "css": "padding-inline-start: 1px;",
    "cssProperties": [
      "padding-inline-start"
    ]
  },
  "pe-px": {
    "css": "padding-inline-end: 1px;",
    "cssProperties": [
      "padding-inline-end"
    ]
  },
  "pt-px": {
    "css": "padding-top: 1px;",
    "cssProperties": [
      "padding-top"
    ]
  },
  "pr-px": {
    "css": "padding-right: 1px;",
    "cssProperties": [
      "padding-right"
    ]
  },
  "pb-px": {
    "css": "padding-bottom: 1px;",
    "cssProperties": [
      "padding-bottom"
    ]
  },
  "pl-px": {
    "css": "padding-left: 1px;",
    "cssProperties": [
      "padding-left"
    ]
  },
  "overflow-ellipsis": {
    "css": "text-overflow: ellipsis;",
    "cssProperties": [
      "text-overflow"
    ]
  },
  "normal-case": {
    "css": "text-transform: none;",
    "cssProperties": [
      "text-transform"
    ]
  },
  "not-italic": {
    "css": "font-style: normal;",
    "cssProperties": [
      "font-style"
    ]
  },
  "oldstyle-nums": {
    "css": "--tw-numeric-figure: oldstyle-nums;\n    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);",
    "cssProperties": [
      "font-variant-numeric"
    ],
    "atProperties": [
      {
        "name": "--tw-numeric-figure",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "ordinal": {
    "css": "--tw-ordinal: ordinal;\n    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);",
    "cssProperties": [
      "font-variant-numeric"
    ],
    "atProperties": [
      {
        "name": "--tw-ordinal",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "proportional-nums": {
    "css": "--tw-numeric-spacing: proportional-nums;\n    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);",
    "cssProperties": [
      "font-variant-numeric"
    ],
    "atProperties": [
      {
        "name": "--tw-numeric-spacing",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "normal-nums": {
    "css": "font-variant-numeric: normal;",
    "cssProperties": [
      "font-variant-numeric"
    ]
  },
  "no-underline": {
    "css": "text-decoration-line: none;",
    "cssProperties": [
      "text-decoration-line"
    ]
  },
  "overline": {
    "css": "text-decoration-line: overline;",
    "cssProperties": [
      "text-decoration-line"
    ]
  },
  "scheme-dark": {
    "css": "color-scheme: dark;",
    "cssProperties": [
      "color-scheme"
    ]
  },
  "scheme-light": {
    "css": "color-scheme: light;",
    "cssProperties": [
      "color-scheme"
    ]
  },
  "scheme-light-dark": {
    "css": "color-scheme: light dark;",
    "cssProperties": [
      "color-scheme"
    ]
  },
  "scheme-normal": {
    "css": "color-scheme: normal;",
    "cssProperties": [
      "color-scheme"
    ]
  },
  "scheme-only-dark": {
    "css": "color-scheme: only dark;",
    "cssProperties": [
      "color-scheme"
    ]
  },
  "scheme-only-light": {
    "css": "color-scheme: only light;",
    "cssProperties": [
      "color-scheme"
    ]
  },
  "opacity-0": {
    "css": "opacity: 0%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-5": {
    "css": "opacity: 5%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-10": {
    "css": "opacity: 10%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-15": {
    "css": "opacity: 15%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-20": {
    "css": "opacity: 20%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-25": {
    "css": "opacity: 25%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-30": {
    "css": "opacity: 30%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-35": {
    "css": "opacity: 35%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-40": {
    "css": "opacity: 40%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-45": {
    "css": "opacity: 45%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-50": {
    "css": "opacity: 50%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-55": {
    "css": "opacity: 55%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-60": {
    "css": "opacity: 60%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-65": {
    "css": "opacity: 65%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-70": {
    "css": "opacity: 70%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-75": {
    "css": "opacity: 75%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-80": {
    "css": "opacity: 80%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-85": {
    "css": "opacity: 85%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-90": {
    "css": "opacity: 90%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-95": {
    "css": "opacity: 95%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "opacity-100": {
    "css": "opacity: 100%;",
    "cssProperties": [
      "opacity"
    ]
  },
  "mix-blend-color": {
    "css": "mix-blend-mode: color;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-color-burn": {
    "css": "mix-blend-mode: color-burn;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-color-dodge": {
    "css": "mix-blend-mode: color-dodge;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-darken": {
    "css": "mix-blend-mode: darken;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-difference": {
    "css": "mix-blend-mode: difference;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-exclusion": {
    "css": "mix-blend-mode: exclusion;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-hard-light": {
    "css": "mix-blend-mode: hard-light;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-hue": {
    "css": "mix-blend-mode: hue;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-lighten": {
    "css": "mix-blend-mode: lighten;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-luminosity": {
    "css": "mix-blend-mode: luminosity;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-multiply": {
    "css": "mix-blend-mode: multiply;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-normal": {
    "css": "mix-blend-mode: normal;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-overlay": {
    "css": "mix-blend-mode: overlay;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-plus-darker": {
    "css": "mix-blend-mode: plus-darker;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-plus-lighter": {
    "css": "mix-blend-mode: plus-lighter;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-saturation": {
    "css": "mix-blend-mode: saturation;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-screen": {
    "css": "mix-blend-mode: screen;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "mix-blend-soft-light": {
    "css": "mix-blend-mode: soft-light;",
    "cssProperties": [
      "mix-blend-mode"
    ]
  },
  "ring": {
    "css": "--tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "ring-0": {
    "css": "--tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "ring-1": {
    "css": "--tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "ring-2": {
    "css": "--tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "ring-4": {
    "css": "--tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "ring-8": {
    "css": "--tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(8px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-ring-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "ring-offset-0": {
    "css": "--tw-ring-offset-width: 0px;\n    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);",
    "atProperties": [
      {
        "name": "--tw-ring-offset-width",
        "syntax": "<length>",
        "inherits": false,
        "initialValue": "0px"
      },
      {
        "name": "--tw-ring-offset-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "ring-offset-1": {
    "css": "--tw-ring-offset-width: 1px;\n    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);",
    "atProperties": [
      {
        "name": "--tw-ring-offset-width",
        "syntax": "<length>",
        "inherits": false,
        "initialValue": "0px"
      },
      {
        "name": "--tw-ring-offset-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "ring-offset-2": {
    "css": "--tw-ring-offset-width: 2px;\n    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);",
    "atProperties": [
      {
        "name": "--tw-ring-offset-width",
        "syntax": "<length>",
        "inherits": false,
        "initialValue": "0px"
      },
      {
        "name": "--tw-ring-offset-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "ring-offset-4": {
    "css": "--tw-ring-offset-width: 4px;\n    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);",
    "atProperties": [
      {
        "name": "--tw-ring-offset-width",
        "syntax": "<length>",
        "inherits": false,
        "initialValue": "0px"
      },
      {
        "name": "--tw-ring-offset-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "ring-offset-8": {
    "css": "--tw-ring-offset-width: 8px;\n    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);",
    "atProperties": [
      {
        "name": "--tw-ring-offset-width",
        "syntax": "<length>",
        "inherits": false,
        "initialValue": "0px"
      },
      {
        "name": "--tw-ring-offset-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "outline-hidden": {
    "css": "--tw-outline-style: none;\n    outline-style: none;\n    @media (forced-colors: active) {\n      outline: 2px solid transparent;\n      outline-offset: 2px;\n    }",
    "cssProperties": [
      "outline-style",
      "forced-colors",
      "outline-offset"
    ],
    "atProperties": [
      {
        "name": "--tw-outline-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "outline-0": {
    "css": "outline-style: var(--tw-outline-style);\n    outline-width: 0px;",
    "cssProperties": [
      "outline-style",
      "outline-width"
    ]
  },
  "outline-1": {
    "css": "outline-style: var(--tw-outline-style);\n    outline-width: 1px;",
    "cssProperties": [
      "outline-style",
      "outline-width"
    ]
  },
  "outline-2": {
    "css": "outline-style: var(--tw-outline-style);\n    outline-width: 2px;",
    "cssProperties": [
      "outline-style",
      "outline-width"
    ]
  },
  "outline-4": {
    "css": "outline-style: var(--tw-outline-style);\n    outline-width: 4px;",
    "cssProperties": [
      "outline-style",
      "outline-width"
    ]
  },
  "outline-8": {
    "css": "outline-style: var(--tw-outline-style);\n    outline-width: 8px;",
    "cssProperties": [
      "outline-style",
      "outline-width"
    ]
  },
  "outline-offset-0": {
    "css": "outline-offset: 0px;",
    "cssProperties": [
      "outline-offset"
    ]
  },
  "outline-offset-1": {
    "css": "outline-offset: 1px;",
    "cssProperties": [
      "outline-offset"
    ]
  },
  "outline-offset-2": {
    "css": "outline-offset: 2px;",
    "cssProperties": [
      "outline-offset"
    ]
  },
  "outline-offset-4": {
    "css": "outline-offset: 4px;",
    "cssProperties": [
      "outline-offset"
    ]
  },
  "outline-offset-8": {
    "css": "outline-offset: 8px;",
    "cssProperties": [
      "outline-offset"
    ]
  },
  "saturate-0": {
    "css": "--tw-saturate: saturate(0%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-saturate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "saturate-50": {
    "css": "--tw-saturate: saturate(50%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-saturate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "saturate-100": {
    "css": "--tw-saturate: saturate(100%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-saturate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "saturate-150": {
    "css": "--tw-saturate: saturate(150%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-saturate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "saturate-200": {
    "css": "--tw-saturate: saturate(200%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-saturate",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "sepia": {
    "css": "--tw-sepia: sepia(100%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-sepia",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "sepia-0": {
    "css": "--tw-sepia: sepia(0%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-sepia",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "outline-dashed": {
    "css": "--tw-outline-style: dashed;\n    outline-style: dashed;",
    "cssProperties": [
      "outline-style"
    ],
    "atProperties": [
      {
        "name": "--tw-outline-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "outline-dotted": {
    "css": "--tw-outline-style: dotted;\n    outline-style: dotted;",
    "cssProperties": [
      "outline-style"
    ],
    "atProperties": [
      {
        "name": "--tw-outline-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "outline-double": {
    "css": "--tw-outline-style: double;\n    outline-style: double;",
    "cssProperties": [
      "outline-style"
    ],
    "atProperties": [
      {
        "name": "--tw-outline-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "outline-none": {
    "css": "--tw-outline-style: none;\n    outline-style: none;",
    "cssProperties": [
      "outline-style"
    ],
    "atProperties": [
      {
        "name": "--tw-outline-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "outline-solid": {
    "css": "--tw-outline-style: solid;\n    outline-style: solid;",
    "cssProperties": [
      "outline-style"
    ],
    "atProperties": [
      {
        "name": "--tw-outline-style",
        "syntax": "*",
        "inherits": false,
        "initialValue": "solid"
      }
    ]
  },
  "select-all": {
    "css": "-webkit-user-select: all;\n    user-select: all;",
    "cssProperties": [
      "user-select"
    ]
  },
  "select-auto": {
    "css": "-webkit-user-select: auto;\n    user-select: auto;",
    "cssProperties": [
      "user-select"
    ]
  },
  "select-none": {
    "css": "-webkit-user-select: none;\n    user-select: none;",
    "cssProperties": [
      "user-select"
    ]
  },
  "select-text": {
    "css": "-webkit-user-select: text;\n    user-select: text;",
    "cssProperties": [
      "user-select"
    ]
  },
  "perspective-none": {
    "css": "perspective: none;",
    "cssProperties": [
      "perspective"
    ]
  },
  "perspective-origin-bottom": {
    "css": "perspective-origin: bottom;",
    "cssProperties": [
      "perspective-origin"
    ]
  },
  "perspective-origin-bottom-left": {
    "css": "perspective-origin: bottom left;",
    "cssProperties": [
      "perspective-origin"
    ]
  },
  "perspective-origin-bottom-right": {
    "css": "perspective-origin: bottom right;",
    "cssProperties": [
      "perspective-origin"
    ]
  },
  "perspective-origin-center": {
    "css": "perspective-origin: center;",
    "cssProperties": [
      "perspective-origin"
    ]
  },
  "perspective-origin-left": {
    "css": "perspective-origin: left;",
    "cssProperties": [
      "perspective-origin"
    ]
  },
  "perspective-origin-right": {
    "css": "perspective-origin: right;",
    "cssProperties": [
      "perspective-origin"
    ]
  },
  "perspective-origin-top": {
    "css": "perspective-origin: top;",
    "cssProperties": [
      "perspective-origin"
    ]
  },
  "perspective-origin-top-left": {
    "css": "perspective-origin: top left;",
    "cssProperties": [
      "perspective-origin"
    ]
  },
  "perspective-origin-top-right": {
    "css": "perspective-origin: top right;",
    "cssProperties": [
      "perspective-origin"
    ]
  },
  "ring-inset": {
    "css": "--tw-ring-inset: inset;",
    "atProperties": [
      {
        "name": "--tw-ring-inset",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "visible": {
    "css": "visibility: visible;",
    "cssProperties": [
      "visibility"
    ]
  },
  "sr-only": {
    "css": "position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border-width: 0;",
    "cssProperties": [
      "position",
      "width",
      "height",
      "padding",
      "margin",
      "overflow",
      "clip",
      "white-space",
      "border-width"
    ]
  },
  "static": {
    "css": "position: static;",
    "cssProperties": [
      "position"
    ]
  },
  "sticky": {
    "css": "position: sticky;",
    "cssProperties": [
      "position"
    ]
  },
  "start-1/2": {
    "css": "inset-inline-start: calc(1/2 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-1/3": {
    "css": "inset-inline-start: calc(1/3 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-1/4": {
    "css": "inset-inline-start: calc(1/4 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-1/5": {
    "css": "inset-inline-start: calc(1/5 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-1/6": {
    "css": "inset-inline-start: calc(1/6 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-1/12": {
    "css": "inset-inline-start: calc(1/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-2/3": {
    "css": "inset-inline-start: calc(2/3 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-2/4": {
    "css": "inset-inline-start: calc(2/4 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-2/5": {
    "css": "inset-inline-start: calc(2/5 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-2/6": {
    "css": "inset-inline-start: calc(2/6 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-2/12": {
    "css": "inset-inline-start: calc(2/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-3/4": {
    "css": "inset-inline-start: calc(3/4 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-3/5": {
    "css": "inset-inline-start: calc(3/5 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-3/6": {
    "css": "inset-inline-start: calc(3/6 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-3/12": {
    "css": "inset-inline-start: calc(3/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-4/5": {
    "css": "inset-inline-start: calc(4/5 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-4/6": {
    "css": "inset-inline-start: calc(4/6 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-4/12": {
    "css": "inset-inline-start: calc(4/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-5/6": {
    "css": "inset-inline-start: calc(5/6 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-5/12": {
    "css": "inset-inline-start: calc(5/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-6/12": {
    "css": "inset-inline-start: calc(6/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-7/12": {
    "css": "inset-inline-start: calc(7/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-8/12": {
    "css": "inset-inline-start: calc(8/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-9/12": {
    "css": "inset-inline-start: calc(9/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-10/12": {
    "css": "inset-inline-start: calc(10/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-11/12": {
    "css": "inset-inline-start: calc(11/12 * 100%);",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-auto": {
    "css": "inset-inline-start: auto;",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-full": {
    "css": "inset-inline-start: 100%;",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "start-px": {
    "css": "inset-inline-start: 1px;",
    "cssProperties": [
      "inset-inline-start"
    ]
  },
  "top-1/2": {
    "css": "top: calc(1/2 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-1/3": {
    "css": "top: calc(1/3 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-1/4": {
    "css": "top: calc(1/4 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-1/5": {
    "css": "top: calc(1/5 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-1/6": {
    "css": "top: calc(1/6 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-1/12": {
    "css": "top: calc(1/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-2/3": {
    "css": "top: calc(2/3 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-2/4": {
    "css": "top: calc(2/4 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-2/5": {
    "css": "top: calc(2/5 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-2/6": {
    "css": "top: calc(2/6 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-2/12": {
    "css": "top: calc(2/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-3/4": {
    "css": "top: calc(3/4 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-3/5": {
    "css": "top: calc(3/5 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-3/6": {
    "css": "top: calc(3/6 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-3/12": {
    "css": "top: calc(3/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-4/5": {
    "css": "top: calc(4/5 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-4/6": {
    "css": "top: calc(4/6 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-4/12": {
    "css": "top: calc(4/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-5/6": {
    "css": "top: calc(5/6 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-5/12": {
    "css": "top: calc(5/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-6/12": {
    "css": "top: calc(6/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-7/12": {
    "css": "top: calc(7/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-8/12": {
    "css": "top: calc(8/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-9/12": {
    "css": "top: calc(9/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-10/12": {
    "css": "top: calc(10/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-11/12": {
    "css": "top: calc(11/12 * 100%);",
    "cssProperties": [
      "top"
    ]
  },
  "top-auto": {
    "css": "top: auto;",
    "cssProperties": [
      "top"
    ]
  },
  "top-full": {
    "css": "top: 100%;",
    "cssProperties": [
      "top"
    ]
  },
  "top-px": {
    "css": "top: 1px;",
    "cssProperties": [
      "top"
    ]
  },
  "z-0": {
    "css": "z-index: 0;",
    "cssProperties": [
      "z-index"
    ]
  },
  "z-10": {
    "css": "z-index: 10;",
    "cssProperties": [
      "z-index"
    ]
  },
  "z-20": {
    "css": "z-index: 20;",
    "cssProperties": [
      "z-index"
    ]
  },
  "z-30": {
    "css": "z-index: 30;",
    "cssProperties": [
      "z-index"
    ]
  },
  "z-40": {
    "css": "z-index: 40;",
    "cssProperties": [
      "z-index"
    ]
  },
  "z-50": {
    "css": "z-index: 50;",
    "cssProperties": [
      "z-index"
    ]
  },
  "z-auto": {
    "css": "z-index: auto;",
    "cssProperties": [
      "z-index"
    ]
  },
  "table": {
    "css": "display: table;",
    "cssProperties": [
      "display"
    ]
  },
  "table-caption": {
    "css": "display: table-caption;",
    "cssProperties": [
      "display"
    ]
  },
  "table-cell": {
    "css": "display: table-cell;",
    "cssProperties": [
      "display"
    ]
  },
  "table-column": {
    "css": "display: table-column;",
    "cssProperties": [
      "display"
    ]
  },
  "table-column-group": {
    "css": "display: table-column-group;",
    "cssProperties": [
      "display"
    ]
  },
  "table-footer-group": {
    "css": "display: table-footer-group;",
    "cssProperties": [
      "display"
    ]
  },
  "table-header-group": {
    "css": "display: table-header-group;",
    "cssProperties": [
      "display"
    ]
  },
  "table-row": {
    "css": "display: table-row;",
    "cssProperties": [
      "display"
    ]
  },
  "table-row-group": {
    "css": "display: table-row-group;",
    "cssProperties": [
      "display"
    ]
  },
  "size-1/2": {
    "css": "width: calc(1/2 * 100%);\n    height: calc(1/2 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-1/3": {
    "css": "width: calc(1/3 * 100%);\n    height: calc(1/3 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-1/4": {
    "css": "width: calc(1/4 * 100%);\n    height: calc(1/4 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-1/5": {
    "css": "width: calc(1/5 * 100%);\n    height: calc(1/5 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-1/6": {
    "css": "width: calc(1/6 * 100%);\n    height: calc(1/6 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-1/12": {
    "css": "width: calc(1/12 * 100%);\n    height: calc(1/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-2/3": {
    "css": "width: calc(2/3 * 100%);\n    height: calc(2/3 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-2/4": {
    "css": "width: calc(2/4 * 100%);\n    height: calc(2/4 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-2/5": {
    "css": "width: calc(2/5 * 100%);\n    height: calc(2/5 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-2/6": {
    "css": "width: calc(2/6 * 100%);\n    height: calc(2/6 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-2/12": {
    "css": "width: calc(2/12 * 100%);\n    height: calc(2/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-3/4": {
    "css": "width: calc(3/4 * 100%);\n    height: calc(3/4 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-3/5": {
    "css": "width: calc(3/5 * 100%);\n    height: calc(3/5 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-3/6": {
    "css": "width: calc(3/6 * 100%);\n    height: calc(3/6 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-3/12": {
    "css": "width: calc(3/12 * 100%);\n    height: calc(3/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-4/5": {
    "css": "width: calc(4/5 * 100%);\n    height: calc(4/5 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-4/6": {
    "css": "width: calc(4/6 * 100%);\n    height: calc(4/6 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-4/12": {
    "css": "width: calc(4/12 * 100%);\n    height: calc(4/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-5/6": {
    "css": "width: calc(5/6 * 100%);\n    height: calc(5/6 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-5/12": {
    "css": "width: calc(5/12 * 100%);\n    height: calc(5/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-6/12": {
    "css": "width: calc(6/12 * 100%);\n    height: calc(6/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-7/12": {
    "css": "width: calc(7/12 * 100%);\n    height: calc(7/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-8/12": {
    "css": "width: calc(8/12 * 100%);\n    height: calc(8/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-9/12": {
    "css": "width: calc(9/12 * 100%);\n    height: calc(9/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-10/12": {
    "css": "width: calc(10/12 * 100%);\n    height: calc(10/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-11/12": {
    "css": "width: calc(11/12 * 100%);\n    height: calc(11/12 * 100%);",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-auto": {
    "css": "width: auto;\n    height: auto;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-dvh": {
    "css": "width: 100dvh;\n    height: 100dvh;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-dvw": {
    "css": "width: 100dvw;\n    height: 100dvw;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-fit": {
    "css": "width: fit-content;\n    height: fit-content;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-full": {
    "css": "width: 100%;\n    height: 100%;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-lvh": {
    "css": "width: 100lvh;\n    height: 100lvh;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-lvw": {
    "css": "width: 100lvw;\n    height: 100lvw;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-max": {
    "css": "width: max-content;\n    height: max-content;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-min": {
    "css": "width: min-content;\n    height: min-content;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-px": {
    "css": "width: 1px;\n    height: 1px;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-svh": {
    "css": "width: 100svh;\n    height: 100svh;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "size-svw": {
    "css": "width: 100svw;\n    height: 100svw;",
    "cssProperties": [
      "width",
      "height"
    ]
  },
  "w-1/2": {
    "css": "width: calc(1/2 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-1/3": {
    "css": "width: calc(1/3 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-1/4": {
    "css": "width: calc(1/4 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-1/5": {
    "css": "width: calc(1/5 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-1/6": {
    "css": "width: calc(1/6 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-1/12": {
    "css": "width: calc(1/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-2/3": {
    "css": "width: calc(2/3 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-2/4": {
    "css": "width: calc(2/4 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-2/5": {
    "css": "width: calc(2/5 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-2/6": {
    "css": "width: calc(2/6 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-2/12": {
    "css": "width: calc(2/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-3/4": {
    "css": "width: calc(3/4 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-3/5": {
    "css": "width: calc(3/5 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-3/6": {
    "css": "width: calc(3/6 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-3/12": {
    "css": "width: calc(3/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-4/5": {
    "css": "width: calc(4/5 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-4/6": {
    "css": "width: calc(4/6 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-4/12": {
    "css": "width: calc(4/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-5/6": {
    "css": "width: calc(5/6 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-5/12": {
    "css": "width: calc(5/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-6/12": {
    "css": "width: calc(6/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-7/12": {
    "css": "width: calc(7/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-8/12": {
    "css": "width: calc(8/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-9/12": {
    "css": "width: calc(9/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-10/12": {
    "css": "width: calc(10/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-11/12": {
    "css": "width: calc(11/12 * 100%);",
    "cssProperties": [
      "width"
    ]
  },
  "w-auto": {
    "css": "width: auto;",
    "cssProperties": [
      "width"
    ]
  },
  "w-dvh": {
    "css": "width: 100dvh;",
    "cssProperties": [
      "width"
    ]
  },
  "w-dvw": {
    "css": "width: 100dvw;",
    "cssProperties": [
      "width"
    ]
  },
  "w-fit": {
    "css": "width: fit-content;",
    "cssProperties": [
      "width"
    ]
  },
  "w-full": {
    "css": "width: 100%;",
    "cssProperties": [
      "width"
    ]
  },
  "w-lvh": {
    "css": "width: 100lvh;",
    "cssProperties": [
      "width"
    ]
  },
  "w-lvw": {
    "css": "width: 100lvw;",
    "cssProperties": [
      "width"
    ]
  },
  "w-max": {
    "css": "width: max-content;",
    "cssProperties": [
      "width"
    ]
  },
  "w-min": {
    "css": "width: min-content;",
    "cssProperties": [
      "width"
    ]
  },
  "w-px": {
    "css": "width: 1px;",
    "cssProperties": [
      "width"
    ]
  },
  "w-screen": {
    "css": "width: 100vw;",
    "cssProperties": [
      "width"
    ]
  },
  "w-svh": {
    "css": "width: 100svh;",
    "cssProperties": [
      "width"
    ]
  },
  "w-svw": {
    "css": "width: 100svw;",
    "cssProperties": [
      "width"
    ]
  },
  "shrink": {
    "css": "flex-shrink: 1;",
    "cssProperties": [
      "flex-shrink"
    ]
  },
  "shrink-0": {
    "css": "flex-shrink: 0;",
    "cssProperties": [
      "flex-shrink"
    ]
  },
  "table-auto": {
    "css": "table-layout: auto;",
    "cssProperties": [
      "table-layout"
    ]
  },
  "table-fixed": {
    "css": "table-layout: fixed;",
    "cssProperties": [
      "table-layout"
    ]
  },
  "translate-1/2": {
    "css": "--tw-translate-x: calc(1/2 * 100%);\n    --tw-translate-y: calc(1/2 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-1/3": {
    "css": "--tw-translate-x: calc(1/3 * 100%);\n    --tw-translate-y: calc(1/3 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-1/4": {
    "css": "--tw-translate-x: calc(1/4 * 100%);\n    --tw-translate-y: calc(1/4 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-1/5": {
    "css": "--tw-translate-x: calc(1/5 * 100%);\n    --tw-translate-y: calc(1/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-1/6": {
    "css": "--tw-translate-x: calc(1/6 * 100%);\n    --tw-translate-y: calc(1/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-1/12": {
    "css": "--tw-translate-x: calc(1/12 * 100%);\n    --tw-translate-y: calc(1/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-2/3": {
    "css": "--tw-translate-x: calc(2/3 * 100%);\n    --tw-translate-y: calc(2/3 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-2/4": {
    "css": "--tw-translate-x: calc(2/4 * 100%);\n    --tw-translate-y: calc(2/4 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-2/5": {
    "css": "--tw-translate-x: calc(2/5 * 100%);\n    --tw-translate-y: calc(2/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-2/6": {
    "css": "--tw-translate-x: calc(2/6 * 100%);\n    --tw-translate-y: calc(2/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-2/12": {
    "css": "--tw-translate-x: calc(2/12 * 100%);\n    --tw-translate-y: calc(2/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-3/4": {
    "css": "--tw-translate-x: calc(3/4 * 100%);\n    --tw-translate-y: calc(3/4 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-3/5": {
    "css": "--tw-translate-x: calc(3/5 * 100%);\n    --tw-translate-y: calc(3/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-3/6": {
    "css": "--tw-translate-x: calc(3/6 * 100%);\n    --tw-translate-y: calc(3/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-3/12": {
    "css": "--tw-translate-x: calc(3/12 * 100%);\n    --tw-translate-y: calc(3/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-4/5": {
    "css": "--tw-translate-x: calc(4/5 * 100%);\n    --tw-translate-y: calc(4/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-4/6": {
    "css": "--tw-translate-x: calc(4/6 * 100%);\n    --tw-translate-y: calc(4/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-4/12": {
    "css": "--tw-translate-x: calc(4/12 * 100%);\n    --tw-translate-y: calc(4/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-5/6": {
    "css": "--tw-translate-x: calc(5/6 * 100%);\n    --tw-translate-y: calc(5/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-5/12": {
    "css": "--tw-translate-x: calc(5/12 * 100%);\n    --tw-translate-y: calc(5/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-6/12": {
    "css": "--tw-translate-x: calc(6/12 * 100%);\n    --tw-translate-y: calc(6/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-7/12": {
    "css": "--tw-translate-x: calc(7/12 * 100%);\n    --tw-translate-y: calc(7/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-8/12": {
    "css": "--tw-translate-x: calc(8/12 * 100%);\n    --tw-translate-y: calc(8/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-9/12": {
    "css": "--tw-translate-x: calc(9/12 * 100%);\n    --tw-translate-y: calc(9/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-10/12": {
    "css": "--tw-translate-x: calc(10/12 * 100%);\n    --tw-translate-y: calc(10/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-11/12": {
    "css": "--tw-translate-x: calc(11/12 * 100%);\n    --tw-translate-y: calc(11/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-full": {
    "css": "--tw-translate-x: 100%;\n    --tw-translate-y: 100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-px": {
    "css": "--tw-translate-x: 1px;\n    --tw-translate-y: 1px;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      },
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-1/2": {
    "css": "--tw-translate-x: calc(1/2 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-1/3": {
    "css": "--tw-translate-x: calc(1/3 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-1/4": {
    "css": "--tw-translate-x: calc(1/4 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-1/5": {
    "css": "--tw-translate-x: calc(1/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-1/6": {
    "css": "--tw-translate-x: calc(1/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-1/12": {
    "css": "--tw-translate-x: calc(1/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-2/3": {
    "css": "--tw-translate-x: calc(2/3 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-2/4": {
    "css": "--tw-translate-x: calc(2/4 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-2/5": {
    "css": "--tw-translate-x: calc(2/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-2/6": {
    "css": "--tw-translate-x: calc(2/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-2/12": {
    "css": "--tw-translate-x: calc(2/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-3/4": {
    "css": "--tw-translate-x: calc(3/4 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-3/5": {
    "css": "--tw-translate-x: calc(3/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-3/6": {
    "css": "--tw-translate-x: calc(3/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-3/12": {
    "css": "--tw-translate-x: calc(3/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-4/5": {
    "css": "--tw-translate-x: calc(4/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-4/6": {
    "css": "--tw-translate-x: calc(4/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-4/12": {
    "css": "--tw-translate-x: calc(4/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-5/6": {
    "css": "--tw-translate-x: calc(5/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-5/12": {
    "css": "--tw-translate-x: calc(5/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-6/12": {
    "css": "--tw-translate-x: calc(6/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-7/12": {
    "css": "--tw-translate-x: calc(7/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-8/12": {
    "css": "--tw-translate-x: calc(8/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-9/12": {
    "css": "--tw-translate-x: calc(9/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-10/12": {
    "css": "--tw-translate-x: calc(10/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-11/12": {
    "css": "--tw-translate-x: calc(11/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-full": {
    "css": "--tw-translate-x: 100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-x-px": {
    "css": "--tw-translate-x: 1px;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-x",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-1/2": {
    "css": "--tw-translate-y: calc(1/2 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-1/3": {
    "css": "--tw-translate-y: calc(1/3 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-1/4": {
    "css": "--tw-translate-y: calc(1/4 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-1/5": {
    "css": "--tw-translate-y: calc(1/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-1/6": {
    "css": "--tw-translate-y: calc(1/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-1/12": {
    "css": "--tw-translate-y: calc(1/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-2/3": {
    "css": "--tw-translate-y: calc(2/3 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-2/4": {
    "css": "--tw-translate-y: calc(2/4 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-2/5": {
    "css": "--tw-translate-y: calc(2/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-2/6": {
    "css": "--tw-translate-y: calc(2/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-2/12": {
    "css": "--tw-translate-y: calc(2/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-3/4": {
    "css": "--tw-translate-y: calc(3/4 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-3/5": {
    "css": "--tw-translate-y: calc(3/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-3/6": {
    "css": "--tw-translate-y: calc(3/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-3/12": {
    "css": "--tw-translate-y: calc(3/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-4/5": {
    "css": "--tw-translate-y: calc(4/5 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-4/6": {
    "css": "--tw-translate-y: calc(4/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-4/12": {
    "css": "--tw-translate-y: calc(4/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-5/6": {
    "css": "--tw-translate-y: calc(5/6 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-5/12": {
    "css": "--tw-translate-y: calc(5/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-6/12": {
    "css": "--tw-translate-y: calc(6/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-7/12": {
    "css": "--tw-translate-y: calc(7/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-8/12": {
    "css": "--tw-translate-y: calc(8/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-9/12": {
    "css": "--tw-translate-y: calc(9/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-10/12": {
    "css": "--tw-translate-y: calc(10/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-11/12": {
    "css": "--tw-translate-y: calc(11/12 * 100%);\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-full": {
    "css": "--tw-translate-y: 100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-y-px": {
    "css": "--tw-translate-y: 1px;\n    translate: var(--tw-translate-x) var(--tw-translate-y);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-y",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-z-px": {
    "css": "--tw-translate-z: 1px;\n    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);",
    "cssProperties": [
      "translate"
    ],
    "atProperties": [
      {
        "name": "--tw-translate-z",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "translate-3d": {
    "css": "translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);",
    "cssProperties": [
      "translate"
    ]
  },
  "translate-none": {
    "css": "translate: none;",
    "cssProperties": [
      "translate"
    ]
  },
  "skew-0": {
    "css": "--tw-skew-x: skewX(0deg);\n    --tw-skew-y: skewY(0deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-1": {
    "css": "--tw-skew-x: skewX(1deg);\n    --tw-skew-y: skewY(1deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-2": {
    "css": "--tw-skew-x: skewX(2deg);\n    --tw-skew-y: skewY(2deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-3": {
    "css": "--tw-skew-x: skewX(3deg);\n    --tw-skew-y: skewY(3deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-6": {
    "css": "--tw-skew-x: skewX(6deg);\n    --tw-skew-y: skewY(6deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-12": {
    "css": "--tw-skew-x: skewX(12deg);\n    --tw-skew-y: skewY(12deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-x-0": {
    "css": "--tw-skew-x: skewX(0deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-x-1": {
    "css": "--tw-skew-x: skewX(1deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-x-2": {
    "css": "--tw-skew-x: skewX(2deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-x-3": {
    "css": "--tw-skew-x: skewX(3deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-x-6": {
    "css": "--tw-skew-x: skewX(6deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-x-12": {
    "css": "--tw-skew-x: skewX(12deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-y-0": {
    "css": "--tw-skew-y: skewY(0deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-y-1": {
    "css": "--tw-skew-y: skewY(1deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-y-2": {
    "css": "--tw-skew-y: skewY(2deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-y-3": {
    "css": "--tw-skew-y: skewY(3deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-y-6": {
    "css": "--tw-skew-y: skewY(6deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "skew-y-12": {
    "css": "--tw-skew-y: skewY(12deg);\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ],
    "atProperties": [
      {
        "name": "--tw-skew-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "transform": {
    "css": "transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ]
  },
  "transform-cpu": {
    "css": "transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ]
  },
  "transform-gpu": {
    "css": "transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);",
    "cssProperties": [
      "transform"
    ]
  },
  "transform-none": {
    "css": "transform: none;",
    "cssProperties": [
      "transform"
    ]
  },
  "touch-pan-left": {
    "css": "--tw-pan-x: pan-left;\n    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);",
    "cssProperties": [
      "touch-action"
    ],
    "atProperties": [
      {
        "name": "--tw-pan-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "touch-pan-right": {
    "css": "--tw-pan-x: pan-right;\n    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);",
    "cssProperties": [
      "touch-action"
    ],
    "atProperties": [
      {
        "name": "--tw-pan-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "touch-pan-x": {
    "css": "--tw-pan-x: pan-x;\n    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);",
    "cssProperties": [
      "touch-action"
    ],
    "atProperties": [
      {
        "name": "--tw-pan-x",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "touch-pan-down": {
    "css": "--tw-pan-y: pan-down;\n    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);",
    "cssProperties": [
      "touch-action"
    ],
    "atProperties": [
      {
        "name": "--tw-pan-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "touch-pan-up": {
    "css": "--tw-pan-y: pan-up;\n    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);",
    "cssProperties": [
      "touch-action"
    ],
    "atProperties": [
      {
        "name": "--tw-pan-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "touch-pan-y": {
    "css": "--tw-pan-y: pan-y;\n    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);",
    "cssProperties": [
      "touch-action"
    ],
    "atProperties": [
      {
        "name": "--tw-pan-y",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "touch-pinch-zoom": {
    "css": "--tw-pinch-zoom: pinch-zoom;\n    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);",
    "cssProperties": [
      "touch-action"
    ],
    "atProperties": [
      {
        "name": "--tw-pinch-zoom",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "touch-auto": {
    "css": "touch-action: auto;",
    "cssProperties": [
      "touch-action"
    ]
  },
  "touch-manipulation": {
    "css": "touch-action: manipulation;",
    "cssProperties": [
      "touch-action"
    ]
  },
  "touch-none": {
    "css": "touch-action: none;",
    "cssProperties": [
      "touch-action"
    ]
  },
  "snap-both": {
    "css": "scroll-snap-type: both var(--tw-scroll-snap-strictness);",
    "cssProperties": [
      "scroll-snap-type"
    ]
  },
  "snap-none": {
    "css": "scroll-snap-type: none;",
    "cssProperties": [
      "scroll-snap-type"
    ]
  },
  "snap-x": {
    "css": "scroll-snap-type: x var(--tw-scroll-snap-strictness);",
    "cssProperties": [
      "scroll-snap-type"
    ]
  },
  "snap-y": {
    "css": "scroll-snap-type: y var(--tw-scroll-snap-strictness);",
    "cssProperties": [
      "scroll-snap-type"
    ]
  },
  "snap-mandatory": {
    "css": "--tw-scroll-snap-strictness: mandatory;",
    "atProperties": [
      {
        "name": "--tw-scroll-snap-strictness",
        "syntax": "*",
        "inherits": false,
        "initialValue": "proximity"
      }
    ]
  },
  "snap-proximity": {
    "css": "--tw-scroll-snap-strictness: proximity;",
    "atProperties": [
      {
        "name": "--tw-scroll-snap-strictness",
        "syntax": "*",
        "inherits": false,
        "initialValue": "proximity"
      }
    ]
  },
  "snap-align-none": {
    "css": "scroll-snap-align: none;",
    "cssProperties": [
      "scroll-snap-align"
    ]
  },
  "snap-center": {
    "css": "scroll-snap-align: center;",
    "cssProperties": [
      "scroll-snap-align"
    ]
  },
  "snap-end": {
    "css": "scroll-snap-align: end;",
    "cssProperties": [
      "scroll-snap-align"
    ]
  },
  "snap-start": {
    "css": "scroll-snap-align: start;",
    "cssProperties": [
      "scroll-snap-align"
    ]
  },
  "snap-always": {
    "css": "scroll-snap-stop: always;",
    "cssProperties": [
      "scroll-snap-stop"
    ]
  },
  "snap-normal": {
    "css": "scroll-snap-stop: normal;",
    "cssProperties": [
      "scroll-snap-stop"
    ]
  },
  "space-y-px": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(1px * var(--tw-space-y-reverse));\n      margin-block-end: calc(1px * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-y-reverse": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 1;\n    }",
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-x-px": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(1px * var(--tw-space-x-reverse));\n      margin-inline-end: calc(1px * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-x-reverse": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 1;\n    }",
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "divide-black": {
    "css": ":where(& > :not(:last-child)) {\n      border-color: var(--color-black);\n    }",
    "cssProperties": [
      "border-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "divide-current": {
    "css": ":where(& > :not(:last-child)) {\n      border-color: currentcolor;\n    }",
    "cssProperties": [
      "border-color"
    ]
  },
  "divide-inherit": {
    "css": ":where(& > :not(:last-child)) {\n      border-color: inherit;\n    }",
    "cssProperties": [
      "border-color"
    ]
  },
  "divide-red-500": {
    "css": ":where(& > :not(:last-child)) {\n      border-color: var(--color-red-500);\n    }",
    "cssProperties": [
      "border-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "divide-transparent": {
    "css": ":where(& > :not(:last-child)) {\n      border-color: transparent;\n    }",
    "cssProperties": [
      "border-color"
    ]
  },
  "divide-white": {
    "css": ":where(& > :not(:last-child)) {\n      border-color: var(--color-white);\n    }",
    "cssProperties": [
      "border-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "truncate": {
    "css": "overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;",
    "cssProperties": [
      "overflow",
      "text-overflow",
      "white-space"
    ]
  },
  "border-black": {
    "css": "border-color: var(--color-black);",
    "cssProperties": [
      "border-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "border-current": {
    "css": "border-color: currentcolor;",
    "cssProperties": [
      "border-color"
    ]
  },
  "border-inherit": {
    "css": "border-color: inherit;",
    "cssProperties": [
      "border-color"
    ]
  },
  "border-red-500": {
    "css": "border-color: var(--color-red-500);",
    "cssProperties": [
      "border-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "border-transparent": {
    "css": "border-color: transparent;",
    "cssProperties": [
      "border-color"
    ]
  },
  "border-white": {
    "css": "border-color: var(--color-white);",
    "cssProperties": [
      "border-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "border-x-black": {
    "css": "border-inline-color: var(--color-black);",
    "cssProperties": [
      "border-inline-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "border-x-current": {
    "css": "border-inline-color: currentcolor;",
    "cssProperties": [
      "border-inline-color"
    ]
  },
  "border-x-inherit": {
    "css": "border-inline-color: inherit;",
    "cssProperties": [
      "border-inline-color"
    ]
  },
  "border-x-red-500": {
    "css": "border-inline-color: var(--color-red-500);",
    "cssProperties": [
      "border-inline-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "border-x-transparent": {
    "css": "border-inline-color: transparent;",
    "cssProperties": [
      "border-inline-color"
    ]
  },
  "border-x-white": {
    "css": "border-inline-color: var(--color-white);",
    "cssProperties": [
      "border-inline-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "border-y-black": {
    "css": "border-block-color: var(--color-black);",
    "cssProperties": [
      "border-block-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "border-y-current": {
    "css": "border-block-color: currentcolor;",
    "cssProperties": [
      "border-block-color"
    ]
  },
  "border-y-inherit": {
    "css": "border-block-color: inherit;",
    "cssProperties": [
      "border-block-color"
    ]
  },
  "border-y-red-500": {
    "css": "border-block-color: var(--color-red-500);",
    "cssProperties": [
      "border-block-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "border-y-transparent": {
    "css": "border-block-color: transparent;",
    "cssProperties": [
      "border-block-color"
    ]
  },
  "border-y-white": {
    "css": "border-block-color: var(--color-white);",
    "cssProperties": [
      "border-block-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "border-t-black": {
    "css": "border-top-color: var(--color-black);",
    "cssProperties": [
      "border-top-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "border-t-current": {
    "css": "border-top-color: currentcolor;",
    "cssProperties": [
      "border-top-color"
    ]
  },
  "border-t-inherit": {
    "css": "border-top-color: inherit;",
    "cssProperties": [
      "border-top-color"
    ]
  },
  "border-t-red-500": {
    "css": "border-top-color: var(--color-red-500);",
    "cssProperties": [
      "border-top-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "border-t-transparent": {
    "css": "border-top-color: transparent;",
    "cssProperties": [
      "border-top-color"
    ]
  },
  "border-t-white": {
    "css": "border-top-color: var(--color-white);",
    "cssProperties": [
      "border-top-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "border-r-black": {
    "css": "border-right-color: var(--color-black);",
    "cssProperties": [
      "border-right-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "border-r-current": {
    "css": "border-right-color: currentcolor;",
    "cssProperties": [
      "border-right-color"
    ]
  },
  "border-r-inherit": {
    "css": "border-right-color: inherit;",
    "cssProperties": [
      "border-right-color"
    ]
  },
  "border-r-red-500": {
    "css": "border-right-color: var(--color-red-500);",
    "cssProperties": [
      "border-right-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "border-r-transparent": {
    "css": "border-right-color: transparent;",
    "cssProperties": [
      "border-right-color"
    ]
  },
  "border-r-white": {
    "css": "border-right-color: var(--color-white);",
    "cssProperties": [
      "border-right-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "border-b-black": {
    "css": "border-bottom-color: var(--color-black);",
    "cssProperties": [
      "border-bottom-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "border-b-current": {
    "css": "border-bottom-color: currentcolor;",
    "cssProperties": [
      "border-bottom-color"
    ]
  },
  "border-b-inherit": {
    "css": "border-bottom-color: inherit;",
    "cssProperties": [
      "border-bottom-color"
    ]
  },
  "border-b-red-500": {
    "css": "border-bottom-color: var(--color-red-500);",
    "cssProperties": [
      "border-bottom-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "border-b-transparent": {
    "css": "border-bottom-color: transparent;",
    "cssProperties": [
      "border-bottom-color"
    ]
  },
  "border-b-white": {
    "css": "border-bottom-color: var(--color-white);",
    "cssProperties": [
      "border-bottom-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "border-l-black": {
    "css": "border-left-color: var(--color-black);",
    "cssProperties": [
      "border-left-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "border-l-current": {
    "css": "border-left-color: currentcolor;",
    "cssProperties": [
      "border-left-color"
    ]
  },
  "border-l-inherit": {
    "css": "border-left-color: inherit;",
    "cssProperties": [
      "border-left-color"
    ]
  },
  "border-l-red-500": {
    "css": "border-left-color: var(--color-red-500);",
    "cssProperties": [
      "border-left-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "border-l-transparent": {
    "css": "border-left-color: transparent;",
    "cssProperties": [
      "border-left-color"
    ]
  },
  "border-l-white": {
    "css": "border-left-color: var(--color-white);",
    "cssProperties": [
      "border-left-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "bg-black": {
    "css": "background-color: var(--color-black);",
    "cssProperties": [
      "background-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "bg-current": {
    "css": "background-color: currentcolor;",
    "cssProperties": [
      "background-color"
    ]
  },
  "bg-inherit": {
    "css": "background-color: inherit;",
    "cssProperties": [
      "background-color"
    ]
  },
  "bg-red-500": {
    "css": "background-color: var(--color-red-500);",
    "cssProperties": [
      "background-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "bg-transparent": {
    "css": "background-color: transparent;",
    "cssProperties": [
      "background-color"
    ]
  },
  "bg-white": {
    "css": "background-color: var(--color-white);",
    "cssProperties": [
      "background-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "via-none": {
    "css": "--tw-gradient-via-stops: initial;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "via-0%": {
    "css": "--tw-gradient-via-position: 0%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-5%": {
    "css": "--tw-gradient-via-position: 5%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-10%": {
    "css": "--tw-gradient-via-position: 10%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-15%": {
    "css": "--tw-gradient-via-position: 15%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-20%": {
    "css": "--tw-gradient-via-position: 20%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-25%": {
    "css": "--tw-gradient-via-position: 25%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-30%": {
    "css": "--tw-gradient-via-position: 30%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-35%": {
    "css": "--tw-gradient-via-position: 35%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-40%": {
    "css": "--tw-gradient-via-position: 40%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-45%": {
    "css": "--tw-gradient-via-position: 45%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-50%": {
    "css": "--tw-gradient-via-position: 50%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-55%": {
    "css": "--tw-gradient-via-position: 55%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-60%": {
    "css": "--tw-gradient-via-position: 60%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-65%": {
    "css": "--tw-gradient-via-position: 65%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-70%": {
    "css": "--tw-gradient-via-position: 70%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-75%": {
    "css": "--tw-gradient-via-position: 75%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-80%": {
    "css": "--tw-gradient-via-position: 80%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-85%": {
    "css": "--tw-gradient-via-position: 85%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-90%": {
    "css": "--tw-gradient-via-position: 90%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-95%": {
    "css": "--tw-gradient-via-position: 95%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "via-100%": {
    "css": "--tw-gradient-via-position: 100%;",
    "atProperties": [
      {
        "name": "--tw-gradient-via-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "50%"
      }
    ]
  },
  "to-0%": {
    "css": "--tw-gradient-to-position: 0%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-5%": {
    "css": "--tw-gradient-to-position: 5%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-10%": {
    "css": "--tw-gradient-to-position: 10%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-15%": {
    "css": "--tw-gradient-to-position: 15%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-20%": {
    "css": "--tw-gradient-to-position: 20%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-25%": {
    "css": "--tw-gradient-to-position: 25%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-30%": {
    "css": "--tw-gradient-to-position: 30%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-35%": {
    "css": "--tw-gradient-to-position: 35%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-40%": {
    "css": "--tw-gradient-to-position: 40%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-45%": {
    "css": "--tw-gradient-to-position: 45%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-50%": {
    "css": "--tw-gradient-to-position: 50%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-55%": {
    "css": "--tw-gradient-to-position: 55%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-60%": {
    "css": "--tw-gradient-to-position: 60%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-65%": {
    "css": "--tw-gradient-to-position: 65%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-70%": {
    "css": "--tw-gradient-to-position: 70%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-75%": {
    "css": "--tw-gradient-to-position: 75%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-80%": {
    "css": "--tw-gradient-to-position: 80%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-85%": {
    "css": "--tw-gradient-to-position: 85%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-90%": {
    "css": "--tw-gradient-to-position: 90%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-95%": {
    "css": "--tw-gradient-to-position: 95%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "to-100%": {
    "css": "--tw-gradient-to-position: 100%;",
    "atProperties": [
      {
        "name": "--tw-gradient-to-position",
        "syntax": "<length-percentage>",
        "inherits": false,
        "initialValue": "100%"
      }
    ]
  },
  "fill-black": {
    "css": "fill: var(--color-black);",
    "cssProperties": [
      "fill"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "fill-current": {
    "css": "fill: currentcolor;",
    "cssProperties": [
      "fill"
    ]
  },
  "fill-inherit": {
    "css": "fill: inherit;",
    "cssProperties": [
      "fill"
    ]
  },
  "fill-red-500": {
    "css": "fill: var(--color-red-500);",
    "cssProperties": [
      "fill"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "fill-transparent": {
    "css": "fill: transparent;",
    "cssProperties": [
      "fill"
    ]
  },
  "fill-white": {
    "css": "fill: var(--color-white);",
    "cssProperties": [
      "fill"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "stroke-current": {
    "css": "stroke: currentcolor;",
    "cssProperties": [
      "stroke"
    ]
  },
  "stroke-none": {
    "css": "stroke: none;",
    "cssProperties": [
      "stroke"
    ]
  },
  "stroke-transparent": {
    "css": "stroke: transparent;",
    "cssProperties": [
      "stroke"
    ]
  },
  "stroke-0": {
    "css": "stroke-width: 0;",
    "cssProperties": [
      "stroke-width"
    ]
  },
  "stroke-1": {
    "css": "stroke-width: 1;",
    "cssProperties": [
      "stroke-width"
    ]
  },
  "stroke-2": {
    "css": "stroke-width: 2;",
    "cssProperties": [
      "stroke-width"
    ]
  },
  "stroke-3": {
    "css": "stroke-width: 3;",
    "cssProperties": [
      "stroke-width"
    ]
  },
  "text-center": {
    "css": "text-align: center;",
    "cssProperties": [
      "text-align"
    ]
  },
  "text-end": {
    "css": "text-align: end;",
    "cssProperties": [
      "text-align"
    ]
  },
  "text-justify": {
    "css": "text-align: justify;",
    "cssProperties": [
      "text-align"
    ]
  },
  "text-left": {
    "css": "text-align: left;",
    "cssProperties": [
      "text-align"
    ]
  },
  "text-right": {
    "css": "text-align: right;",
    "cssProperties": [
      "text-align"
    ]
  },
  "text-start": {
    "css": "text-align: start;",
    "cssProperties": [
      "text-align"
    ]
  },
  "text-balance": {
    "css": "text-wrap: balance;",
    "cssProperties": [
      "text-wrap"
    ]
  },
  "text-nowrap": {
    "css": "text-wrap: nowrap;",
    "cssProperties": [
      "text-wrap"
    ]
  },
  "text-pretty": {
    "css": "text-wrap: pretty;",
    "cssProperties": [
      "text-wrap"
    ]
  },
  "text-wrap": {
    "css": "text-wrap: wrap;",
    "cssProperties": [
      "text-wrap"
    ]
  },
  "wrap-anywhere": {
    "css": "overflow-wrap: anywhere;",
    "cssProperties": [
      "overflow-wrap"
    ]
  },
  "wrap-break-word": {
    "css": "overflow-wrap: break-word;",
    "cssProperties": [
      "overflow-wrap"
    ]
  },
  "wrap-normal": {
    "css": "overflow-wrap: normal;",
    "cssProperties": [
      "overflow-wrap"
    ]
  },
  "text-clip": {
    "css": "text-overflow: clip;",
    "cssProperties": [
      "text-overflow"
    ]
  },
  "text-ellipsis": {
    "css": "text-overflow: ellipsis;",
    "cssProperties": [
      "text-overflow"
    ]
  },
  "whitespace-break-spaces": {
    "css": "white-space: break-spaces;",
    "cssProperties": [
      "white-space"
    ]
  },
  "whitespace-normal": {
    "css": "white-space: normal;",
    "cssProperties": [
      "white-space"
    ]
  },
  "whitespace-nowrap": {
    "css": "white-space: nowrap;",
    "cssProperties": [
      "white-space"
    ]
  },
  "whitespace-pre": {
    "css": "white-space: pre;",
    "cssProperties": [
      "white-space"
    ]
  },
  "whitespace-pre-line": {
    "css": "white-space: pre-line;",
    "cssProperties": [
      "white-space"
    ]
  },
  "whitespace-pre-wrap": {
    "css": "white-space: pre-wrap;",
    "cssProperties": [
      "white-space"
    ]
  },
  "text-black": {
    "css": "color: var(--color-black);",
    "cssProperties": [
      "color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "text-current": {
    "css": "color: currentcolor;",
    "cssProperties": [
      "color"
    ]
  },
  "text-inherit": {
    "css": "color: inherit;",
    "cssProperties": [
      "color"
    ]
  },
  "text-red-500": {
    "css": "color: var(--color-red-500);",
    "cssProperties": [
      "color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "text-transparent": {
    "css": "color: transparent;",
    "cssProperties": [
      "color"
    ]
  },
  "text-white": {
    "css": "color: var(--color-white);",
    "cssProperties": [
      "color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "uppercase": {
    "css": "text-transform: uppercase;",
    "cssProperties": [
      "text-transform"
    ]
  },
  "slashed-zero": {
    "css": "--tw-slashed-zero: slashed-zero;\n    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);",
    "cssProperties": [
      "font-variant-numeric"
    ],
    "atProperties": [
      {
        "name": "--tw-slashed-zero",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "stacked-fractions": {
    "css": "--tw-numeric-fraction: stacked-fractions;\n    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);",
    "cssProperties": [
      "font-variant-numeric"
    ],
    "atProperties": [
      {
        "name": "--tw-numeric-fraction",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "tabular-nums": {
    "css": "--tw-numeric-spacing: tabular-nums;\n    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);",
    "cssProperties": [
      "font-variant-numeric"
    ],
    "atProperties": [
      {
        "name": "--tw-numeric-spacing",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "underline": {
    "css": "text-decoration-line: underline;",
    "cssProperties": [
      "text-decoration-line"
    ]
  },
  "decoration-black": {
    "css": "text-decoration-color: var(--color-black);",
    "cssProperties": [
      "text-decoration-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "decoration-current": {
    "css": "text-decoration-color: currentcolor;",
    "cssProperties": [
      "text-decoration-color"
    ]
  },
  "decoration-inherit": {
    "css": "text-decoration-color: inherit;",
    "cssProperties": [
      "text-decoration-color"
    ]
  },
  "decoration-red-500": {
    "css": "text-decoration-color: var(--color-red-500);",
    "cssProperties": [
      "text-decoration-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "decoration-transparent": {
    "css": "text-decoration-color: transparent;",
    "cssProperties": [
      "text-decoration-color"
    ]
  },
  "decoration-white": {
    "css": "text-decoration-color: var(--color-white);",
    "cssProperties": [
      "text-decoration-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "underline-offset-0": {
    "css": "text-underline-offset: 0px;",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "underline-offset-1": {
    "css": "text-underline-offset: 1px;",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "underline-offset-2": {
    "css": "text-underline-offset: 2px;",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "underline-offset-4": {
    "css": "text-underline-offset: 4px;",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "underline-offset-8": {
    "css": "text-underline-offset: 8px;",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "underline-offset-auto": {
    "css": "text-underline-offset: auto;",
    "cssProperties": [
      "text-underline-offset"
    ]
  },
  "subpixel-antialiased": {
    "css": "-webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;"
  },
  "shadow-none": {
    "css": "--tw-shadow: 0 0 #0000;\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "shadow-black": {
    "css": "--tw-shadow-color: #000;\n    @supports (color: color-mix(in lab, red, red)) {\n      --tw-shadow-color: color-mix(in oklab, var(--color-black) var(--tw-shadow-alpha), transparent);\n    }",
    "cssProperties": [
      "color"
    ],
    "customProperties": {
      "--color-black": "#000"
    },
    "atProperties": [
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "shadow-current": {
    "css": "--tw-shadow-color: currentcolor;\n    @supports (color: color-mix(in lab, red, red)) {\n      --tw-shadow-color: color-mix(in oklab, currentcolor var(--tw-shadow-alpha), transparent);\n    }",
    "cssProperties": [
      "color"
    ],
    "atProperties": [
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "shadow-inherit": {
    "css": "--tw-shadow-color: inherit;",
    "atProperties": [
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "shadow-initial": {
    "css": "--tw-shadow-color: initial;",
    "atProperties": [
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "shadow-red-500": {
    "css": "--tw-shadow-color: oklch(63.7% 0.237 25.331);\n    @supports (color: color-mix(in lab, red, red)) {\n      --tw-shadow-color: color-mix(in oklab, var(--color-red-500) var(--tw-shadow-alpha), transparent);\n    }",
    "cssProperties": [
      "color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    },
    "atProperties": [
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "shadow-transparent": {
    "css": "--tw-shadow-color: transparent;\n    @supports (color: color-mix(in lab, red, red)) {\n      --tw-shadow-color: color-mix(in oklab, transparent var(--tw-shadow-alpha), transparent);\n    }",
    "cssProperties": [
      "color"
    ],
    "atProperties": [
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "shadow-white": {
    "css": "--tw-shadow-color: #fff;\n    @supports (color: color-mix(in lab, red, red)) {\n      --tw-shadow-color: color-mix(in oklab, var(--color-white) var(--tw-shadow-alpha), transparent);\n    }",
    "cssProperties": [
      "color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    },
    "atProperties": [
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-shadow-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "ring-black": {
    "css": "--tw-ring-color: var(--color-black);",
    "customProperties": {
      "--color-black": "#000"
    },
    "atProperties": [
      {
        "name": "--tw-ring-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "ring-current": {
    "css": "--tw-ring-color: currentcolor;",
    "atProperties": [
      {
        "name": "--tw-ring-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "ring-inherit": {
    "css": "--tw-ring-color: inherit;",
    "atProperties": [
      {
        "name": "--tw-ring-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "ring-red-500": {
    "css": "--tw-ring-color: var(--color-red-500);",
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    },
    "atProperties": [
      {
        "name": "--tw-ring-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "ring-transparent": {
    "css": "--tw-ring-color: transparent;",
    "atProperties": [
      {
        "name": "--tw-ring-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "ring-white": {
    "css": "--tw-ring-color: var(--color-white);",
    "customProperties": {
      "--color-white": "#fff"
    },
    "atProperties": [
      {
        "name": "--tw-ring-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "ring-offset-black": {
    "css": "--tw-ring-offset-color: var(--color-black);",
    "customProperties": {
      "--color-black": "#000"
    },
    "atProperties": [
      {
        "name": "--tw-ring-offset-color",
        "syntax": "*",
        "inherits": false,
        "initialValue": "#fff"
      }
    ]
  },
  "ring-offset-current": {
    "css": "--tw-ring-offset-color: currentcolor;",
    "atProperties": [
      {
        "name": "--tw-ring-offset-color",
        "syntax": "*",
        "inherits": false,
        "initialValue": "#fff"
      }
    ]
  },
  "ring-offset-inherit": {
    "css": "--tw-ring-offset-color: inherit;",
    "atProperties": [
      {
        "name": "--tw-ring-offset-color",
        "syntax": "*",
        "inherits": false,
        "initialValue": "#fff"
      }
    ]
  },
  "ring-offset-red-500": {
    "css": "--tw-ring-offset-color: var(--color-red-500);",
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    },
    "atProperties": [
      {
        "name": "--tw-ring-offset-color",
        "syntax": "*",
        "inherits": false,
        "initialValue": "#fff"
      }
    ]
  },
  "ring-offset-transparent": {
    "css": "--tw-ring-offset-color: transparent;",
    "atProperties": [
      {
        "name": "--tw-ring-offset-color",
        "syntax": "*",
        "inherits": false,
        "initialValue": "#fff"
      }
    ]
  },
  "ring-offset-white": {
    "css": "--tw-ring-offset-color: var(--color-white);",
    "customProperties": {
      "--color-white": "#fff"
    },
    "atProperties": [
      {
        "name": "--tw-ring-offset-color",
        "syntax": "*",
        "inherits": false,
        "initialValue": "#fff"
      }
    ]
  },
  "outline-black": {
    "css": "outline-color: var(--color-black);",
    "cssProperties": [
      "outline-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "outline-current": {
    "css": "outline-color: currentcolor;",
    "cssProperties": [
      "outline-color"
    ]
  },
  "outline-inherit": {
    "css": "outline-color: inherit;",
    "cssProperties": [
      "outline-color"
    ]
  },
  "outline-red-500": {
    "css": "outline-color: var(--color-red-500);",
    "cssProperties": [
      "outline-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "outline-transparent": {
    "css": "outline-color: transparent;",
    "cssProperties": [
      "outline-color"
    ]
  },
  "outline-white": {
    "css": "outline-color: var(--color-white);",
    "cssProperties": [
      "outline-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "sepia-50": {
    "css": "--tw-sepia: sepia(50%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-sepia",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "sepia-100": {
    "css": "--tw-sepia: sepia(100%);\n    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);",
    "cssProperties": [
      "filter"
    ],
    "atProperties": [
      {
        "name": "--tw-sepia",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "transition": {
    "css": "transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));",
    "cssProperties": [
      "transition-property",
      "transition-timing-function",
      "transition-duration"
    ]
  },
  "transition-all": {
    "css": "transition-property: all;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));",
    "cssProperties": [
      "transition-property",
      "transition-timing-function",
      "transition-duration"
    ]
  },
  "transition-colors": {
    "css": "transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));",
    "cssProperties": [
      "transition-property",
      "transition-timing-function",
      "transition-duration"
    ]
  },
  "transition-opacity": {
    "css": "transition-property: opacity;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));",
    "cssProperties": [
      "transition-property",
      "transition-timing-function",
      "transition-duration"
    ]
  },
  "transition-shadow": {
    "css": "transition-property: box-shadow;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));",
    "cssProperties": [
      "transition-property",
      "transition-timing-function",
      "transition-duration"
    ]
  },
  "transition-transform": {
    "css": "transition-property: transform, translate, scale, rotate;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));",
    "cssProperties": [
      "transition-property",
      "transition-timing-function",
      "transition-duration"
    ]
  },
  "transition-none": {
    "css": "transition-property: none;",
    "cssProperties": [
      "transition-property"
    ]
  },
  "transition-discrete": {
    "css": "transition-behavior: allow-discrete;",
    "cssProperties": [
      "transition-behavior"
    ]
  },
  "transition-normal": {
    "css": "transition-behavior: normal;",
    "cssProperties": [
      "transition-behavior"
    ]
  },
  "will-change-auto": {
    "css": "will-change: auto;",
    "cssProperties": [
      "will-change"
    ]
  },
  "will-change-contents": {
    "css": "will-change: contents;",
    "cssProperties": [
      "will-change"
    ]
  },
  "will-change-scroll": {
    "css": "will-change: scroll-position;",
    "cssProperties": [
      "will-change"
    ]
  },
  "will-change-transform": {
    "css": "will-change: transform;",
    "cssProperties": [
      "will-change"
    ]
  },
  "text-shadow-initial": {
    "css": "--tw-text-shadow-color: initial;",
    "atProperties": [
      {
        "name": "--tw-text-shadow-color",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "text-shadow-none": {
    "css": "text-shadow: none;",
    "cssProperties": [
      "text-shadow"
    ]
  },
  "transform-3d": {
    "css": "transform-style: preserve-3d;",
    "cssProperties": [
      "transform-style"
    ]
  },
  "transform-border": {
    "css": "transform-box: border-box;",
    "cssProperties": [
      "transform-box"
    ]
  },
  "transform-content": {
    "css": "transform-box: content-box;",
    "cssProperties": [
      "transform-box"
    ]
  },
  "transform-fill": {
    "css": "transform-box: fill-box;",
    "cssProperties": [
      "transform-box"
    ]
  },
  "transform-flat": {
    "css": "transform-style: flat;",
    "cssProperties": [
      "transform-style"
    ]
  },
  "transform-stroke": {
    "css": "transform-box: stroke-box;",
    "cssProperties": [
      "transform-box"
    ]
  },
  "transform-view": {
    "css": "transform-box: view-box;",
    "cssProperties": [
      "transform-box"
    ]
  },
  "-inset-0.5": {
    "css": "inset: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-1": {
    "css": "inset: calc(var(--spacing) * -1);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-4": {
    "css": "inset: calc(var(--spacing) * -4);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-8": {
    "css": "inset: calc(var(--spacing) * -8);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-16": {
    "css": "inset: calc(var(--spacing) * -16);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-0": {
    "css": "inset: calc(var(--spacing) * 0);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-0.5": {
    "css": "inset: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-1": {
    "css": "inset: calc(var(--spacing) * 1);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-4": {
    "css": "inset: calc(var(--spacing) * 4);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-8": {
    "css": "inset: calc(var(--spacing) * 8);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-16": {
    "css": "inset: calc(var(--spacing) * 16);",
    "cssProperties": [
      "inset"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-x-0.5": {
    "css": "inset-inline: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-x-1": {
    "css": "inset-inline: calc(var(--spacing) * -1);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-x-4": {
    "css": "inset-inline: calc(var(--spacing) * -4);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-x-8": {
    "css": "inset-inline: calc(var(--spacing) * -8);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-x-16": {
    "css": "inset-inline: calc(var(--spacing) * -16);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-x-0": {
    "css": "inset-inline: calc(var(--spacing) * 0);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-x-0.5": {
    "css": "inset-inline: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-x-1": {
    "css": "inset-inline: calc(var(--spacing) * 1);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-x-4": {
    "css": "inset-inline: calc(var(--spacing) * 4);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-x-8": {
    "css": "inset-inline: calc(var(--spacing) * 8);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-x-16": {
    "css": "inset-inline: calc(var(--spacing) * 16);",
    "cssProperties": [
      "inset-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-y-0.5": {
    "css": "inset-block: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-y-1": {
    "css": "inset-block: calc(var(--spacing) * -1);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-y-4": {
    "css": "inset-block: calc(var(--spacing) * -4);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-y-8": {
    "css": "inset-block: calc(var(--spacing) * -8);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-inset-y-16": {
    "css": "inset-block: calc(var(--spacing) * -16);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-y-0": {
    "css": "inset-block: calc(var(--spacing) * 0);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-y-0.5": {
    "css": "inset-block: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-y-1": {
    "css": "inset-block: calc(var(--spacing) * 1);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-y-4": {
    "css": "inset-block: calc(var(--spacing) * 4);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-y-8": {
    "css": "inset-block: calc(var(--spacing) * 8);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "inset-y-16": {
    "css": "inset-block: calc(var(--spacing) * 16);",
    "cssProperties": [
      "inset-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-top-0.5": {
    "css": "top: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-top-1": {
    "css": "top: calc(var(--spacing) * -1);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-top-4": {
    "css": "top: calc(var(--spacing) * -4);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-top-8": {
    "css": "top: calc(var(--spacing) * -8);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-top-16": {
    "css": "top: calc(var(--spacing) * -16);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "top-0": {
    "css": "top: calc(var(--spacing) * 0);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "top-0.5": {
    "css": "top: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "top-1": {
    "css": "top: calc(var(--spacing) * 1);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "top-4": {
    "css": "top: calc(var(--spacing) * 4);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "top-8": {
    "css": "top: calc(var(--spacing) * 8);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "top-16": {
    "css": "top: calc(var(--spacing) * 16);",
    "cssProperties": [
      "top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-right-0.5": {
    "css": "right: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-right-1": {
    "css": "right: calc(var(--spacing) * -1);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-right-4": {
    "css": "right: calc(var(--spacing) * -4);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-right-8": {
    "css": "right: calc(var(--spacing) * -8);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-right-16": {
    "css": "right: calc(var(--spacing) * -16);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "right-0": {
    "css": "right: calc(var(--spacing) * 0);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "right-0.5": {
    "css": "right: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "right-1": {
    "css": "right: calc(var(--spacing) * 1);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "right-4": {
    "css": "right: calc(var(--spacing) * 4);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "right-8": {
    "css": "right: calc(var(--spacing) * 8);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "right-16": {
    "css": "right: calc(var(--spacing) * 16);",
    "cssProperties": [
      "right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-bottom-0.5": {
    "css": "bottom: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-bottom-1": {
    "css": "bottom: calc(var(--spacing) * -1);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-bottom-4": {
    "css": "bottom: calc(var(--spacing) * -4);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-bottom-8": {
    "css": "bottom: calc(var(--spacing) * -8);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-bottom-16": {
    "css": "bottom: calc(var(--spacing) * -16);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "bottom-0": {
    "css": "bottom: calc(var(--spacing) * 0);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "bottom-0.5": {
    "css": "bottom: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "bottom-1": {
    "css": "bottom: calc(var(--spacing) * 1);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "bottom-4": {
    "css": "bottom: calc(var(--spacing) * 4);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "bottom-8": {
    "css": "bottom: calc(var(--spacing) * 8);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "bottom-16": {
    "css": "bottom: calc(var(--spacing) * 16);",
    "cssProperties": [
      "bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-left-0.5": {
    "css": "left: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-left-1": {
    "css": "left: calc(var(--spacing) * -1);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-left-4": {
    "css": "left: calc(var(--spacing) * -4);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-left-8": {
    "css": "left: calc(var(--spacing) * -8);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-left-16": {
    "css": "left: calc(var(--spacing) * -16);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "left-0": {
    "css": "left: calc(var(--spacing) * 0);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "left-0.5": {
    "css": "left: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "left-1": {
    "css": "left: calc(var(--spacing) * 1);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "left-4": {
    "css": "left: calc(var(--spacing) * 4);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "left-8": {
    "css": "left: calc(var(--spacing) * 8);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "left-16": {
    "css": "left: calc(var(--spacing) * 16);",
    "cssProperties": [
      "left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-m-0.5": {
    "css": "margin: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-m-1": {
    "css": "margin: calc(var(--spacing) * -1);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-m-4": {
    "css": "margin: calc(var(--spacing) * -4);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-m-8": {
    "css": "margin: calc(var(--spacing) * -8);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-m-16": {
    "css": "margin: calc(var(--spacing) * -16);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "m-0": {
    "css": "margin: calc(var(--spacing) * 0);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "m-0.5": {
    "css": "margin: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "m-1": {
    "css": "margin: calc(var(--spacing) * 1);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "m-4": {
    "css": "margin: calc(var(--spacing) * 4);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "m-8": {
    "css": "margin: calc(var(--spacing) * 8);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "m-16": {
    "css": "margin: calc(var(--spacing) * 16);",
    "cssProperties": [
      "margin"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mx-0.5": {
    "css": "margin-inline: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mx-1": {
    "css": "margin-inline: calc(var(--spacing) * -1);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mx-4": {
    "css": "margin-inline: calc(var(--spacing) * -4);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mx-8": {
    "css": "margin-inline: calc(var(--spacing) * -8);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mx-16": {
    "css": "margin-inline: calc(var(--spacing) * -16);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mx-0": {
    "css": "margin-inline: calc(var(--spacing) * 0);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mx-0.5": {
    "css": "margin-inline: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mx-1": {
    "css": "margin-inline: calc(var(--spacing) * 1);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mx-4": {
    "css": "margin-inline: calc(var(--spacing) * 4);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mx-8": {
    "css": "margin-inline: calc(var(--spacing) * 8);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mx-16": {
    "css": "margin-inline: calc(var(--spacing) * 16);",
    "cssProperties": [
      "margin-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-my-0.5": {
    "css": "margin-block: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-my-1": {
    "css": "margin-block: calc(var(--spacing) * -1);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-my-4": {
    "css": "margin-block: calc(var(--spacing) * -4);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-my-8": {
    "css": "margin-block: calc(var(--spacing) * -8);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-my-16": {
    "css": "margin-block: calc(var(--spacing) * -16);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "my-0": {
    "css": "margin-block: calc(var(--spacing) * 0);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "my-0.5": {
    "css": "margin-block: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "my-1": {
    "css": "margin-block: calc(var(--spacing) * 1);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "my-4": {
    "css": "margin-block: calc(var(--spacing) * 4);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "my-8": {
    "css": "margin-block: calc(var(--spacing) * 8);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "my-16": {
    "css": "margin-block: calc(var(--spacing) * 16);",
    "cssProperties": [
      "margin-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-ms-0.5": {
    "css": "margin-inline-start: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-ms-1": {
    "css": "margin-inline-start: calc(var(--spacing) * -1);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-ms-4": {
    "css": "margin-inline-start: calc(var(--spacing) * -4);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-ms-8": {
    "css": "margin-inline-start: calc(var(--spacing) * -8);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-ms-16": {
    "css": "margin-inline-start: calc(var(--spacing) * -16);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ms-0": {
    "css": "margin-inline-start: calc(var(--spacing) * 0);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ms-0.5": {
    "css": "margin-inline-start: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ms-1": {
    "css": "margin-inline-start: calc(var(--spacing) * 1);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ms-4": {
    "css": "margin-inline-start: calc(var(--spacing) * 4);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ms-8": {
    "css": "margin-inline-start: calc(var(--spacing) * 8);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ms-16": {
    "css": "margin-inline-start: calc(var(--spacing) * 16);",
    "cssProperties": [
      "margin-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-me-0.5": {
    "css": "margin-inline-end: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-me-1": {
    "css": "margin-inline-end: calc(var(--spacing) * -1);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-me-4": {
    "css": "margin-inline-end: calc(var(--spacing) * -4);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-me-8": {
    "css": "margin-inline-end: calc(var(--spacing) * -8);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-me-16": {
    "css": "margin-inline-end: calc(var(--spacing) * -16);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "me-0": {
    "css": "margin-inline-end: calc(var(--spacing) * 0);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "me-0.5": {
    "css": "margin-inline-end: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "me-1": {
    "css": "margin-inline-end: calc(var(--spacing) * 1);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "me-4": {
    "css": "margin-inline-end: calc(var(--spacing) * 4);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "me-8": {
    "css": "margin-inline-end: calc(var(--spacing) * 8);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "me-16": {
    "css": "margin-inline-end: calc(var(--spacing) * 16);",
    "cssProperties": [
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "me-auto": {
    "css": "margin-inline-end: auto;",
    "cssProperties": [
      "margin-inline-end"
    ]
  },
  "-mt-0.5": {
    "css": "margin-top: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mt-1": {
    "css": "margin-top: calc(var(--spacing) * -1);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mt-4": {
    "css": "margin-top: calc(var(--spacing) * -4);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mt-8": {
    "css": "margin-top: calc(var(--spacing) * -8);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mt-16": {
    "css": "margin-top: calc(var(--spacing) * -16);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mt-0": {
    "css": "margin-top: calc(var(--spacing) * 0);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mt-0.5": {
    "css": "margin-top: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mt-1": {
    "css": "margin-top: calc(var(--spacing) * 1);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mt-4": {
    "css": "margin-top: calc(var(--spacing) * 4);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mt-8": {
    "css": "margin-top: calc(var(--spacing) * 8);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mt-16": {
    "css": "margin-top: calc(var(--spacing) * 16);",
    "cssProperties": [
      "margin-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mr-0.5": {
    "css": "margin-right: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mr-1": {
    "css": "margin-right: calc(var(--spacing) * -1);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mr-4": {
    "css": "margin-right: calc(var(--spacing) * -4);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mr-8": {
    "css": "margin-right: calc(var(--spacing) * -8);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mr-16": {
    "css": "margin-right: calc(var(--spacing) * -16);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mr-0": {
    "css": "margin-right: calc(var(--spacing) * 0);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mr-0.5": {
    "css": "margin-right: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mr-1": {
    "css": "margin-right: calc(var(--spacing) * 1);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mr-4": {
    "css": "margin-right: calc(var(--spacing) * 4);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mr-8": {
    "css": "margin-right: calc(var(--spacing) * 8);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mr-16": {
    "css": "margin-right: calc(var(--spacing) * 16);",
    "cssProperties": [
      "margin-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mb-0.5": {
    "css": "margin-bottom: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mb-1": {
    "css": "margin-bottom: calc(var(--spacing) * -1);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mb-4": {
    "css": "margin-bottom: calc(var(--spacing) * -4);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mb-8": {
    "css": "margin-bottom: calc(var(--spacing) * -8);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-mb-16": {
    "css": "margin-bottom: calc(var(--spacing) * -16);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mb-0": {
    "css": "margin-bottom: calc(var(--spacing) * 0);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mb-0.5": {
    "css": "margin-bottom: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mb-1": {
    "css": "margin-bottom: calc(var(--spacing) * 1);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mb-4": {
    "css": "margin-bottom: calc(var(--spacing) * 4);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mb-8": {
    "css": "margin-bottom: calc(var(--spacing) * 8);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "mb-16": {
    "css": "margin-bottom: calc(var(--spacing) * 16);",
    "cssProperties": [
      "margin-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-ml-0.5": {
    "css": "margin-left: calc(var(--spacing) * -0.5);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-ml-1": {
    "css": "margin-left: calc(var(--spacing) * -1);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-ml-4": {
    "css": "margin-left: calc(var(--spacing) * -4);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-ml-8": {
    "css": "margin-left: calc(var(--spacing) * -8);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-ml-16": {
    "css": "margin-left: calc(var(--spacing) * -16);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ml-0": {
    "css": "margin-left: calc(var(--spacing) * 0);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ml-0.5": {
    "css": "margin-left: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ml-1": {
    "css": "margin-left: calc(var(--spacing) * 1);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ml-4": {
    "css": "margin-left: calc(var(--spacing) * 4);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ml-8": {
    "css": "margin-left: calc(var(--spacing) * 8);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ml-16": {
    "css": "margin-left: calc(var(--spacing) * 16);",
    "cssProperties": [
      "margin-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "h-0": {
    "css": "height: calc(var(--spacing) * 0);",
    "cssProperties": [
      "height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "h-0.5": {
    "css": "height: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "h-1": {
    "css": "height: calc(var(--spacing) * 1);",
    "cssProperties": [
      "height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "h-4": {
    "css": "height: calc(var(--spacing) * 4);",
    "cssProperties": [
      "height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "h-8": {
    "css": "height: calc(var(--spacing) * 8);",
    "cssProperties": [
      "height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "h-16": {
    "css": "height: calc(var(--spacing) * 16);",
    "cssProperties": [
      "height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-h-0": {
    "css": "max-height: calc(var(--spacing) * 0);",
    "cssProperties": [
      "max-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-h-0.5": {
    "css": "max-height: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "max-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-h-1": {
    "css": "max-height: calc(var(--spacing) * 1);",
    "cssProperties": [
      "max-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-h-4": {
    "css": "max-height: calc(var(--spacing) * 4);",
    "cssProperties": [
      "max-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-h-8": {
    "css": "max-height: calc(var(--spacing) * 8);",
    "cssProperties": [
      "max-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-h-16": {
    "css": "max-height: calc(var(--spacing) * 16);",
    "cssProperties": [
      "max-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-h-0": {
    "css": "min-height: calc(var(--spacing) * 0);",
    "cssProperties": [
      "min-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-h-0.5": {
    "css": "min-height: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "min-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-h-1": {
    "css": "min-height: calc(var(--spacing) * 1);",
    "cssProperties": [
      "min-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-h-4": {
    "css": "min-height: calc(var(--spacing) * 4);",
    "cssProperties": [
      "min-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-h-8": {
    "css": "min-height: calc(var(--spacing) * 8);",
    "cssProperties": [
      "min-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-h-16": {
    "css": "min-height: calc(var(--spacing) * 16);",
    "cssProperties": [
      "min-height"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "w-0": {
    "css": "width: calc(var(--spacing) * 0);",
    "cssProperties": [
      "width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "w-0.5": {
    "css": "width: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "w-1": {
    "css": "width: calc(var(--spacing) * 1);",
    "cssProperties": [
      "width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "w-4": {
    "css": "width: calc(var(--spacing) * 4);",
    "cssProperties": [
      "width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "w-8": {
    "css": "width: calc(var(--spacing) * 8);",
    "cssProperties": [
      "width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "w-16": {
    "css": "width: calc(var(--spacing) * 16);",
    "cssProperties": [
      "width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-w-0": {
    "css": "max-width: calc(var(--spacing) * 0);",
    "cssProperties": [
      "max-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-w-0.5": {
    "css": "max-width: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "max-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-w-1": {
    "css": "max-width: calc(var(--spacing) * 1);",
    "cssProperties": [
      "max-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-w-4": {
    "css": "max-width: calc(var(--spacing) * 4);",
    "cssProperties": [
      "max-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-w-8": {
    "css": "max-width: calc(var(--spacing) * 8);",
    "cssProperties": [
      "max-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "max-w-16": {
    "css": "max-width: calc(var(--spacing) * 16);",
    "cssProperties": [
      "max-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-w-0": {
    "css": "min-width: calc(var(--spacing) * 0);",
    "cssProperties": [
      "min-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-w-0.5": {
    "css": "min-width: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "min-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-w-1": {
    "css": "min-width: calc(var(--spacing) * 1);",
    "cssProperties": [
      "min-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-w-4": {
    "css": "min-width: calc(var(--spacing) * 4);",
    "cssProperties": [
      "min-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-w-8": {
    "css": "min-width: calc(var(--spacing) * 8);",
    "cssProperties": [
      "min-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "min-w-16": {
    "css": "min-width: calc(var(--spacing) * 16);",
    "cssProperties": [
      "min-width"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-0": {
    "css": "gap: calc(var(--spacing) * 0);",
    "cssProperties": [
      "gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-0.5": {
    "css": "gap: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-1": {
    "css": "gap: calc(var(--spacing) * 1);",
    "cssProperties": [
      "gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-4": {
    "css": "gap: calc(var(--spacing) * 4);",
    "cssProperties": [
      "gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-8": {
    "css": "gap: calc(var(--spacing) * 8);",
    "cssProperties": [
      "gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-16": {
    "css": "gap: calc(var(--spacing) * 16);",
    "cssProperties": [
      "gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-space-y-0.5": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * -0.5) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * -0.5) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-space-y-1": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * -1) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * -1) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-space-y-4": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * -4) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * -4) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-space-y-8": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * -8) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * -8) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-space-y-16": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * -16) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * -16) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-y-0": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-y-0.5": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-y-1": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-y-4": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-y-8": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-y-16": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 16) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 16) * calc(1 - var(--tw-space-y-reverse)));\n    }",
    "cssProperties": [
      "margin-block-start",
      "margin-block-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-y-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "gap-x-0": {
    "css": "column-gap: calc(var(--spacing) * 0);",
    "cssProperties": [
      "column-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-x-0.5": {
    "css": "column-gap: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "column-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-x-1": {
    "css": "column-gap: calc(var(--spacing) * 1);",
    "cssProperties": [
      "column-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-x-4": {
    "css": "column-gap: calc(var(--spacing) * 4);",
    "cssProperties": [
      "column-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-x-8": {
    "css": "column-gap: calc(var(--spacing) * 8);",
    "cssProperties": [
      "column-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-x-16": {
    "css": "column-gap: calc(var(--spacing) * 16);",
    "cssProperties": [
      "column-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "-space-x-0.5": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * -0.5) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * -0.5) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-space-x-1": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * -1) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * -1) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-space-x-4": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * -4) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * -4) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-space-x-8": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * -8) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * -8) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "-space-x-16": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * -16) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * -16) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-x-0": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 0) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-x-0.5": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-x-1": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-x-4": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-x-8": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "space-x-16": {
    "css": ":where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 16) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 16) * calc(1 - var(--tw-space-x-reverse)));\n    }",
    "cssProperties": [
      "margin-inline-start",
      "margin-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    },
    "atProperties": [
      {
        "name": "--tw-space-x-reverse",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0"
      }
    ]
  },
  "gap-y-0": {
    "css": "row-gap: calc(var(--spacing) * 0);",
    "cssProperties": [
      "row-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-y-0.5": {
    "css": "row-gap: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "row-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-y-1": {
    "css": "row-gap: calc(var(--spacing) * 1);",
    "cssProperties": [
      "row-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-y-4": {
    "css": "row-gap: calc(var(--spacing) * 4);",
    "cssProperties": [
      "row-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-y-8": {
    "css": "row-gap: calc(var(--spacing) * 8);",
    "cssProperties": [
      "row-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "gap-y-16": {
    "css": "row-gap: calc(var(--spacing) * 16);",
    "cssProperties": [
      "row-gap"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "from-black": {
    "css": "--tw-gradient-from: var(--color-black);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "customProperties": {
      "--color-black": "#000"
    },
    "atProperties": [
      {
        "name": "--tw-gradient-from",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "from-current": {
    "css": "--tw-gradient-from: currentcolor;\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "atProperties": [
      {
        "name": "--tw-gradient-from",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "from-inherit": {
    "css": "--tw-gradient-from: inherit;\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "atProperties": [
      {
        "name": "--tw-gradient-from",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "from-red-500": {
    "css": "--tw-gradient-from: var(--color-red-500);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    },
    "atProperties": [
      {
        "name": "--tw-gradient-from",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "from-transparent": {
    "css": "--tw-gradient-from: transparent;\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "atProperties": [
      {
        "name": "--tw-gradient-from",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "from-white": {
    "css": "--tw-gradient-from: var(--color-white);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "customProperties": {
      "--color-white": "#fff"
    },
    "atProperties": [
      {
        "name": "--tw-gradient-from",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "via-black": {
    "css": "--tw-gradient-via: var(--color-black);\n    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);\n    --tw-gradient-stops: var(--tw-gradient-via-stops);",
    "customProperties": {
      "--color-black": "#000"
    },
    "atProperties": [
      {
        "name": "--tw-gradient-via",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-via-stops",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "via-current": {
    "css": "--tw-gradient-via: currentcolor;\n    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);\n    --tw-gradient-stops: var(--tw-gradient-via-stops);",
    "atProperties": [
      {
        "name": "--tw-gradient-via",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-via-stops",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "via-inherit": {
    "css": "--tw-gradient-via: inherit;\n    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);\n    --tw-gradient-stops: var(--tw-gradient-via-stops);",
    "atProperties": [
      {
        "name": "--tw-gradient-via",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-via-stops",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "via-red-500": {
    "css": "--tw-gradient-via: var(--color-red-500);\n    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);\n    --tw-gradient-stops: var(--tw-gradient-via-stops);",
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    },
    "atProperties": [
      {
        "name": "--tw-gradient-via",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-via-stops",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "via-transparent": {
    "css": "--tw-gradient-via: transparent;\n    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);\n    --tw-gradient-stops: var(--tw-gradient-via-stops);",
    "atProperties": [
      {
        "name": "--tw-gradient-via",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-via-stops",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "via-white": {
    "css": "--tw-gradient-via: var(--color-white);\n    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);\n    --tw-gradient-stops: var(--tw-gradient-via-stops);",
    "customProperties": {
      "--color-white": "#fff"
    },
    "atProperties": [
      {
        "name": "--tw-gradient-via",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-via-stops",
        "syntax": "*",
        "inherits": false
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "to-black": {
    "css": "--tw-gradient-to: var(--color-black);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "customProperties": {
      "--color-black": "#000"
    },
    "atProperties": [
      {
        "name": "--tw-gradient-to",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "to-current": {
    "css": "--tw-gradient-to: currentcolor;\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "atProperties": [
      {
        "name": "--tw-gradient-to",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "to-inherit": {
    "css": "--tw-gradient-to: inherit;\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "atProperties": [
      {
        "name": "--tw-gradient-to",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "to-red-500": {
    "css": "--tw-gradient-to: var(--color-red-500);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    },
    "atProperties": [
      {
        "name": "--tw-gradient-to",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "to-transparent": {
    "css": "--tw-gradient-to: transparent;\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "atProperties": [
      {
        "name": "--tw-gradient-to",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "to-white": {
    "css": "--tw-gradient-to: var(--color-white);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));",
    "customProperties": {
      "--color-white": "#fff"
    },
    "atProperties": [
      {
        "name": "--tw-gradient-to",
        "syntax": "<color>",
        "inherits": false,
        "initialValue": "#0000"
      },
      {
        "name": "--tw-gradient-stops",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "stroke-black": {
    "css": "stroke: var(--color-black);",
    "cssProperties": [
      "stroke"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "stroke-inherit": {
    "css": "stroke: inherit;",
    "cssProperties": [
      "stroke"
    ]
  },
  "stroke-red-500": {
    "css": "stroke: var(--color-red-500);",
    "cssProperties": [
      "stroke"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "stroke-white": {
    "css": "stroke: var(--color-white);",
    "cssProperties": [
      "stroke"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "p-0": {
    "css": "padding: calc(var(--spacing) * 0);",
    "cssProperties": [
      "padding"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "p-0.5": {
    "css": "padding: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "padding"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "p-1": {
    "css": "padding: calc(var(--spacing) * 1);",
    "cssProperties": [
      "padding"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "p-4": {
    "css": "padding: calc(var(--spacing) * 4);",
    "cssProperties": [
      "padding"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "p-8": {
    "css": "padding: calc(var(--spacing) * 8);",
    "cssProperties": [
      "padding"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "p-16": {
    "css": "padding: calc(var(--spacing) * 16);",
    "cssProperties": [
      "padding"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "px-0": {
    "css": "padding-inline: calc(var(--spacing) * 0);",
    "cssProperties": [
      "padding-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "px-0.5": {
    "css": "padding-inline: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "padding-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "px-1": {
    "css": "padding-inline: calc(var(--spacing) * 1);",
    "cssProperties": [
      "padding-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "px-4": {
    "css": "padding-inline: calc(var(--spacing) * 4);",
    "cssProperties": [
      "padding-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "px-8": {
    "css": "padding-inline: calc(var(--spacing) * 8);",
    "cssProperties": [
      "padding-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "px-16": {
    "css": "padding-inline: calc(var(--spacing) * 16);",
    "cssProperties": [
      "padding-inline"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "py-0": {
    "css": "padding-block: calc(var(--spacing) * 0);",
    "cssProperties": [
      "padding-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "py-0.5": {
    "css": "padding-block: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "padding-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "py-1": {
    "css": "padding-block: calc(var(--spacing) * 1);",
    "cssProperties": [
      "padding-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "py-4": {
    "css": "padding-block: calc(var(--spacing) * 4);",
    "cssProperties": [
      "padding-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "py-8": {
    "css": "padding-block: calc(var(--spacing) * 8);",
    "cssProperties": [
      "padding-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "py-16": {
    "css": "padding-block: calc(var(--spacing) * 16);",
    "cssProperties": [
      "padding-block"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ps-0": {
    "css": "padding-inline-start: calc(var(--spacing) * 0);",
    "cssProperties": [
      "padding-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ps-0.5": {
    "css": "padding-inline-start: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "padding-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ps-1": {
    "css": "padding-inline-start: calc(var(--spacing) * 1);",
    "cssProperties": [
      "padding-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ps-4": {
    "css": "padding-inline-start: calc(var(--spacing) * 4);",
    "cssProperties": [
      "padding-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ps-8": {
    "css": "padding-inline-start: calc(var(--spacing) * 8);",
    "cssProperties": [
      "padding-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "ps-16": {
    "css": "padding-inline-start: calc(var(--spacing) * 16);",
    "cssProperties": [
      "padding-inline-start"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pe-0": {
    "css": "padding-inline-end: calc(var(--spacing) * 0);",
    "cssProperties": [
      "padding-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pe-0.5": {
    "css": "padding-inline-end: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "padding-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pe-1": {
    "css": "padding-inline-end: calc(var(--spacing) * 1);",
    "cssProperties": [
      "padding-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pe-4": {
    "css": "padding-inline-end: calc(var(--spacing) * 4);",
    "cssProperties": [
      "padding-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pe-8": {
    "css": "padding-inline-end: calc(var(--spacing) * 8);",
    "cssProperties": [
      "padding-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pe-16": {
    "css": "padding-inline-end: calc(var(--spacing) * 16);",
    "cssProperties": [
      "padding-inline-end"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pt-0": {
    "css": "padding-top: calc(var(--spacing) * 0);",
    "cssProperties": [
      "padding-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pt-0.5": {
    "css": "padding-top: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "padding-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pt-1": {
    "css": "padding-top: calc(var(--spacing) * 1);",
    "cssProperties": [
      "padding-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pt-4": {
    "css": "padding-top: calc(var(--spacing) * 4);",
    "cssProperties": [
      "padding-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pt-8": {
    "css": "padding-top: calc(var(--spacing) * 8);",
    "cssProperties": [
      "padding-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pt-16": {
    "css": "padding-top: calc(var(--spacing) * 16);",
    "cssProperties": [
      "padding-top"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pr-0": {
    "css": "padding-right: calc(var(--spacing) * 0);",
    "cssProperties": [
      "padding-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pr-0.5": {
    "css": "padding-right: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "padding-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pr-1": {
    "css": "padding-right: calc(var(--spacing) * 1);",
    "cssProperties": [
      "padding-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pr-4": {
    "css": "padding-right: calc(var(--spacing) * 4);",
    "cssProperties": [
      "padding-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pr-8": {
    "css": "padding-right: calc(var(--spacing) * 8);",
    "cssProperties": [
      "padding-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pr-16": {
    "css": "padding-right: calc(var(--spacing) * 16);",
    "cssProperties": [
      "padding-right"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pb-0": {
    "css": "padding-bottom: calc(var(--spacing) * 0);",
    "cssProperties": [
      "padding-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pb-0.5": {
    "css": "padding-bottom: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "padding-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pb-1": {
    "css": "padding-bottom: calc(var(--spacing) * 1);",
    "cssProperties": [
      "padding-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pb-4": {
    "css": "padding-bottom: calc(var(--spacing) * 4);",
    "cssProperties": [
      "padding-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pb-8": {
    "css": "padding-bottom: calc(var(--spacing) * 8);",
    "cssProperties": [
      "padding-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pb-16": {
    "css": "padding-bottom: calc(var(--spacing) * 16);",
    "cssProperties": [
      "padding-bottom"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pl-0": {
    "css": "padding-left: calc(var(--spacing) * 0);",
    "cssProperties": [
      "padding-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pl-0.5": {
    "css": "padding-left: calc(var(--spacing) * 0.5);",
    "cssProperties": [
      "padding-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pl-1": {
    "css": "padding-left: calc(var(--spacing) * 1);",
    "cssProperties": [
      "padding-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pl-4": {
    "css": "padding-left: calc(var(--spacing) * 4);",
    "cssProperties": [
      "padding-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pl-8": {
    "css": "padding-left: calc(var(--spacing) * 8);",
    "cssProperties": [
      "padding-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "pl-16": {
    "css": "padding-left: calc(var(--spacing) * 16);",
    "cssProperties": [
      "padding-left"
    ],
    "customProperties": {
      "--spacing": "0.25rem"
    }
  },
  "caret-black": {
    "css": "caret-color: var(--color-black);",
    "cssProperties": [
      "caret-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "caret-current": {
    "css": "caret-color: currentcolor;",
    "cssProperties": [
      "caret-color"
    ]
  },
  "caret-inherit": {
    "css": "caret-color: inherit;",
    "cssProperties": [
      "caret-color"
    ]
  },
  "caret-red-500": {
    "css": "caret-color: var(--color-red-500);",
    "cssProperties": [
      "caret-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "caret-transparent": {
    "css": "caret-color: transparent;",
    "cssProperties": [
      "caret-color"
    ]
  },
  "caret-white": {
    "css": "caret-color: var(--color-white);",
    "cssProperties": [
      "caret-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "accent-black": {
    "css": "accent-color: var(--color-black);",
    "cssProperties": [
      "accent-color"
    ],
    "customProperties": {
      "--color-black": "#000"
    }
  },
  "accent-current": {
    "css": "accent-color: currentcolor;",
    "cssProperties": [
      "accent-color"
    ]
  },
  "accent-inherit": {
    "css": "accent-color: inherit;",
    "cssProperties": [
      "accent-color"
    ]
  },
  "accent-red-500": {
    "css": "accent-color: var(--color-red-500);",
    "cssProperties": [
      "accent-color"
    ],
    "customProperties": {
      "--color-red-500": "oklch(63.7% 0.237 25.331)"
    }
  },
  "accent-transparent": {
    "css": "accent-color: transparent;",
    "cssProperties": [
      "accent-color"
    ]
  },
  "accent-white": {
    "css": "accent-color: var(--color-white);",
    "cssProperties": [
      "accent-color"
    ],
    "customProperties": {
      "--color-white": "#fff"
    }
  },
  "-inset-1/2": {
    "css": "inset: calc(calc(1/2 * 100%) * -1);",
    "cssProperties": [
      "inset"
    ]
  },
  "rounded": {
    "css": "border-radius: 0.25rem;",
    "cssProperties": [
      "border-radius"
    ]
  },
  "rounded-lg": {
    "css": "border-radius: var(--radius-lg);",
    "cssProperties": [
      "border-radius"
    ],
    "customProperties": {
      "--radius-lg": "0.5rem"
    }
  },
  "rounded-md": {
    "css": "border-radius: var(--radius-md);",
    "cssProperties": [
      "border-radius"
    ],
    "customProperties": {
      "--radius-md": "0.375rem"
    }
  },
  "border": {
    "css": "border-style: var(--tw-border-style);\n    border-width: 1px;",
    "cssProperties": [
      "border-style",
      "border-width"
    ]
  },
  "text-2xl": {
    "css": "font-size: var(--text-2xl);\n    line-height: var(--tw-leading, var(--text-2xl--line-height));",
    "cssProperties": [
      "font-size",
      "line-height"
    ],
    "customProperties": {
      "--text-2xl": "1.5rem"
    }
  },
  "text-3xl": {
    "css": "font-size: var(--text-3xl);\n    line-height: var(--tw-leading, var(--text-3xl--line-height));",
    "cssProperties": [
      "font-size",
      "line-height"
    ],
    "customProperties": {
      "--text-3xl": "1.875rem"
    }
  },
  "text-4xl": {
    "css": "font-size: var(--text-4xl);\n    line-height: var(--tw-leading, var(--text-4xl--line-height));",
    "cssProperties": [
      "font-size",
      "line-height"
    ],
    "customProperties": {
      "--text-4xl": "2.25rem"
    }
  },
  "text-base": {
    "css": "font-size: var(--text-base);\n    line-height: var(--tw-leading, var(--text-base--line-height));",
    "cssProperties": [
      "font-size",
      "line-height"
    ],
    "customProperties": {
      "--text-base": "1rem"
    }
  },
  "text-lg": {
    "css": "font-size: var(--text-lg);\n    line-height: var(--tw-leading, var(--text-lg--line-height));",
    "cssProperties": [
      "font-size",
      "line-height"
    ],
    "customProperties": {
      "--text-lg": "1.125rem"
    }
  },
  "text-sm": {
    "css": "font-size: var(--text-sm);\n    line-height: var(--tw-leading, var(--text-sm--line-height));",
    "cssProperties": [
      "font-size",
      "line-height"
    ],
    "customProperties": {
      "--text-sm": "0.875rem"
    }
  },
  "text-xl": {
    "css": "font-size: var(--text-xl);\n    line-height: var(--tw-leading, var(--text-xl--line-height));",
    "cssProperties": [
      "font-size",
      "line-height"
    ],
    "customProperties": {
      "--text-xl": "1.25rem"
    }
  },
  "text-xs": {
    "css": "font-size: var(--text-xs);\n    line-height: var(--tw-leading, var(--text-xs--line-height));",
    "cssProperties": [
      "font-size",
      "line-height"
    ],
    "customProperties": {
      "--text-xs": "0.75rem"
    }
  },
  "font-bold": {
    "css": "--tw-font-weight: var(--font-weight-bold);\n    font-weight: var(--font-weight-bold);",
    "cssProperties": [
      "font-weight"
    ],
    "customProperties": {
      "--font-weight-bold": "700"
    },
    "atProperties": [
      {
        "name": "--tw-font-weight",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "font-light": {
    "css": "--tw-font-weight: var(--font-weight-light);\n    font-weight: var(--font-weight-light);",
    "cssProperties": [
      "font-weight"
    ],
    "customProperties": {
      "--font-weight-light": "300"
    },
    "atProperties": [
      {
        "name": "--tw-font-weight",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "font-medium": {
    "css": "--tw-font-weight: var(--font-weight-medium);\n    font-weight: var(--font-weight-medium);",
    "cssProperties": [
      "font-weight"
    ],
    "customProperties": {
      "--font-weight-medium": "500"
    },
    "atProperties": [
      {
        "name": "--tw-font-weight",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "font-normal": {
    "css": "--tw-font-weight: var(--font-weight-normal);\n    font-weight: var(--font-weight-normal);",
    "cssProperties": [
      "font-weight"
    ],
    "customProperties": {
      "--font-weight-normal": "400"
    },
    "atProperties": [
      {
        "name": "--tw-font-weight",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "font-semibold": {
    "css": "--tw-font-weight: var(--font-weight-semibold);\n    font-weight: var(--font-weight-semibold);",
    "cssProperties": [
      "font-weight"
    ],
    "customProperties": {
      "--font-weight-semibold": "600"
    },
    "atProperties": [
      {
        "name": "--tw-font-weight",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "font-thin": {
    "css": "--tw-font-weight: var(--font-weight-thin);\n    font-weight: var(--font-weight-thin);",
    "cssProperties": [
      "font-weight"
    ],
    "customProperties": {
      "--font-weight-thin": "100"
    },
    "atProperties": [
      {
        "name": "--tw-font-weight",
        "syntax": "*",
        "inherits": false
      }
    ]
  },
  "shadow": {
    "css": "--tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "shadow-2xl": {
    "css": "--tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "shadow-lg": {
    "css": "--tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "shadow-md": {
    "css": "--tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  },
  "shadow-xl": {
    "css": "--tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);",
    "cssProperties": [
      "box-shadow"
    ],
    "atProperties": [
      {
        "name": "--tw-shadow",
        "syntax": "*",
        "inherits": false,
        "initialValue": "0 0 #0000"
      }
    ]
  }
}